<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="installing">
  <title>Installing MacPorts</title>

  <para>This chapter shows you how to install MacPorts and its prerequisites
  step-by-step. Note that section 1 and section 2 (installing X11 and Xcode
  Tools) are Mac OS X specific. If you wish to install MacPorts on another
  platform, first make sure you have X11 and gcc installed, and then begin at
  section 3.2 by performing <link
  linkend="installing.macports.source">MacPorts install from source</link> and
  proceed to the end of the chapter.</para>

  <section id="installing.x11">
    <title>Install X11</title>

    <para>It is recommended that you install the X Window System (X11) even if
    you don't plan to run X11 applications immediately. Apple's X11 is
    preferred over either of the X11 ports, XFree86 and Xorg, therefore
    Apple's X11 is normally used to satisfy ports that depend upon X11 (see
    <link linkend="reference.dependencies.types">non-port
    dependencies</link>). If Apple's X11 wasn't installed when Mac OS X was
    installed, follow these steps.</para>

    <orderedlist>
      <listitem>
        <para>Insert the <quote>Mac OS X Install Disk</quote> and run the
        package named <quote>Optional Installs</quote>.</para>
      </listitem>

      <listitem>
        <para>At the software selection window expand the
        <guilabel>Applications</guilabel> category and click the check box
        beside <guilabel>X11</guilabel> (and nothing else).</para>
      </listitem>

      <listitem>
        <para>Click <guibutton>Install</guibutton> to install X11.</para>
      </listitem>
    </orderedlist>

    <para>Before launching an X11 application, you must open a terminal window
    and start an xterm session.</para>

    <programlisting><prompt>%%</prompt> <userinput>xterm</userinput></programlisting>

    <para>After the X11 session window opens, you may launch X11 apps from
    another terminal window. See <link
    linkend="installing.x11.settings">Optional X11 Settings</link> if you wish
    to launch X11 applications from an X11 session window.</para>

    <note>
      <para>X11 and the X11SDK (from Xcode Tools) are both required for X11
      apps. To verify the presence of both, check for files
      <filename>com.apple.pkg.X11User.bom</filename> &amp;
      <filename>com.apple.pkg.X11SDKLeo.bom</filename> in
      <filename>/Library/Receipts/boms/</filename>. On Mac OS X 10.4, look for
      files <filename>X11User.pkg</filename> &amp;
      <filename>X11SDK.pkg</filename> in
      <filename>/Library/Receipts/</filename>.</para>
    </note>

    <section id="installing.x11.settings">
      <title>Optional X11 Settings</title>

      <para>To launch X11 applications directly from an X11 window (instead of
      a regular terminal window), you need to make it so X11 sessions opened
      using the menu bar respect your <filename>.~profile</filename>
      file.</para>

      <orderedlist>
        <listitem>
          <para>Open X11 and select <guimenuitem>Customize Menu
          ...</guimenuitem> from the <guimenu>Applications</guimenu>
          menu.</para>
        </listitem>

        <listitem>
          <para>Double-click the menu item <guimenuitem>Terminal</guimenuitem>
          and change: <quote>xterm</quote> to <quote>xterm -ls</quote></para>
        </listitem>

        <listitem>
          <para>Click <guibutton>Done</guibutton> to save the change.</para>
        </listitem>
      </orderedlist>
    </section>
  </section>

  <section id="installing.xcode">
    <title>Install Xcode Tools</title>

    <para>To install Xcode Tools and the X11 SDK, follow these steps.</para>

    <orderedlist>
      <listitem>
        <para>Always make sure to install the latest version of Xcode Tools
        for your Mac OS X release. Apple's Developer Connection site has a
        link for the <ulink
        url="http://developer.apple.com/technology/xcode.html">latest version
        of Xcode Tools</ulink> for the currently shipping release of Mac OS X,
        because earlier versions of Xcode Tools may cause port install
        failures. To download the latest Xcode Tools version for Mac OS X 10.4
        (2.5) or 10.3 (1.5), see the Developer Connection links <ulink
        url="http://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/getSoftware?bundleID=19907">here</ulink>
        and <ulink url="http://connect.apple.com/">here</ulink>
        respectively.</para>
      </listitem>

      <listitem>
        <para>Run the Xcode Tools package installer.</para>
      </listitem>

      <listitem>
        <para>Click the button <guibutton>Customize</guibutton>, expand the
        Applications category and click the check box beside <guibutton>X11
        SDK</guibutton> to add it to the default items.</para>
      </listitem>

      <listitem>
        <para>Click <guibutton>Install</guibutton> to install Xcode Tools and
        the X11 SDK.</para>
      </listitem>
    </orderedlist>

    <note>
      <para>Xcode Tools are not updated via Mac OS X's Software Update
      utility.</para>
    </note>
  </section>

  <section id="installing.macports">
    <title>Install MacPorts</title>

    <para>If you are using Mac OS X, you should install MacPorts using the Mac
    OS X package installer unless you do not wish to install it to
    <filename>/opt/local/</filename>, the default MacPorts location, or if you
    wish to install a pre-release version of MacPorts base. However, if you
    wish to <link linkend="installing.macports.source.multiple">install
    multiple copies of MacPorts</link> or install MacPorts on another OS
    platform, you must <link linkend="installing.macports.source">install
    MacPorts from the source code</link>.</para>

    <note>
      <para>Though a distinction is made between pre-release and release
      versions of MacPorts base, the ports collection supports no such
      distinction or versioning. The <link
      linkend="using.port.selfupdate">selfupdate</link> command installs the
      latest port revisions from subversion (at a slight delay), and updates
      MacPorts base to the latest released version.</para>
    </note>

    <section id="installing.macports.binary">
      <title>Mac OS X Package Install</title>

      <para>The Mac OS X package installer automatically installs MacPorts,
      <link linkend="installing.shell">sets the shell environment</link>, and
      runs a <link linkend="using.port.selfupdate">selfupdate</link> operation
      to update the ports tree and MacPorts base with the latest
      release.</para>

      <orderedlist>
        <listitem>
          <para>Download the latest <filename>MacPorts-1.x.x.dmg</filename>
          disk image from the <ulink
          url="http://svn.macports.org/repository/macports/downloads/">MacPorts
          download directory</ulink>.</para>
        </listitem>

        <listitem>
          <para>Double-click the <filename>MacPorts-1.x.x.pkg</filename>
          package installer on the disk image.</para>
        </listitem>

        <listitem>
          <para>Perform the default <quote>easy</quote> install.</para>
        </listitem>
      </orderedlist>
    </section>

    <section id="installing.macports.source">
      <title>Source Install</title>

      <para>If you installed MacPorts using the package installer, skip this
      section. To install MacPorts from the source code, follow the steps
      below.</para>

      <orderedlist>
        <listitem>
          <para>Download and unzip the latest MacPorts tarball from the <ulink
          url="http://svn.macports.org/repository/macports/downloads/">MacPorts
          download directory</ulink>.</para>
        </listitem>

        <listitem>
          <para>Perform the commands shown in a terminal window. If you wish
          to use a path other than <filename>/opt/local</filename>, use the
          option <option>--prefix</option> and substitute a path for
          NEW_PREFIX.</para>

          <programlisting><prompt>%%</prompt> <userinput>cd ~/MacPorts-1.x.x/</userinput>
<prompt>%%</prompt> <userinput>./configure</userinput> --prefix=NEW_PREFIX  (setting prefix is optional)
<prompt>%%</prompt> <userinput>make</userinput>
<prompt>%%</prompt> <userinput>sudo make install</userinput></programlisting>
        </listitem>
      </orderedlist>

      <section id="installing.macports.source.multiple">
        <title>Install Multiple MacPorts Copies</title>

        <para>Occasionally a MacPorts developer may wish to install more than
        one MacPorts instance on the same host. Only one copy of MacPorts may
        use the default Tcl library path <filename>/Library/Tcl/</filename>,
        so for additional installations use the option
        <option>--with-tclpackage</option> as shown below and substitute
        NEW_TCL_PACKAGE with any empty directory, for example
        <filename>/Library/Tcl/macports-new/</filename>.</para>

        <note>
          <para>The first command temporarily removes the standard MacPorts
          binary paths because they must not be present while installing a
          second instance.</para>
        </note>

        <programlisting><prompt>%%</prompt> <userinput>export PATH=/bin:/sbin:/usr/bin:/usr/sbin</userinput>
<prompt>%%</prompt> <userinput>cd ~/MacPorts-1.x.x/</userinput>
<prompt>%%</prompt> <userinput>./configure --prefix=NEW_PREFIX --with-tclpackage=NEW_TCLPACKAGE</userinput>
<prompt>%%</prompt> <userinput>make</userinput>
<prompt>%%</prompt> <userinput>sudo make install</userinput>
</programlisting>
      </section>
    </section>

    <section id="installing.macports.upgrade">
      <title>MacPorts Upgrade</title>

      <para>MacPorts base upgrades are performed automatically (when a newer
      release is available) during a <link
      linkend="using.port.selfupdate">selfupdate</link> operation. To upgrade
      a copy of MacPorts that was installed from source to the newer release
      of the source code, simply repeat the <link
      linkend="installing.macports.source">source install</link> with the
      newer version of the MacPorts source code.</para>
    </section>

    <section id="installing.macports.uninstalling">
      <title>Uninstall</title>

      <para>To uninstall MacPorts from the default location
      <filename>/opt/local/</filename>, perform this command from a terminal
      window.</para>

      <programlisting><prompt>%%</prompt> <userinput>sudo rm -rf \
    /opt/local \
    /etc/manpaths.d/macports \
    /etc/paths.d/macports \
    /Applications/DarwinPorts \
    /Applications/MacPorts \
    /Library/LaunchDaemons/org.macports.* \
    /Library/Receipts/DarwinPorts*.pkg \
    /Library/Receipts/MacPorts*.pkg \
    /Library/StartupItems/DarwinPortsStartup \
    /Library/Tcl/darwinports1.0 \
    /Library/Tcl/macports1.0</userinput></programlisting>
    </section>
  </section>

  <section id="installing.shell">
    <title>MacPorts and the Shell</title>

    <para>MacPorts requires that some environmental variables be set in the
    shell. When MacPorts is installed using the Mac OS X package installer, a
    <quote>postflight</quote> script is run after installation that
    automatically copies a <filename>.profile</filename> containing variables
    according to the rules described in the following section. Those <link
    linkend="installing.macports.source">installing MacPorts from source
    code</link> must modify their environment manually using the rules as a
    guide.</para>

    <note>
      <para>If you have either a <filename>.bash_login</filename> or a
      <filename>.bash_profile</filename> file in your home directory, they may
      take precedence over <filename>.profile</filename>. You may either
      remove the previously used file, or add the contents of
      <filename>.profile</filename> to it.</para>
    </note>

    <section id="installing.shell.postflight">
      <title>The Postflight Script</title>

      <para>The postflight script automatically copies a
      <filename>.profile</filename> containing the <varname>PATH</varname>
      variable, and optionally the <varname>MANPATH</varname> and
      <varname>DISPLAY</varname> variables according to the rules described
      below. If a current <filename>.profile</filename> file exists at
      installation time it is renamed to <quote>mpsaved_$timestamp</quote>.
      Those <link linkend="installing.macports.source">installing MacPorts
      from source code</link> must modify their environment manually using the
      rules as a guide.</para>

      <itemizedlist>
        <listitem>
          <para>Required: <varname>PATH</varname> variable</para>

          <para>This variable is set by the postflight script to append the
          MacPorts executable paths to the default path as shown. The MacPorts
          paths are appended at the front of <varname>PATH</varname> so the
          MacPorts libraries will take precedence over vendor-supplied
          libraries for ported software at runtime.</para>

          <programlisting>export PATH=/opt/local/bin:/opt/local/sbin:$PATH</programlisting>

          <note>
            <para>The user environment's $PATH is not in effect while ports
            are being installed, because the $PATH is scrubbed before ports
            are installed, and restored afterwards. To change the search path
            for locating system executables (rsync, tar, etc.) during port
            installation, see the <link
            linkend="internals.configuration-files.macports-conf">macports.conf</link>
            file variable <varname>binpath</varname>. But changing this
            variable is for advanced users only, and is not generally needed
            or recomended.</para>
          </note>
        </listitem>

        <listitem>
          <para>Optional: <varname>MANPATH</varname> variable</para>

          <para>Condition: If prior to MacPorts installation a
          <varname>MANPATH</varname> variable exists in a current
          <filename>.profile</filename> that contains neither the value
          <filename>${prefix}/share/man,</filename> nor any empty values, the
          postflight script sets the <varname>MANPATH</varname> variable as
          shown below. Otherwise, the <varname>MANPATH</varname> variable is
          omitted.</para>

          <programlisting>export MANPATH=/opt/local/share/man:$MANPATH</programlisting>

          <para>Here are some examples of paths that contain empty
          values:</para>

          <simplelist>
            <member>/usr/share/man:</member>

            <member>:/usr/share/man</member>

            <member>/usr/share/man::/usr/X11R6/man</member>
          </simplelist>
        </listitem>

        <listitem>
          <para>Optional: <varname>DISPLAY</varname> variable</para>

          <para>Condition: If installing on a Mac OS X version earlier than
          10.5 (Leopard), and if a<filename> .profile</filename> file exists
          at time of MacPorts installation without a
          <varname>DISPLAY</varname> variable, the postflight script sets a
          <varname>DISPLAY</varname> variable as shown below. The
          <varname>DISPLAY</varname> variable is always omitted on Mac OS X
          10.5 or higher.</para>

          <programlisting>export DISPLAY=:0.0</programlisting>
        </listitem>
      </itemizedlist>
    </section>

    <section id="installing.shell.verifyprofile">
      <title>Verify the .profile</title>

      <para>To verify that the <filename>.profile</filename> containing the
      MacPorts variables is in effect, type <command>env</command> in the
      terminal to verify the current environment settings after the
      <filename>.profile</filename> has been created. Example output for the
      <command>env</command> command is shown below.</para>

      <note>
        <para>Changes to <filename>~/.profile</filename> do not take effect
        until a new terminal session is opened.</para>
      </note>

      <screen>MANPATH=
TERM_PROGRAM=Apple_Terminal
TERM=xterm-color
SHELL=/bin/bash
TERM_PROGRAM_VERSION=237
USER=joebob
__CF_USER_TEXT_ENCODING=0x1FC:0:0
PATH=/opt/local/bin:/opt/local/sbin:/bin:/sbin:/usr/bin:/usr/sbin
PWD=/Users/joebob
EDITOR=/usr/bin/pico
SHLVL=1
HOME=/Users/joebob
LOGNAME=joebob
DISPLAY=:0.0
SECURITYSESSIONID=b0cea0
_=/usr/bin/env</screen>
    </section>

    <section id="installing.shell.editorvar">
      <title>Optional EDITOR Variable</title>

      <para>A useful environment variable to set in
      <filename>.profile</filename> is the <varname>EDITOR</varname> variable.
      Setting this variable allows you to use the edit option to the port
      command to edit Portfiles quickly and easily. Set the
      <varname>EDITOR</varname> variable to point to your favorite text
      editor.</para>

      <para>For example, to use the nano editor, add this line to your
      <filename>~/.profile</filename>:</para>

      <programlisting>export EDITOR=/usr/bin/nano</programlisting>

      <para>To use the user-friendly GUI editor <ulink
      url="http://www.barebones.com/products/textwrangler/">TextWrangler</ulink>
      (installation required), add this line to your
      <filename>~/.profile</filename>:</para>

      <programlisting>export EDITOR=/usr/bin/edit</programlisting>
    </section>
  </section>
</chapter>