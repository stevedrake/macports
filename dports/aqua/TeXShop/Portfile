# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0
PortGroup       xcode 1.0

name            TeXShop
version         2.26
revision		1
categories      aqua editors

maintainers     snc openmaintainer
description     TeX previewer for Mac OS X
long_description   \
    TeXShop is a TeX previewer for Mac OS X, written in Cocoa.  \
    Since pdf is a native file format on OS X, TeXShop uses     \
    "pdftex" and "pdflatex" rather than "tex" and "latex" to    \
    typeset, these programs in the standard teTeX distribution  \
    of TeX produce pdf output instead of dvi output.
homepage        http://www.uoregon.edu/~koch/texshop/texshop.html
master_sites    http://www.uoregon.edu/~koch/texshop
use_zip         yes
distname        texshopsource-${version}
dist_subdir     ${name}/${version}_${revision}
worksrcdir      texshop${version}
checksums           md5     af7f1d9735fd84bf380c34ebe09401c3 \
                    sha1    fbdf076d4856486f6e91971fa81b9ebd8aae27bc \
                    rmd160  906b28a596929d896bea1c547644594942e3dcbb

platform darwin 7 {
pre-fetch {
return -code error "\n
    TeXShop 2.x will not install on less than OS X 10.4 and there isn't a
    TeXShop 1.x port contributed as yet to accommodate 10.3.\n"
}
}

post-extract	{
	reinplace "s/defaultConfigurationName = Debug/defaultConfigurationName = Release/" ${worksrcpath}/${name}.xcodeproj/project.pbxproj
    
    set sparkle "Sparkle.framework/Versions/A/Sparkle"
    set ogrekit "OgreKit.framework/Versions/A/OgreKit"
    if {![variant_isset universal]} {
        # thin the bundled frameworks
        if {${os.major} >= 10 && $tcl_platform(wordSize) == 8} {
            set arch x86_64
        } elseif {${os.arch} == "powerpc"} {
            set arch ppc
        } else {
            set arch i386
        }
        system "cd ${worksrcpath} && lipo -thin $arch $sparkle -output $sparkle"
        system "cd ${worksrcpath} && lipo -thin $arch $ogrekit -output $ogrekit"
    } elseif {${os.major} == 8} {
        # Tiger chokes on the x86_64
        system "cd ${worksrcpath} && lipo -remove x86_64 $sparkle -output $sparkle"
    }
}

build.target    ${name}

xcode.project		${name}.xcodeproj
xcode.configuration	Release
xcode.build.settings    FRAMEWORK_SEARCH_PATHS=${worksrcpath} \
			CONFIGURATION_BUILD_DIR=${worksrcpath}/build

destroot.target     ${name}
eval xcode.destroot.settings INSTALL_MODE_FLAG=755 ${xcode.build.settings}
post-destroot        {
	file delete -force ${destroot}${applications_dir}/TeX.mdimporter

	xinstall -m 755 ${filespath}/lilypond.engine ${destroot}${applications_dir}/${name}.app/Contents/Resources/${name}/Engines/Lilypond.engine
    reinplace s|@@PREFIX@@|${prefix}|g ${destroot}${applications_dir}/${name}.app/Contents/Resources/${name}/Engines/Lilypond.engine
    ui_msg "If you intend to use the Lilypond engine, please copy ${applications_dir}/${name}.app/Contents/Resources/${name}/Engines/Lilypond.engine to ~/Library/${name}/Engines/Lilypond.engine"
}

livecheck.check     regex
livecheck.url       ${homepage}
livecheck.regex     "${name} (\\d+\\.\\d+)"
