--- SConstruct.orig	2009-03-26 14:12:56.000000000 -0700
+++ SConstruct	2009-03-27 19:42:00.000000000 -0700
@@ -485,30 +485,30 @@
 libraries['core'] = LibraryInfo (CCFLAGS = '-Ilibs')
 
 #libraries['sndfile'] = LibraryInfo()
-#libraries['sndfile'].ParseConfig('pkg-config --cflags --libs sndfile')
+#libraries['sndfile'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs sndfile')
 
 libraries['lrdf'] = LibraryInfo()
-libraries['lrdf'].ParseConfig('pkg-config --cflags --libs lrdf')
+libraries['lrdf'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs lrdf')
 
 libraries['raptor'] = LibraryInfo()
-libraries['raptor'].ParseConfig('pkg-config --cflags --libs raptor')
+libraries['raptor'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs raptor')
 
 libraries['samplerate'] = LibraryInfo()
-libraries['samplerate'].ParseConfig('pkg-config --cflags --libs samplerate')
+libraries['samplerate'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs samplerate')
 
 conf = env.Configure (custom_tests = { 'CheckPKGExists' : CheckPKGExists } )
 
 if conf.CheckPKGExists ('fftw3f'):
     libraries['fftw3f'] = LibraryInfo()
-    libraries['fftw3f'].ParseConfig('pkg-config --cflags --libs fftw3f')
+    libraries['fftw3f'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs fftw3f')
 
 if conf.CheckPKGExists ('fftw3'):
     libraries['fftw3'] = LibraryInfo()
-    libraries['fftw3'].ParseConfig('pkg-config --cflags --libs fftw3')
+    libraries['fftw3'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs fftw3')
 
 if conf.CheckPKGExists ('aubio'):
     libraries['aubio'] = LibraryInfo()
-    libraries['aubio'].ParseConfig('pkg-config --cflags --libs aubio')
+    libraries['aubio'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs aubio')
     env['AUBIO'] = 1
 else:
     env['AUBIO'] = 0
@@ -540,7 +540,7 @@
 		print ('Ardour cannot be compiled without the curl headers, which do not seem to be installed')
 		sys.exit (1)            
 	else:
-		libraries['curl'].ParseConfig('pkg-config --cflags --libs libcurl')
+		libraries['curl'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libcurl')
 	conf.Finish()
 else:
 	print 'FREESOUND support is not enabled.  Build with \'scons FREESOUND=1\' to enable.'
@@ -550,7 +550,7 @@
 	
 	if conf.CheckPKGVersion('slv2', '0.6.1'):
 		libraries['slv2'] = LibraryInfo()
-		libraries['slv2'].ParseConfig('pkg-config --cflags --libs slv2')
+		libraries['slv2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs slv2')
                 env.Append (CCFLAGS="-DHAVE_LV2")
 	else:
 		print 'LV2 support is not enabled (SLV2 not found or older than 0.6.0)'
@@ -563,31 +563,31 @@
 	print 'WIIMOTE not enabled. Build with \'scons WIIMOTE=1\' to enable support.'
 
 libraries['jack'] = LibraryInfo()
-libraries['jack'].ParseConfig('pkg-config --cflags --libs jack')
+libraries['jack'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs jack')
 
 libraries['xml'] = LibraryInfo()
-libraries['xml'].ParseConfig('pkg-config --cflags --libs libxml-2.0')
+libraries['xml'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libxml-2.0')
 
 libraries['xslt'] = LibraryInfo()
-libraries['xslt'].ParseConfig('pkg-config --cflags --libs libxslt')
+libraries['xslt'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libxslt')
 
 libraries['glib2'] = LibraryInfo()
-libraries['glib2'].ParseConfig ('pkg-config --cflags --libs glib-2.0')
-libraries['glib2'].ParseConfig ('pkg-config --cflags --libs gobject-2.0')
-libraries['glib2'].ParseConfig ('pkg-config --cflags --libs gmodule-2.0')
-libraries['glib2'].ParseConfig ('pkg-config --cflags --libs gthread-2.0')
+libraries['glib2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs glib-2.0')
+libraries['glib2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs gobject-2.0')
+libraries['glib2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs gmodule-2.0')
+libraries['glib2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs gthread-2.0')
 
 libraries['freetype2'] = LibraryInfo()
-libraries['freetype2'].ParseConfig ('pkg-config --cflags --libs freetype2')
+libraries['freetype2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs freetype2')
 
 libraries['gtk2'] = LibraryInfo()
-libraries['gtk2'].ParseConfig ('pkg-config --cflags --libs gtk+-2.0')
+libraries['gtk2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs gtk+-2.0')
 
 libraries['pango'] = LibraryInfo()
-libraries['pango'].ParseConfig ('pkg-config --cflags --libs pango')
+libraries['pango'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs pango')
 
 libraries['libgnomecanvas2'] = LibraryInfo()
-libraries['libgnomecanvas2'].ParseConfig ('pkg-config --cflags --libs libgnomecanvas-2.0')
+libraries['libgnomecanvas2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libgnomecanvas-2.0')
 
 #libraries['flowcanvas'] = LibraryInfo(LIBS='flowcanvas', LIBPATH='#/libs/flowcanvas', CPPPATH='#libs/flowcanvas')
 
@@ -869,7 +869,7 @@
 
 conf = Configure (env)
 
-if conf.CheckHeader ('fftw3.h'):
+if conf.CheckHeader ('@MP_PREFIX@/include/fftw3.h'):
     env['RUBBERBAND'] = True
     libraries['rubberband'] = LibraryInfo (LIBS='rubberband',
                                            LIBPATH='#libs/rubberband',
@@ -926,7 +926,7 @@
 
 libraries['flac'] = LibraryInfo ()
 prep_libcheck(env, libraries['flac'])
-libraries['flac'].Append(CPPPATH="/usr/local/include", LIBPATH="/usr/local/lib")
+libraries['flac'].Append(CPPPATH="@MP_PREFIX@/include", LIBPATH="@MP_PREFIX@/lib")
 
 #
 # june 1st 2007: look for a function that is in FLAC 1.1.2 and not in later versions
@@ -950,7 +950,7 @@
 
 libraries['boost'] = LibraryInfo ()
 prep_libcheck(env, libraries['boost'])
-libraries['boost'].Append(CPPPATH="/usr/local/include", LIBPATH="/usr/local/lib")
+libraries['boost'].Append(CPPPATH="@MP_PREFIX@/include", LIBPATH="@MP_PREFIX@/lib")
 conf = Configure (libraries['boost'])
 if conf.CheckHeader ('boost/shared_ptr.hpp', language='CXX') == False:
         print "Boost header files do not appear to be installed. You also might be running a buggy version of scons. Try scons 0.97 if you can."
@@ -964,6 +964,7 @@
 if env['LIBLO']:
     libraries['lo'] = LibraryInfo ()
     prep_libcheck(env, libraries['lo'])
+    libraries['lo'].Append(CPPPATH="@MP_PREFIX@/include", LIBPATH="@MP_PREFIX@/lib")
 
     conf = Configure (libraries['lo'])
     if conf.CheckLib ('lo', 'lo_server_new') == False:
@@ -1065,21 +1066,21 @@
     env = conf.Finish()
     
     libraries['sigc2'] = LibraryInfo()
-    libraries['sigc2'].ParseConfig('pkg-config --cflags --libs sigc++-2.0')
+    libraries['sigc2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs sigc++-2.0')
     libraries['glibmm2'] = LibraryInfo()
-    libraries['glibmm2'].ParseConfig('pkg-config --cflags --libs glibmm-2.4')
+    libraries['glibmm2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs glibmm-2.4')
     libraries['cairomm'] = LibraryInfo()
-    libraries['cairomm'].ParseConfig('pkg-config --cflags --libs cairomm-1.0')
+    libraries['cairomm'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs cairomm-1.0')
     libraries['gdkmm2'] = LibraryInfo()
-    libraries['gdkmm2'].ParseConfig ('pkg-config --cflags --libs gdkmm-2.4')
+    libraries['gdkmm2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs gdkmm-2.4')
     libraries['gtkmm2'] = LibraryInfo()
-    libraries['gtkmm2'].ParseConfig ('pkg-config --cflags --libs gtkmm-2.4')
+    libraries['gtkmm2'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs gtkmm-2.4')
     libraries['atkmm'] = LibraryInfo()
-    libraries['atkmm'].ParseConfig ('pkg-config --cflags --libs atkmm-1.6')
+    libraries['atkmm'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs atkmm-1.6')
     libraries['pangomm'] = LibraryInfo()
-    libraries['pangomm'].ParseConfig ('pkg-config --cflags --libs pangomm-1.4')
+    libraries['pangomm'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs pangomm-1.4')
     libraries['libgnomecanvasmm'] = LibraryInfo()
-    libraries['libgnomecanvasmm'].ParseConfig ('pkg-config --cflags --libs libgnomecanvasmm-2.6')
+    libraries['libgnomecanvasmm'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libgnomecanvasmm-2.6')
 
 #
 # cannot use system one for the time being
@@ -1090,13 +1091,13 @@
                                     CPPPATH=['#libs/libsndfile/src'])
 
 #    libraries['libglademm'] = LibraryInfo()
-#    libraries['libglademm'].ParseConfig ('pkg-config --cflags --libs libglademm-2.4')
+#    libraries['libglademm'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libglademm-2.4')
 
 #    libraries['flowcanvas'] = LibraryInfo(LIBS='flowcanvas', LIBPATH='#/libs/flowcanvas', CPPPATH='#libs/flowcanvas')
     libraries['soundtouch'] = LibraryInfo()
-    libraries['soundtouch'].ParseConfig ('pkg-config --cflags --libs soundtouch-1.0')
+    libraries['soundtouch'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs soundtouch-1.0')
     # Comment the previous line and uncomment this for old versions of Debian:
-    #libraries['soundtouch'].ParseConfig ('pkg-config --cflags --libs libSoundTouch')
+    #libraries['soundtouch'].ParseConfig('@MP_PREFIX@/bin/pkg-config --cflags --libs libSoundTouch')
 
     libraries['appleutility'] = LibraryInfo(LIBS='libappleutility',
                                             LIBPATH='#libs/appleutility',
@@ -1299,7 +1300,7 @@
     else:
         print "Found msgmerge"
     
-    if not conf.CheckCHeader('libintl.h'):
+    if not conf.CheckCHeader('@MP_PREFIX@/include/libintl.h'):
         nls_error += ' No libintl.h.'
         env['NLS'] = 0
         
