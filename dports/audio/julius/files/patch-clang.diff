--- libsent/src/ngram/ngram_util.c.orig	2011-04-29 14:09:17.000000000 +0900
+++ libsent/src/ngram/ngram_util.c	2011-11-17 22:30:01.000000000 +0900
@@ -96,7 +96,7 @@
   }
   fprintf(fp, "\t    wordset size = %d\n", ndata->max_word_num);
   for(i=0;i<ndata->n;i++) {
-    fprintf(fp, "\t  %d-gram entries = %10lu  (%5.1f MB)", i+1, ndata->d[i].totalnum, get_ngram_tuple_bytes(&(ndata->d[i])) / 1048576.0);
+    fprintf(fp, "\t  %d-gram entries = %10u  (%5.1f MB)", i+1, ndata->d[i].totalnum, get_ngram_tuple_bytes(&(ndata->d[i])) / 1048576.0);
     if (ndata->d[i].bo_wt != NULL && ndata->d[i].totalnum != ndata->d[i].context_num) {
       fprintf(fp, " (%d%% are valid contexts)", ndata->d[i].context_num * 100 / ndata->d[i].totalnum);
     }
@@ -104,7 +104,7 @@
   }
 
   if (ndata->bo_wt_1) {
-    fprintf(fp, "\tLR 2-gram entries= %10lu  (%5.1f MB)\n", ndata->d[1].totalnum,
+    fprintf(fp, "\tLR 2-gram entries= %10u  (%5.1f MB)\n", ndata->d[1].totalnum,
 	    (sizeof(LOGPROB) * ndata->d[1].totalnum + sizeof(LOGPROB) * ndata->d[0].context_num) / 1048576.0);
   }
   fprintf(fp, "\t           pass1 = ");
--- libsent/src/util/confout.c.orig	2011-04-29 14:09:17.000000000 +0900
+++ libsent/src/util/confout.c	2011-11-17 22:32:19.000000000 +0900
@@ -91,7 +91,7 @@
 #ifdef WORDS_INT
   fprintf(strm, "    word id unit            : integer (%d bytes)\n", sizeof(WORD_ID));
 #else
-  fprintf(strm, "    word id unit            : short (%d bytes)\n", sizeof(WORD_ID));
+  fprintf(strm, "    word id unit            : short (%lu bytes)\n", sizeof(WORD_ID));
 #endif
 }
 
--- libjulius/include/julius/jfunc.h.orig	2011-04-29 14:09:15.000000000 +0900
+++ libjulius/include/julius/jfunc.h	2011-11-17 23:46:45.000000000 +0900
@@ -81,6 +81,8 @@
 boolean j_process_activate_by_id(Recog *recog, int id);
 
 boolean j_process_add_lm(Recog *recog, JCONF_LM *lmconf, JCONF_SEARCH *sconf, char *name);
+boolean j_process_remove(Recog *recog, JCONF_SEARCH *sconf);
+boolean j_process_lm_remove(Recog *recog, JCONF_LM *lmconf);
 boolean j_remove_search(Recog *recog, JCONF_SEARCH *sconf);
 boolean j_remove_lm(Recog *recog, JCONF_LM *lmconf);
 boolean j_remove_am(Recog *recog, JCONF_AM *amconf);
--- julius/main.c.orig	2011-04-29 14:09:14.000000000 +0900
+++ julius/main.c	2011-11-17 22:36:28.000000000 +0900
@@ -194,7 +194,10 @@
 
   /* initialize and standby the specified audio input source */
   /* for microphone or other threaded input, ad-in thread starts here */
-  if (j_adin_init(recog) == FALSE) return;
+  if (j_adin_init(recog) == FALSE) {
+    if (logfile) fclose(fp);
+    return -1;
+  }
 
   /* output system information to log */
   j_recog_info(recog);
--- julius/record.c.orig	2011-04-29 14:09:14.000000000 +0900
+++ julius/record.c	2011-11-17 23:51:19.000000000 +0900
@@ -242,7 +242,7 @@
     return;
   }
   if (verbose_flag) {
-    fprintf(stderr, "recorded to \"%s\" (%d bytes, %.2f sec.)\n", recordfilename, recordlen * sizeof(SP16), (float)recordlen / (float) recog->jconf->input.sfreq);
+    fprintf(stderr, "recorded to \"%s\" (%lu bytes, %.2f sec.)\n", recordfilename, recordlen * sizeof(SP16), (float)recordlen / (float) recog->jconf->input.sfreq);
   }
 }
 
--- adinrec/adinrec.c.orig	2011-04-29 14:09:13.000000000 +0900
+++ adinrec/adinrec.c	2011-11-17 22:38:53.000000000 +0900
@@ -141,7 +141,7 @@
       return -1;
     }
     if (count < len * sizeof(SP16)) {
-      fprintf(stderr, "adinrec: cannot write more %d bytes\ncurrent length = %d\n", count, speechlen * sizeof(SP16));
+      fprintf(stderr, "adinrec: cannot write more %d bytes\ncurrent length = %lu\n", count, speechlen * sizeof(SP16));
       return -1;
     }
   } else {
--- adintool/adintool.c.orig	2011-04-29 14:09:13.000000000 +0900
+++ adintool/adintool.c	2011-11-17 22:40:17.000000000 +0900
@@ -578,7 +578,7 @@
       return -1;
     }
     if (count < len * sizeof(SP16)) {
-      fprintf(stderr, "adinrec: cannot write more %d bytes\ncurrent length = %d\n", count, speechlen * sizeof(SP16));
+      fprintf(stderr, "adinrec: cannot write more %d bytes\ncurrent length = %lu\n", count, speechlen * sizeof(SP16));
       return -1;
     }
   } else {
--- mkss/mkss.c.orig	2011-04-29 14:09:20.000000000 +0900
+++ mkss/mkss.c	2011-11-17 22:41:24.000000000 +0900
@@ -190,7 +190,7 @@
 
   /* close device */
   adin_end(recog->adin);
-  fprintf(stderr, "\n%d samples (%d bytes, %.1f sec) recorded\n", samples, samples * sizeof(SP16), (float)samples / (float)sfreq);
+  fprintf(stderr, "\n%d samples (%lu bytes, %.1f sec) recorded\n", samples, samples * sizeof(SP16), (float)samples / (float)sfreq);
 
   /* compute SS */
   fprintf(stderr, "compute SS:\n");
