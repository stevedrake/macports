--- pit_server.c.orig	2010-12-14 09:22:04.000000000 +1100
+++ pit_server.c	2010-12-14 20:36:31.000000000 +1100
@@ -310,8 +310,8 @@ static int openSckt( const char *service
                   "   ai_family    = %d (PF_INET = %d, PF_INET6 = %d)\n"
                   "   ai_socktype  = %d (SOCK_STREAM = %d, SOCK_DGRAM = %d)\n"
                   "   ai_protocol  = %d (IPPROTO_TCP = %d, IPPROTO_UDP = %d)\n"
-                  "   ai_addrlen   = %d (sockaddr_in = %d, "
-                  "sockaddr_in6 = %d)\n",
+                  "   ai_addrlen   = %d (sockaddr_in = %lu, "
+                  "sockaddr_in6 = %lu)\n",
                   ai->ai_flags,
                   ai->ai_family,
                   PF_INET,
@@ -620,8 +620,8 @@ static void pit( int    tSckt[ ],
                fprintf( stderr,
                         "Sockaddr info for new TCP client:\n"
                         "   sa_family = %d (AF_INET = %d, AF_INET6 = %d)\n"
-                        "   addr len  = %d (sockaddr_in = %d, "
-                        "sockaddr_in6 = %d)\n",
+                        "   addr len  = %d (sockaddr_in = %lu, "
+                        "sockaddr_in6 = %lu)\n",
                         sadr->sa_family,
                         AF_INET,
                         AF_INET6,
@@ -728,7 +728,7 @@ static void pit( int    tSckt[ ],
             {
                ssize_t rBytes = count;
                fprintf( stderr,
-                        "%s: UDP datagram received (%d bytes).\n",
+                        "%s: UDP datagram received (%ld bytes).\n",
                         pgmName,
                         count );
                while ( count > 0 )
@@ -745,8 +745,8 @@ static void pit( int    tSckt[ ],
                fprintf( stderr,
                         "Remote client's sockaddr info:\n"
                         "   sa_family = %d (AF_INET = %d, AF_INET6 = %d)\n"
-                        "   addr len  = %d (sockaddr_in = %d, "
-                        "sockaddr_in6 = %d)\n",
+                        "   addr len  = %d (sockaddr_in = %lu, "
+                        "sockaddr_in6 = %lu)\n",
                         sadr->sa_family,
                         AF_INET,
                         AF_INET6,
--- iozone.c.orig	2010-12-14 09:22:04.000000000 +1100
+++ iozone.c	2010-12-14 20:49:28.000000000 +1100
@@ -7626,18 +7626,18 @@ long long *data1,*data2;
 			{
 #ifdef _64BIT_ARCH_
 #ifdef NO_PRINT_LLD
-				printf("\nError freading block %ld %x\n", i,
+				printf("\nError freading block %lu %lx\n", i,
 					(unsigned long long)buffer);
 #else
-				printf("\nError freading block %ld %x\n", i,
+				printf("\nError freading block %llu %llx\n", i,
 					(unsigned long long)buffer);
 #endif
 #else
 #ifdef NO_PRINT_LLD
-				printf("\nError freading block %ld %lx\n", i,
+				printf("\nError freading block %lu %lx\n", i,
 					(long)buffer);
 #else
-				printf("\nError freading block %lld %lx\n", i,
+				printf("\nError freading block %llu %lx\n", i,
 					(long)buffer);
 #endif
 #endif
@@ -7922,7 +7922,7 @@ long long *data1,*data2;
 		if(read(fd, (void *)nbuff, (size_t) reclen) != reclen)
 		{
 #ifdef _64BIT_ARCH_
-			printf("\nError reading block %d %x\n", 0,
+			printf("\nError reading block %d %llx\n", 0,
 				(unsigned long long)nbuff);
 #else
 			printf("\nError reading block %d %lx\n", 0,
@@ -11516,9 +11516,9 @@ int shared_flag;
         {
                 printf("\nUnable to get shared memory segment(shmget)\n");
 #ifdef NO_PRINT_LLD
-                printf("shmid = %d, size = %ld, size1 = %d, Error %d\n",shmid,size,(size_t)size1,errno);
+                printf("shmid = %d, size = %ld, size1 = %lu, Error %d\n",shmid,size,(size_t)size1,errno);
 #else
-                printf("shmid = %d, size = %lld, size1 = %d, Error %d\n",shmid,size,(size_t)size1,errno);
+                printf("shmid = %d, size = %lld, size1 = %lu, Error %d\n",shmid,size,(size_t)size1,errno);
 #endif
                 exit(119);
         }
@@ -19698,8 +19698,8 @@ int send_size;
 	bzero(&outbuf,sizeof(struct client_neutral_command));
 	if(mdebug)
 	{
-		printf("Master_neutral_command size = %d\n",sizeof(struct master_neutral_command));
-		printf("Client_neutral_command size = %d\n",sizeof(struct client_neutral_command));
+		printf("Master_neutral_command size = %lu\n",sizeof(struct master_neutral_command));
+		printf("Client_neutral_command size = %lu\n",sizeof(struct client_neutral_command));
 	}
 	/* 
 	 * Convert internal commands to string format for neutral format/portability
