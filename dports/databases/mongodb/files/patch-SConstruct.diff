--- SConstruct.orig	2010-09-24 17:32:12.000000000 +0400
+++ SConstruct	2010-09-24 17:36:24.000000000 +0400
@@ -532,20 +532,14 @@
     darwin = True
     platform = "osx" # prettier than darwin
 
-    if env["CXX"] is None:
-        if os.path.exists( "/usr/bin/g++-4.2" ):
-            env["CXX"] = "g++-4.2"
-
     nix = True
 
-    if force64:
-        env.Append( CPPPATH=["/usr/64/include"] )
-        env.Append( LIBPATH=["/usr/64/lib"] )
-        if installDir == DEFAULT_INSTALL_DIR and not distBuild:
-            installDir = "/usr/64/"
-    else:
-        env.Append( CPPPATH=filterExists(["/sw/include" , "/opt/local/include"]) )
-        env.Append( LIBPATH=filterExists(["/sw/lib/", "/opt/local/lib"]) )
+    env.Append( CPPPATH=["@@PREFIX@@/include"] )
+    env.Append( LIBPATH=["@@PREFIX@@/lib/"] )
+    env["CFLAGS"] = os.getenv("CFLAGS")
+    env["CXXFLAGS"] = os.getenv("CXXFLAGS")
+    env["LINKFLAGS"] = os.getenv("LINKFLAGS")
+
 
 elif "linux2" == os.sys.platform:
     linux = True
@@ -992,11 +986,7 @@
         haveReadLine = False
         if darwin:
             myenv.Append( CPPDEFINES=[ "USE_READLINE" ] )
-            if force64:
-                myCheckLib( "readline" , True )
-                myCheckLib( "ncurses" , True )
-            else:
-                myenv.Append( LINKFLAGS=" /usr/lib/libreadline.dylib " )
+            myenv.Append( LINKFLAGS=" @@PREFIX@@/lib/libreadline.dylib " )
         elif openbsd:
             myenv.Append( CPPDEFINES=[ "USE_READLINE" ] )
             myCheckLib( "termcap" , True )
@@ -1242,8 +1232,6 @@
         shellEnv["LINKFLAGS"].remove("-m64")
         shellEnv["CPPPATH"].remove( "/usr/64/include" )
         shellEnv["LIBPATH"].remove( "/usr/64/lib" )
-        shellEnv.Append( CPPPATH=filterExists(["/sw/include" , "/opt/local/include"]) )
-        shellEnv.Append( LIBPATH=filterExists(["/sw/lib/", "/opt/local/lib" , "/usr/lib", "/usr/local/lib" ]) )
 
     l = shellEnv["LIBS"]
 
