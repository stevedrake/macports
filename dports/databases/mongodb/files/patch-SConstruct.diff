--- SConstruct.orig	2009-07-29 12:49:21.000000000 -0600
+++ SConstruct	2009-08-04 13:51:28.000000000 -0600
@@ -320,23 +320,16 @@
 
     env.Append( CPPPATH=[ "-I/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Headers/" ] )
 
-    env.Append( CPPFLAGS=" -mmacosx-version-min=10.4 " )
     if not nojni:
         env.Append( FRAMEWORKS=["JavaVM"] )
 
-    if os.path.exists( "/usr/bin/g++-4.2" ):
-        env["CXX"] = "g++-4.2"
-
     nix = True
 
-    if force64:
-        env.Append( CPPPATH=["/usr/64/include"] )
-        env.Append( LIBPATH=["/usr/64/lib"] )
-        if installDir == DEFAULT_INSTALl_DIR and not distBuild:
-            installDir = "/usr/64/"
-    else:
-        env.Append( CPPPATH=[ "/sw/include" , "/opt/local/include"] )
-        env.Append( LIBPATH=["/sw/lib/", "/opt/local/lib"] )
+    env.Append( CPPPATH=["@@PREFIX@@/include"] )
+    env.Append( LIBPATH=["@@PREFIX@@/lib/"] )
+    env["CC"] = os.environ["CC"]
+    env["CPP"] = os.environ["CPP"]
+    env["CXX"] = os.environ["CXX"]
 
 elif "linux2" == os.sys.platform:
     linux = True
@@ -667,11 +660,7 @@
         haveReadLine = False
         if darwin:
             myenv.Append( CPPDEFINES=[ "USE_READLINE" ] )
-            if force64:
-                myCheckLib( "readline" , True )
-                myCheckLib( "ncurses" , True )
-            else:
-                myenv.Append( LINKFLAGS=" /usr/lib/libreadline.dylib " )
+            myenv.Append( LINKFLAGS=" @@PREFIX@@/lib/libreadline.dylib " )
         elif myCheckLib( "readline" , release and nix , staticOnly=release ):
             myenv.Append( CPPDEFINES=[ "USE_READLINE" ] )
             myCheckLib( "ncurses" , staticOnly=release )
@@ -834,8 +823,6 @@
         shellEnv["LINKFLAGS"].remove("-m64")
         shellEnv["CPPPATH"].remove( "/usr/64/include" )
         shellEnv["LIBPATH"].remove( "/usr/64/lib" )
-        shellEnv.Append( CPPPATH=[ "/sw/include" , "/opt/local/include"] )
-        shellEnv.Append( LIBPATH=[ "/sw/lib/", "/opt/local/lib" , "/usr/lib" ] )
 
     l = shellEnv["LIBS"]
     if linux64:
@@ -857,7 +844,7 @@
 
         shellEnv.VariantDir( "32bit" , "." )
     else:
-        shellEnv.Append( LIBPATH=[ "." ] )
+        shellEnv.Prepend( LIBPATH=[ "." ] )
 
     shellEnv = doConfigure( shellEnv , needPcre=False , needJava=False , shell=True )
 
