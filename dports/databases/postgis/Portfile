# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0

name            postgis
version         1.4.1
revision        0
categories      databases
platforms       darwin
maintainers     stromnov openmaintainer
description     adds support for geographic objects to the postgresql database

long_description \
    PostGIS adds support for geographic objects to the \
    PostgreSQL object-relational database. In effect, PostGIS \
    \"spatially enables\" the PostgreSQL server, allowing it to be used \
    as a backend spatial database for geographic information systems \
    (GIS), much like ESRI's SDE or Oracle's Spatial extension. PostGIS \
    follows the OpenGIS Simple Features Specification for SQL and \
    will be submitted for conformance testing at version 1.0.

homepage        http://postgis.refractions.net/
master_sites    ${homepage}download/

checksums           md5     78d13c4294f3336502ad35c8a30e5583 \
                    sha1    e30062d6e38f787374866a6f4bc2920e032bc0e7 \
                    rmd160  5c4b23dc4139297cbff03b023643bddd20183bfa

depends_build \
    port:docbook-xsl \
    port:libxslt

depends_lib \
    port:geos \
    port:proj \
    port:libiconv

use_parallel_build  no

configure.args \
    --datadir=${prefix}/share/${name} \
    --with-projdir=${prefix} \
    --with-xsldir=${prefix}/share/xsl/docbook-xsl

build.target-append comments
build.args      ICONV_LDFLAGS='-L${prefix}/lib -liconv'

destroot.target-append  docs-install comments-install

set pgsql_suffixes {82 83 84}

set pgsql_ports {}
foreach s ${pgsql_suffixes} {
    lappend pgsql_ports postgresql${s}
}

foreach s ${pgsql_suffixes} {
    set p postgresql${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${pgsql_ports} ${p}]
    set c [lreplace ${pgsql_ports} ${i} ${i}]
    eval [subst {
        variant ${p} description "Build with PostgreSQL ${v}" conflicts ${c} {
            post-patch {
                set args {
                     PGSQL_DOCDIR=${destroot}${prefix}/share/doc/${p}
                     PGSQL_MANDIR=${destroot}${prefix}/share/man
                     PGSQL_SHAREDIR=${destroot}${prefix}/share/${p}
                }

                reinplace -E "/doc .*install\\\$/s|\\\$| \[join \${args}\]|" ${worksrcpath}/GNUmakefile
            }
            depends_lib-append  port:${p}

            configure.args-append   --libdir=${prefix}/lib/${p} \
                                    --with-pgconfig=${prefix}/lib/${p}/bin/pg_config

            build.args-append   PGSQL_DOCDIR=${destroot}${prefix}/share/doc/${p} \
                                PGSQL_MANDIR=${destroot}${prefix}/share/man
        }
    }]
}

proc has_pgsql_variant {} {
    global pgsql_ports
    foreach p ${pgsql_ports} {
        if {[variant_isset ${p}]} {
            return 1
        }
    }
    return 0
}

if {![has_pgsql_variant]} {
    set p [lindex ${pgsql_ports} end]
    default_variants +${p}

    if {![has_pgsql_variant]} {
        error "One of the following variants must be set: [join ${pgsql_ports}]"
    }
}

livecheck.type  regex
livecheck.url   ${master_sites}
livecheck.regex ${name}-(\\d+(?:\\.\\d+)*)\\.tar
