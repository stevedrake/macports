# $Id$

PortSystem 1.0

name			boost
version			1.34.1
revision		2
categories		devel
maintainers		sanchom@gmail.com
description		Collection of portable C++ source libraries
long_description 	Boost provides free portable peer-reviewed C++ \
			libraries. The emphasis is on portable libraries \
			which work well with the C++ Standard Library.
homepage		http://www.boost.org
master_sites		sourceforge
distname		${name}_[strsed ${version} {g/[.]/_/}]
use_bzip2		yes
checksums		md5 2d938467e8a448a2c9763e0a9f8ca7e5
platforms		darwin

depends_build		bin:bjam:boost-jam

platform darwin 9 {
	depends_build-append	port:gmake
	build.cmd		gmake
}

platform darwin {
	post-destroot {

		# get the library version as it shows up in the library names:
		# eg. 1_34_1
		set libver [join [lrange [split ${version} {.}] 0 2] {_}]
		
		# ensure the identification name of the dynamic libraries agree
		# with their final destination path (not the destroot path that
		# they've just been installed to)
		foreach lib [glob -directory ${destroot}${prefix}/lib/ *-${libver}.dylib] {
			set libtail [file tail ${lib}]
			system "install_name_tool -id ${prefix}/lib/${libtail} ${lib}"
		}

		# create relative symbolic links to the versioned libraries (.dylib only;
		# .a were built with unversioned extensions that are duplicate files of the
		# versioned extensions... handled next)
		foreach lib [glob -directory ${destroot}${prefix}/lib/ *-${libver}.dylib] {
			set libtail [file tail ${lib}]
			set libroot [join [lrange [split [file rootname ${lib}] {-}] 0 end-1] {-}]
			set libname [file tail ${libroot}]
			set libext [file extension ${lib}]
			set liblink "${libroot}${libext}"
			if {![catch {set libtype [file type ${liblink}]}]} {
				if {${libtype} == "link"} {
					file delete -force ${liblink}
				}
			}
			system "cd  ${destroot}${prefix}/lib;ln -s ${libtail} ${libname}${libext}"
		}

		# change the duplicated non-version-named .a libraries to
		# symbolic links to the version-named .a libraries
		foreach lib [glob -directory ${destroot}${prefix}/lib/ *-${libver}.a] {
			set libtail [file tail ${lib}]
			set libroot [join [lrange [split [file rootname ${lib}] {-}] 0 end-1] {-}]
			set libname [file tail ${libroot}]
			set libext [file extension ${lib}]
			set liblink "${libroot}${libext}"
			# if this file is around, it is a duplicate, delete it
			if {[file exists ${liblink}]} {
				file delete -force ${liblink}
			}
			# add a symbolic link instead
			system "cd  ${destroot}${prefix}/lib; ln -s ${libtail} ${libname}${libext}"
		}
		
		# create a symbolic link in the include directory pointing to the current
		# version of the boost include directory (e.g. boost-1_34_1/boost -> include/boost)
		system "cd  ${destroot}${prefix}/lib; ln -fs boost-${libver}/boost ${destroot}${prefix}/include/boost"
	}
}

destroot.args		PREFIX=${destroot}${prefix} EPREFIX=${destroot}${prefix} \
			LIBDIR=${destroot}${prefix}/lib INCLUDEDIR=${destroot}${prefix}/include \
			install

configure.args		--without-libraries=python --without-icu

variant python24 {
	set pyversion		2.4
	depends_lib		lib:libpython${pyversion}:python[strsed ${pyversion} {g/[.]//}]

	configure.args-delete	--without-libraries=python
}

variant python25 {
	set pyversion		2.5
	depends_lib		lib:libpython${pyversion}:python[strsed ${pyversion} {g/[.]//}]

	configure.args-delete	--without-libraries=python
}
variant icu {
	depends_lib		port:icu

	configure.args-delete	--without-icu
	configure.args-append	--with-icu
}
