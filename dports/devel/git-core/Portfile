# $Id$

PortSystem        1.0
name              git-core
version           1.5.3.4
description       The stupid content tracker.
long_description  A stupid (but extremely fast) directory content manager. \
                  It doesn't do a whole lot, but what it _does_ do is track \
                  directory contents efficiently.
maintainers       bryan@larsen.st mgrimes
categories        devel
platforms         darwin
homepage          http://git.or.cz/
use_bzip2         yes
master_sites      http://www.kernel.org/pub/software/scm/git/
distname          git-${version}
distfiles         git-${version}${extract.suffix} \
                  git-manpages-${version}${extract.suffix}
 
checksums    git-${version}${extract.suffix} sha1 f2dfad11c396d4e06c4d1a34cb09b47e86faf2b0 \
             git-manpages-${version}${extract.suffix} sha1 2701e152773df821f3e334ab3b7f4562237fe84f

depends_run  port:openssh port:rsync port:perl5.8 port:p5-error
depends_lib  port:curl port:zlib port:openssl port:expat port:libiconv

patchfiles   patch-Makefile patch-http.h patch-git-instaweb.sh

extract.only   git-${version}${extract.suffix} \
               git-manpages-${version}${extract.suffix}

use_configure  no

build.env      CFLAGS="-Wall -O2 -I${prefix}/include" LDFLAGS="-L${prefix}/lib"
build.args     prefix=${prefix} CURLDIR=${prefix} OPENSSLDIR=${prefix} ICONVDIR=${prefix} \
               PERL_PATH="/usr/bin/env perl" NO_FINK=1 NO_DARWIN_PORTS=1

test.run       yes
test.cmd       make
test.target    test
test.dir       ${worksrcpath}
test.args      prefix=${prefix} CURLDIR=${prefix} OPENSSLDIR=${prefix} ICONVDIR=${prefix} \
               PERL_PATH="/usr/bin/env perl" NO_FINK=1 NO_DARWIN_PORTS=1

destroot.destdir  DESTDIR=${destroot} prefix=${prefix}
destroot.target   install
destroot.args     prefix=${prefix} CURLDIR=${prefix} OPENSSLDIR=${prefix} ICONVDIR=${prefix} \
                  PERL_PATH="/usr/bin/env perl" NO_FINK=1 NO_DARWIN_PORTS=1

post-destroot {
    foreach f {1 5 7} {
        xinstall -d ${destroot}${prefix}/share/man/man${f}
        foreach m [glob -directory ${workpath} man${f}/*.${f}] {
            xinstall ${m} ${destroot}${prefix}/share/man/man${f}
        }
    }
    if {![variant_isset svn]} {
        system "rm ${destroot}${prefix}/bin/git-svn*"
    }
    if {[variant_isset doc]} {
        set docdestroot ${destroot}${prefix}/share/doc/${name}
        xinstall -d ${docdestroot}
        system "cd ${docdestroot} && ${extract.cmd} ${extract.pre_args} \
            ${distpath}/git-htmldocs-${version}${extract.suffix} \
            ${extract.post_args}"
    }
}

variant doc description (Install HTML and plaintext documentation} {
    distfiles-append    git-htmldocs-${version}${extract.suffix}
    checksums-append    git-htmldocs-${version}${extract.suffix} sha1 008adec5416b3f96aee87ad2572af06dd7773b24
}

variant svn {
    depends_run     port:subversion port:p5-libwww-perl port:p5-svn-simple port:p5-term-readkey
}

default_variants    +doc

