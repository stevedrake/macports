# $Id$

PortSystem 1.0

name		hs-binary
set canonicalname	binary
version		0.4.3.1
categories	devel haskell
maintainers	nomaintainer
platforms	darwin

description	Binary serialisation for Haskell values using lazy ByteStrings
long_description	\
		Efficient, pure binary serialisation using lazy ByteStrings.	\
		Haskell values may be encoded to and from binary formats,	\
		written to disk as binary, or sent over the network.		\
		Serialisation speeds of over 1 G/sec have been observed,	\
		so this library should be suitable for high performance		\
		scenarios.

set hackage	http://hackage.haskell.org/packages/archive
homepage	http://code.haskell.org/${canonicalname}
master_sites	${hackage}/${canonicalname}/${version}
distname	${canonicalname}-${version}

checksums	md5     7566872c08eed5ed140c2ace94c35062		\
		sha1    b656fc46dfb2990bf734b31d7c48f15c6aa420df	\
		rmd160  f5f0294f02399f2cfe0e5af6f73d2edd4f719792

depends_build	port:ghc

configure       { system "cd ${worksrcpath} && runhaskell Setup configure --ghc --prefix=${prefix} --with-compiler=${prefix}/bin/ghc --enable-library-profiling"
                }

build           { system "cd ${worksrcpath} && runhaskell Setup build -v"
                }

destroot        { system "cd ${worksrcpath} && runhaskell Setup copy --copy-prefix=${destroot}${prefix}"
	          system "cd ${worksrcpath} && runhaskell Setup register   --gen-script"
		  system "cd ${worksrcpath} && runhaskell Setup unregister --gen-script"

                  file mkdir ${destroot}${prefix}/libexec/${name}
                  file copy ${worksrcpath}/register.sh \
                            ${destroot}${prefix}/libexec/${name}
                  file copy ${worksrcpath}/unregister.sh \
                            ${destroot}${prefix}/libexec/${name}
                }

post-activate   { system "${prefix}/libexec/${name}/register.sh" }

#pre-deactivate { system "${prefix}/libexec/${name}/unregister.sh" }

