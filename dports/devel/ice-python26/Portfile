# $Id$

PortSystem 1.0

name		ice-python26
version		3.4.0
set branch	[join [lrange [split ${version} .] 0 1] .]
categories	devel python
maintainers	blair
description	Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP

long_description \
	The Internet Communications Engine (Ice) is a modern alternative to \
	object middleware such as CORBA or COM/DCOM/COM+, with support for \
	C++, C#, Java, PHP, Python, Ruby and Visual Basic. \
	Ice consists of the following packages. \
	Slice: The Specification Language for Ice.  Slice establishes a \
	contract between clients and servers, and is also used to describe \
	persistent data. \
	Slice Compilers: Slice specifications are compiled into various \
	programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, \
	Python and Ruby.  Ice clients and servers work together, regardless \
	of the programming language. \
	Ice: The Ice core library manages all the communication tasks using a \
	highly efficient protocol (including protocol compression and support \
	for both TCP and UDP), provides a flexible thread pool for \
	multi-threaded servers. \
	This Port provides the Python bindings that sit on top of the C++ \
	Ice C++ runtime libraries.

homepage	http://www.zeroc.com/
master_sites	${homepage}download/Ice/${branch}/
dist_subdir	ice-cpp
distname	Ice-${version}
distfiles	${distname}${extract.suffix}
patchfiles	patch-py.config.Make.rules.Darwin.diff
checksums	Ice-${version}.tar.gz \
			md5 998b10627ade020cb00f5beb73efc0e0 \
			sha1 1c8fe296af8d65d16cddac39a8bc24b71e069f75 \
			rmd160 e874749f8d7d1916c1e3b19c006a7f2216e10f53
platforms	darwin

depends_lib	port:python26 \
		port:ice-cpp

post-patch {
	reinplace "s/-O2/-g -O2/" \
		${workpath}/Ice-${version}/py/config/Make.rules.Darwin

	# Prevent name conflicts between libICE.* from xorg-libice and
	# libIce.* from this port by renaming libIce.* to libZeroCIce.*.
	reinplace "s/-lIce /-lZeroCIce /" \
		${workpath}/Ice-${version}/py/config/Make.rules
	reinplace "s/-lIce /-lZeroCIce /" \
		${workpath}/Ice-${version}/py/config/Make.rules.Darwin
}

use_configure	no

build.dir	${worksrcpath}/py
build.target	prefix="${prefix}" \
		CC="${configure.cc}" \
		CXX="${configure.cxx}" \
		ICE_HOME="${prefix}" \
		PYTHON_HOME="${prefix}/Library/Frameworks/Python.framework/Versions/2.6" \
		PYTHON_VERSION=python2.6 \
		OPTIMIZE="yes" \
		all

test.run	yes
test.dir	${worksrcpath}/py
test.env	ICE_HOME=${prefix}
test.cmd	${prefix}/bin/python2.6
test.target	allTests.py

destroot.dir	${worksrcpath}/py
destroot.target	prefix="${destroot}${prefix}" \
		CC="${configure.cc}" \
		CXX="${configure.cxx}" \
		ICE_HOME="${prefix}" \
		PYTHON_HOME="${prefix}/Library/Frameworks/Python.framework/Versions/2.6" \
		PYTHON_VERSION=python2.6 \
		OPTIMIZE="yes" \
		install

post-destroot {
	set sharedir ${destroot}${prefix}/share
	set docdir ${sharedir}/doc/${name}

	set python_root ${destroot}${prefix}/Library/Frameworks/Python.framework/Versions/2.6
	set python26_dir ${python_root}/lib/python2.6
	set site_packages_dir ${python26_dir}/site-packages

	delete ${destroot}${prefix}/slice

	xinstall -m 755 -d ${docdir}

	file mkdir ${python26_dir}
	file rename ${destroot}${prefix}/python ${site_packages_dir}

	set cmd "${prefix}/bin/python2.6 \
		${prefix}/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/compileall.py \
		${site_packages_dir}"
	ui_debug ${cmd}
	system ${cmd}

	set cmd "${prefix}/bin/python2.6 -O \
		${prefix}/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/compileall.py \
		${site_packages_dir}"
	ui_debug ${cmd}
	system ${cmd}

	file rename ${destroot}${prefix}/ICE_LICENSE ${docdir}
	file rename ${destroot}${prefix}/LICENSE ${docdir}
	foreach f {CHANGES RELEASE_NOTES} {
		file copy ${worksrcpath}/${f} ${docdir}
	}
	file copy ${worksrcpath}/py/INSTALL ${docdir}

	if {[variant_isset demo_source_code]} {
		file copy ${worksrcpath}/py/demo ${docdir}
	}
}

variant demo_source_code description {Install demonstration Python code} {
}
