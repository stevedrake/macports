--- dvdread/dvd_reader.c.orig	2006-10-06 01:58:03.000000000 -0600
+++ dvdread/dvd_reader.c	2008-05-28 02:21:03.000000000 -0600
@@ -1393,6 +1393,28 @@
   return offset;
 }
 
+int DVDFileSeekForce( dvd_file_t *dvd_file, int offset, int force_size )
+{
+  /* Check arguments. */
+  if( dvd_file == NULL || offset < 0 )
+    return -1;
+
+  if( dvd_file->dvd->isImageFile ) {
+    if( force_size < 0 )
+      force_size = (offset - 1) / DVD_VIDEO_LB_LEN + 1;
+    if( dvd_file->filesize < force_size ) {
+      dvd_file->filesize = force_size;
+      fprintf(stderr, "libdvdread: Ignored UDF provided size of file.\n");
+    }
+  }
+
+  if( offset > dvd_file->filesize * DVD_VIDEO_LB_LEN ) {
+    return -1;
+  }
+  dvd_file->seek_pos = (uint32_t) offset;
+  return offset;
+}
+
 #ifndef HAVE_UINTPTR_T
 #warning "Assuming that (unsigned long) can hold (void *)"
 typedef unsigned long uintptr_t;
@@ -1444,7 +1466,7 @@
   memcpy( data, &(secbuf[ seek_byte ]), byte_size );
   free( secbuf_start );
 
-  dvd_file->seek_pos += byte_size;
+  DVDFileSeekForce(dvd_file, dvd_file->seek_pos + byte_size, -1);
   return byte_size;
 }
 
