--- CMakeLists.txt.orig	2009-09-20 15:20:30.000000000 -0400
+++ CMakeLists.txt	2010-10-19 22:36:45.000000000 -0400
@@ -138,6 +138,12 @@
   ${LIBNIFALCON_REQ_LIBS}
   )
 
+SET(CMAKE_SKIP_BUILD_RPATH TRUE)
+SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
+SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
+SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
+
+
 ADD_SUBDIRECTORY(include)
 ADD_SUBDIRECTORY(src)
 IF(BUILD_EXAMPLES)
@@ -147,32 +153,32 @@
   ADD_SUBDIRECTORY(lang/swig)
 ENDIF(BUILD_SWIG_BINDINGS)
 
-# pkg-config (use the CPack information)
-# FIND_PACKAGE(PkgConfig)
-# if(PKG_CONFIG_EXECUTABLE)
-#   set(PC_SHORT_NAME "${BUILDSYS_CPACK_NAME}")
-#   set(PC_LONG_NAME "${BUILDSYS_CPACK_NAME}")
-#   set(PC_LIBRARY_NAME "${LIBNIFALCON_CPP}")
-#   set(PC_DESCRIPTION "${CPACK_PACKAGE_DESCRIPTION_SUMMARY}")
-#   set(PC_VERSION "${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION}")
-
-#   if(LIBUSB_1_FOUND)
-#     set(PC_REQUIRES "${PC_REQUIRES}libusb-1.0 ")
-#     set(PC_LINK_FLAGS "${PC_LINK_FLAGS}-lnifalcon_comm_libusb ")
-#   endif(LIBUSB_1_FOUND)
-
-#   set(PC_LINK_FLAGS "${lib${PC_LIBRARY_NAME}_LINK_FLAGS} ${PC_LINK_FLAGS}")
-#   set(PC_LINK_FLAGS "-l${PC_LIBRARY_NAME} ${PC_LINK_FLAGS}")
-#   set(PC_COMPILE_FLAGS "${lib${PC_LIBRARY_NAME}_COMPILE_FLAGS}")
-#   set(PC_CONFIGURED_FILE
-#     ${CMAKE_BINARY_DIR}/libnifalcon.pc
-#     )
-#   MESSAGE("-- Generating ${PC_CONFIGURED_FILE}")
-#   configure_file(
-#     ${CMAKE_SOURCE_DIR}/libnifalcon.pc.cmake
-#     ${PC_CONFIGURED_FILE}
-#     @ONLY
-#     )
-#   set(PKG_CONFIG_DIR "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
-#   install(FILES ${PC_CONFIGURED_FILE} DESTINATION ${PKG_CONFIG_DIR})
-# endif(PKG_CONFIG_EXECUTABLE)
+#pkg-config (use the CPack information)
+FIND_PACKAGE(PkgConfig)
+if(PKG_CONFIG_EXECUTABLE)
+  set(PC_SHORT_NAME "${BUILDSYS_CPACK_NAME}")
+  set(PC_LONG_NAME "${BUILDSYS_CPACK_NAME}")
+  set(PC_LIBRARY_NAME "${LIBNIFALCON_CPP}")
+  set(PC_DESCRIPTION "${CPACK_PACKAGE_DESCRIPTION_SUMMARY}")
+  set(PC_VERSION "${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION}")
+
+  if(LIBUSB_1_FOUND)
+    set(PC_REQUIRES "${PC_REQUIRES}libusb-1.0 ")
+    set(PC_LINK_FLAGS "${PC_LINK_FLAGS}-lnifalcon_comm_libusb ")
+  endif(LIBUSB_1_FOUND)
+
+  set(PC_LINK_FLAGS "${lib${PC_LIBRARY_NAME}_LINK_FLAGS} ${PC_LINK_FLAGS}")
+  set(PC_LINK_FLAGS "-l${PC_LIBRARY_NAME} ${PC_LINK_FLAGS}")
+  set(PC_COMPILE_FLAGS "${lib${PC_LIBRARY_NAME}_COMPILE_FLAGS}")
+  set(PC_CONFIGURED_FILE
+    ${CMAKE_BINARY_DIR}/libnifalcon.pc
+    )
+  MESSAGE("-- Generating ${PC_CONFIGURED_FILE}")
+  configure_file(
+    ${CMAKE_SOURCE_DIR}/libnifalcon.pc.cmake
+    ${PC_CONFIGURED_FILE}
+    @ONLY
+    )
+  set(PKG_CONFIG_DIR "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
+  install(FILES ${PC_CONFIGURED_FILE} DESTINATION ${PKG_CONFIG_DIR})
+endif(PKG_CONFIG_EXECUTABLE)
