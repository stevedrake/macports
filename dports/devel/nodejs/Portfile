# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0

name                    nodejs
version                 0.6.2
categories              devel net
platforms               darwin
license                 {MIT BSD}
maintainers             ciserlohn

description             Evented I/O for V8 JavaScript

long_description        Node's goal is to provide an easy way to build scalable network programs in JavaScript. \
                        Node is similar in design to and influenced by systems like Ruby's Event \
                        Machine or Python's Twisted. Node takes the event model a bit further-it \
                        presents the event loop as a language construct instead of as a library.

conflicts               nodejs-devel

homepage                http://nodejs.org/
master_sites            ${homepage}dist/v${version}

checksums               rmd160  41ef4785eda084de891265e3df3ca185ee85347b \
                        sha256  3a24f6f91bb806a230a7b200ca638459a9680ea2daf9a427098c61f847016139

distname                node-v${version}

depends_lib             port:python27

patchfiles              patch-Makefile-python.diff

proc rec_glob {basedir pattern} {
    set files [glob -directory $basedir -nocomplain -type f $pattern]
    foreach dir [glob -directory $basedir -nocomplain -type d *] {
        eval lappend files [rec_glob $dir $pattern]
    }
    return $files
}

set py27_bin ${prefix}/bin/python2.7

post-patch {
    foreach f [concat ${worksrcpath}/wscript \
                   ${worksrcpath}/configure-gyp \
                   ${worksrcpath}/tools/node-waf \
                   ${worksrcpath}/tools/waf-light \
                   ${worksrcpath}/tools/gyp/gyp \
                   ${worksrcpath}/tools/gyp_node \
                   ${worksrcpath}/deps/uv/gyp_uv \
                   [rec_glob ${worksrcpath} *.py]] {
        reinplace "s|/usr/bin/env python|${py27_bin}|" ${f}
    }
}

# build system doesn't ensure its internal include paths come first (#28066)
configure.cppflags      -isystem ${prefix}/include
configure.args          --without-ssl

variant ssl description {Add secure socket layer support} {
    depends_build-append    port:pkgconfig
    depends_lib-append      port:openssl
    configure.args-delete   --without-ssl
}

default_variants        +ssl

# V8 only supports ARM and IA-32 processors
supported_archs         i386 x86_64

universal_variant       no

# "V8 doesn't like cache."
configure.ccache        no

test.run                yes

use_parallel_build      no

build.args-append   CC=${configure.cc} \
                    CXX=${configure.cxx} \
                    CFLAGS="${configure.cflags} ${configure.cc_archflags}" \
                    LDFLAGS="${configure.ldflags} ${configure.ld_archflags}" \
                    PYTHON=${py27_bin}

post-destroot {
    set docdir ${destroot}${prefix}/share/doc/${name}
    xinstall -d ${docdir}
    xinstall -m 644 -W ${worksrcpath} \
        AUTHORS \
        ChangeLog \
        LICENSE \
        README.md \
        ${docdir}
}

livecheck.type      regex
livecheck.regex     node-v(\\d+\\.\[02468\]+\\.\\d+)
