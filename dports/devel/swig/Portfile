# $Id$

PortSystem 1.0

name		swig
version		1.3.36
categories	devel
maintainers	kevin jwa

description	Tool to wrap C/C++ libraries in high-level languages.
long_description	\
    SWIG is a software development tool that connects programs written in C \
    and C++ with a variety of high-level programming languages. SWIG is \
    primarily used with common scripting languages such as Perl, Python, \
    Tcl/Tk, Ruby, Guile and MzScheme, however the list of supported languages \
    also includes non-scripting languages such as Java and OCAML. SWIG is \
    most commonly used to create high-level interpreted programming \
    environments, user interfaces, and as a tool for testing and \
    prototyping C/C++ software. SWIG may be freely used, distributed, and \
    modified for commercial and noncommercial use.

homepage	http://www.swig.org/
platforms	darwin
master_sites	sourceforge
checksums	md5 8f30aa4130b62404099bbcba1bf429b1 \
    sha1 eed715da3200f45cfe688a64ab6630eadf118ae4 \
    rmd160 bd57f6837de1dc3aebefd9ad23a52235deefcd33

depends_build	port:bison \
    port:gsed

post-patch {
    # The configure script should use GNU sed
    reinplace "s/\[\[:<:\]\]sed\[\[:>:\]\]/gsed/g" ${worksrcpath}/configure
}

configure.args  --without-csharp

build.target

set languages   {typemaps tcl}
set docdir      ${prefix}/share/doc/${name}-${version}

test.run        yes
test.target     check

pre-destroot {
    # This must be evaluated after variants selection.
    destroot.args   lib-languages="[join ${languages}]"
}

post-destroot {
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} ANNOUNCE CHANGES FUTURE LICENSE NEW README \
        TODO ${destroot}${docdir}
}
 
variant doc description {Install extra documentation} {
    post-destroot {
        xinstall -d ${destroot}${docdir}/html
        eval xinstall -m 0644 [glob ${worksrcpath}/Doc/Manual/*.{css,html,pdf,png}] \
            ${destroot}${docdir}/html
    }
}

set bindings {
    python      python25    python=${prefix}/bin/python2.5
    perl        perl5.8     perl5
    gcj         gcj34       gcj
    guile       guile       guile
    mzscheme    mzscheme    mzscheme
    ruby        ruby        ruby
    php4        php4        php4
    ocaml       ocaml       ocaml
    pike        pike        pike
    lua         lua         lua
    chicken     chicken     chicken
    allegro     allegro     allegrocl
    clisp       clisp       clisp
    r           R           r
}

foreach {variant port arg} ${bindings} {
    set arg_name    [lindex [split ${arg} =] 0]

    configure.args-append   --without-${arg_name}

    eval [subst {
        variant ${variant} {
            configure.args-delete   --without-${arg_name}
            configure.args-append   --with-${arg}

            depends_build-append    port:${port}
            depends_run-append      port:${port}

            lappend languages       ${arg_name}
        }
    }]
}

livecheck.check     sourceforge
livecheck.regex     <title>${name} ${name}-(.*) released.*</title>
