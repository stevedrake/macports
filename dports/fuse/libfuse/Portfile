# $Id$

PortSystem 1.0

name                libfuse
version             2.7.1
revision            3
categories          fuse devel
platforms           darwin
maintainers         eridius@macports.org
description         Filesystem in Userspace
long_description    See the fusefs port for more information

homepage            http://fuse.sourceforge.net/

distname            fuse-${version}
master_sites        sourceforge:fuse
checksums           ${distfiles} md5 f95b4a238a3df5a92e9013ecb55c2c17 \
                                 sha1 ea28a61ff63cd0cf12cd7c9c092a57d79c12edf8

livecheck.distname  fuse-2.X

depends_lib         port:pkgconfig

platform darwin 8 {
    patch_sites         http://macfuse.googlecode.com/svn/tags/macfuse-1.1/core/10.4/libfuse/
    checksums-append    fuse-2.7.1-macosx.patch md5 36b116114c04f8e7c65a5c8aad753573 \
                                                sha1 5cb3440a73b2634e18f76263c35044e58b0daaa5
}

platform darwin 9 {
    patch_sites         http://macfuse.googlecode.com/svn/tags/macfuse-1.1/core/10.5/libfuse/
    checksums-append    fuse-2.7.1-macosx.patch md5 85f1654ae01064ef1c398dbfde1a3f53 \
                                                sha1 24d735331ec897c77e19203d3d38ab55ae56f292
}

platform darwin {
    depends_run         port:fusefs
    
    patchfiles          fuse-2.7.1-macosx.patch
    
    configure.post_args-append CFLAGS="-D__FreeBSD__=10 -D_POSIX_C_SOURCE=200112L"
    
    # override patch.pre_args since it defaults to -p0
    patch.pre_args -p1
}

pre-fetch {
    # LibFUSE currently only works on OS X
    # so error out if attempting to install elsewhere
    if {![variant_isset darwin]} {
        return -code error "LibFUSE is only supported for Mac OS X"
    }
    
    patch_checksum
}

proc patch_checksum {} {
    global checksums_array UI_PREFIX
    # assume we only have one patchfile, because at the moment that's true
    set patchfile [option patchfiles]
    # do our own checksumming of an existing $patchfile because URL changes between revisions
    # if the checksum fails, delete the patchfile
    # a lot of this code is copied from checksum_main
    # Eventually this technique should be replaced with a patchfile dist subdir
    if {[file exists [option distpath]/$patchfile]} {
        ui_info "$UI_PREFIX $patchfile exists, checksumming to detect URL change"
        if {[parse_checksums [option checksums]] == "yes"} {
            ui_info "$UI_PREFIX [format [msgcat::mc "Checksumming %s"] $patchfile]"
            set fullpath [file join [option distpath] $patchfile]
            if {[info exists checksums_array($patchfile)]} {
                set checksums $checksums_array($patchfile)
                
                foreach {type sum} $checksums {
                    set calculated_sum [calc_$type $fullpath]
                    if {![string equal $sum $calculated_sum]} {
                        ui_debug "Checksum mismatch for $patchfile"
                        delete $fullpath
                        break
                    }
                }
            }
        } else {
            return -code error "Unable to parse checksum string"
        }
    }
}