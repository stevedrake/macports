# $Id$

PortSystem 1.0

name                sshfs
version             1.7
revision            2
categories          fuse
platforms           darwin
maintainers         eridius@macports.org
description         SSH filesystem for FUSE
long_description    This is a filesystem client based on the \
                    SSH File Transfer Protocol. Since most SSH \
                    servers already support this protocol it is \
                    very easy to set up: i.e. on the server side \
                    there's nothing to do.  On the client side \
                    mounting the filesystem is as easy as logging \
                    into the server with ssh.

homepage            http://fuse.sourceforge.net/sshfs.html

distname            sshfs-fuse-${version}
master_sites        sourceforge:fuse
checksums           ${distfiles} md5 e91a2fed1da952a375798408dc6e41a0 \
                                 sha1 c68fa99e9127b59141a5ac5babec39d5bb541141

# livecheck.distname  sshfs-fuse

depends_lib         lib:libglib-2.0:glib2 lib:libfuse:libfuse bin:pkg-config:pkgconfig

platform darwin {
    depends_run         port:fusefs
    patch_sites         http://macfuse.googlecode.com/svn/tags/macfuse-0.2.4/filesystems/sshfs
    patchfiles          sshfs-fuse-1.7-macosx.patch
    checksums-append    sshfs-fuse-1.7-macosx.patch md5 e0e8f6da7fb7a2aa8fba434500cbad93 \
                                                    sha1 4c864061a844c9f42b24298d35047907c385061f
    
    # override patch.pre_args since it defaults to -p0
    patch.pre_args -p1
}

pre-fetch {
    if {[variant_isset darwin]} {
        patch_checksum
    }
}

proc patch_checksum {} {
    global checksums_array UI_PREFIX
    # assume we only have one patchfile, because at the moment that's true
    set patchfile [option patchfiles]
    # do our own checksumming of an existing $patchfile because URL changes between revisions
    # if the checksum fails, delete the patchfile
    # a lot of this code is copied from checksum_main
    # Eventually this technique should be replaced with a patchfile dist subdir
    if {[file exists [option distpath]/$patchfile]} {
        ui_info "$UI_PREFIX $patchfile exists, checksumming to detect URL change"
        if {[parse_checksums [option checksums]] == "yes"} {
            ui_info "$UI_PREFIX [format [msgcat::mc "Checksumming %s"] $patchfile]"
            set fullpath [file join [option distpath] $patchfile]
            if {[info exists checksums_array($patchfile)]} {
                set checksums $checksums_array($patchfile)
                
                foreach {type sum} $checksums {
                    set calculated_sum [calc_$type $fullpath]
                    if {![string equal $sum $calculated_sum]} {
                        ui_debug "Checksum mismatch for $patchfile"
                        delete $fullpath
                        break
                    }
                }
            }
        } else {
            return -code error "Unable to parse checksum string"
        }
    }
}