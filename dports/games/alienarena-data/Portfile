# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0

name                    alienarena-data
# Keep version in sync between alienarena and alienarena-data.
version                 7.45-20100726
set version_number      [lindex [split ${version} -] 0]
set version_date        [lindex [split ${version} -] 1]
categories              games
platforms               darwin
maintainers             ryandesign
license                 GPL-2+
supported_archs         noarch

homepage                http://icculus.org/alienarena/rpa/
master_sites            http://icculus.org/alienarena/Files/

dist_subdir             alienarena
worksrcdir              alienarena[join [split ${version_number} .] _]
distname                ${worksrcdir}-Linux${version_date}

# Manually emulate "use_zip yes" because we want to extract specific directories only.
#use_zip                 yes
extract.cmd             [findBinary unzip ${portutil::autoconf::unzip_path}]
extract.suffix          .zip
extract.pre_args        -q
extract.post_args       -d ${extract.dir} ${worksrcdir}/data1/*

checksums               sha1    9c982d097d885af0cbd06bfbe6c4185936c43c4d \
                        rmd160  d20e167c66dec8ec072ecbf5833a4a4b46458a17

post-extract {
    # Remove pre-compiled Linux binaries that will be compiled properly by the alienarena port.
    eval delete [glob ${worksrcpath}/data1/*.so]
    
    # Remove config files that will be installed by the alienarena port.
    eval delete [glob ${worksrcpath}/data1/*.cfg]
}

use_configure           no

build {}

destroot {
    xinstall -d ${destroot}${prefix}/share/alienarena
    copy ${worksrcpath}/data1 ${destroot}${prefix}/share/alienarena
}

livecheck.version       ${version_number}
livecheck.type          regex
livecheck.url           ${homepage}aquire.html
livecheck.regex         {Alien Arena ([0-9.]+)}
