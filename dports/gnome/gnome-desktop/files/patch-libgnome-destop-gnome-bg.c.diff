--- libgnome-desktop/gnome-bg.c.orig	2008-11-01 15:30:31.000000000 +0100
+++ libgnome-desktop/gnome-bg.c	2008-11-01 15:28:48.000000000 +0100
@@ -33,9 +33,12 @@
 
 #include <gio/gio.h>
 
+#include <gdk/gdk.h>
+#ifndef GDK_WINDOWING_QUARTZ
 #include <gdk/gdkx.h>
 #include <X11/Xlib.h>
 #include <X11/Xatom.h>
+#endif
 
 #include <gconf/gconf-client.h>
 #include <libgnomeui/libgnomeui.h>
@@ -122,9 +125,11 @@
 
 G_DEFINE_TYPE (GnomeBG, gnome_bg, G_TYPE_OBJECT)
 
+#ifndef GDK_WINDOWING_QUARTZ
 static GdkPixmap *make_root_pixmap     (GdkScreen  *screen,
 					gint        width,
 					gint        height);
+#endif
 
 /* Pixbuf utils */
 static guint32    pixbuf_average_value (GdkPixbuf  *pixbuf);
@@ -798,8 +803,10 @@
 	gnome_bg_get_pixmap_size (bg, width, height, &pm_width, &pm_height);
 	
 	if (root) {
+#ifndef GDK_WINDOWING_QUARTZ
 		pixmap = make_root_pixmap (gdk_drawable_get_screen (window),
 					   pm_width, pm_height);
+#endif
 	}
 	else {
 		pixmap = gdk_pixmap_new (window, pm_width, pm_height, -1);
@@ -868,6 +875,7 @@
 	return intensity < 160; /* biased slightly to be dark */
 }
 
+#ifndef GDK_WINDOWING_QUARTZ
 /* 
  * Create a persistent pixmap. We create a separate display
  * and set the closedown mode on it to RetainPermanent.
@@ -916,6 +924,7 @@
 	
 	return gdk_pixmap;
 }
+#endif
 
 static gboolean
 get_original_size (const char *filename,
@@ -1012,6 +1021,7 @@
 }
 
 
+#ifndef GDK_WINDOWING_QUARTZ
 /* Set the root pixmap, and properties pointing to it. We
  * do this atomically with XGrabServer to make sure that
  * we won't leak the pixmap if somebody else it setting
@@ -1079,7 +1089,7 @@
 	
 	XFlush (display);
 }
-
+#endif
 
 /* Implementation of the pixbuf cache */
 struct _SlideShow
