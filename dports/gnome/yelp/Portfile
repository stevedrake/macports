# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0

name            yelp
version         2.26.0
set branch      [join [lrange [split ${version} .] 0 1] .]
description     Help browser for GNOME.
long_description Yelp is the default help browser for the \
                GNOME desktop. Yelp provides a simple graphical \
                interface for viewing DocBook, HTML, man, and info \
                formatted documentation.
maintainers     devans openmaintainer
categories      gnome
platforms       darwin
homepage        http://www.gnome.org/
master_sites    gnome:sources/${name}/${branch}/

checksums       md5     3413fd051c5ecbfe98819a8fb4ac83dd \
                sha1    c1c3262d77d4515a0fd0a7840307533fda9ed0ea \
                rmd160  5f6f3f7b504d7522a39ba9e55e22cf2ca75589d7

depends_build   port:pkgconfig \
                port:intltool \
                port:p5-xml-parser \
                port:gnome-doc-utils

depends_lib     port:libgnomeui \
                port:startup-notification \
                port:rarian \
                port:xulrunner

#
# disabled dependency on lzmautils
# to avoid a conflict with the newer
# xz-devel
#

use_bzip2       yes

configure.cppflags-append  -I${prefix}/include/nspr

configure.args  --disable-schemas-install

variant debug description {Enables debugging} {
        configure.cflags-append -O0 -g
        configure.cxxflags-append -O0 -g
        configure.args-append --enable-debug
}

post-activate {
        # We need to register some stuff to gconf. Just putting the
        # schema files to the right place is not enough.
        # You can watch the successful installation with gconf-editor.

        system "GCONF_CONFIG_SOURCE=`${prefix}/bin/gconftool-2 --get-default-source` ${prefix}/bin/gconftool-2 --makefile-install-rule ${prefix}/etc/gconf/schemas/yelp.schemas"
        system "${prefix}/bin/gtk-update-icon-cache -f -t ${prefix}/share/icons/hicolor"
        system "${prefix}/bin/scrollkeeper-update; true"
        system "${prefix}/bin/update-desktop-database -q ${prefix}/share/applications; true"
        system "${prefix}/bin/update-mime-database ${prefix}/share/mime; true"
}

livecheck.type  regex
livecheck.url   http://ftp.gnome.org/pub/gnome/sources/${name}/${branch}/
livecheck.regex {LATEST-IS-(\d+(?:\.\d+)*)}
