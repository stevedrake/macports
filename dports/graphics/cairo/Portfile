# $Id$

PortSystem              1.0

name                    cairo
set my_name             cairo
version                 1.6.4
revision                1
categories              graphics
maintainers             ryandesign
homepage                http://cairographics.org/
master_sites            ${homepage}releases/
platforms               darwin macosx
use_parallel_build      yes
dist_subdir             ${my_name}
distname                ${my_name}-${version}

description \
    Cairo is a vector graphics library with cross-device output support.

long_description \
    Cairo is designed to produce identical output on all output media \
    while taking advantage of display hardware acceleration when available \
    (eg. through the X Render Extension).

checksums \
    md5 a198d509f9e3a35b78de8bb02174ebb9 \
    sha1 9d990fe39a125ceb07221623c237cd7015855d5c \
    rmd160 ccae736a40d985b72bda7c2f0a98a0838020658e

depends_build \
    port:pkgconfig

depends_lib \
    port:libpixman \
    port:xrender \
    port:fontconfig \
    port:freetype \
    port:libpng \
    port:render \
    port:zlib \
    port:expat

# The +universal variant is written in such a way that the port's global
# configure.args must not be empty!
configure.args \
    --disable-glitz \
    --disable-quartz \
    --disable-quartz-font \
    --disable-quartz-image \
    --disable-xcb \
    --enable-freetype \
    --enable-pdf \
    --enable-png \
    --enable-ps \
    --enable-svg \
    --enable-xlib \
    --enable-xlib-xrender \
    --with-x

variant glitz conflicts no_x11 description {Add glitz graphics interface} {
    depends_lib-append \
        port:glitz
    configure.args-delete \
        --disable-glitz
    configure.args-append \
        --enable-glitz
}

variant no_x11 conflicts glitz description {Omit X11 support} {
    depends_lib-delete \
        port:xrender \
        port:render
    configure.args-delete \
        --enable-xlib \
        --enable-xlib-xrender \
        --with-x
    configure.args-append \
        --disable-xlib \
        --disable-xlib-xrender \
        --without-x
}

platform macosx {
    if {${os.major} > 7} {
        configure.args-delete \
            --disable-quartz \
            --disable-quartz-font \
            --disable-quartz-image \
        
        configure.args-append \
            --enable-quartz \
            --enable-quartz-font \
            --enable-quartz-image \
        
        post-destroot {
            xinstall -m 0644 -W [lindex ${my_worksrcpaths} 0] \
                src/cairo-quartz-font.pc \
                ${destroot}${prefix}/lib/pkgconfig
        }
    }
}

post-configure {
    foreach my_worksrcpath ${my_worksrcpaths} {
        reinplace "s/-dynamiclib/-dynamiclib -flat_namespace/" ${my_worksrcpath}/libtool
    }
}

set my_universal_archs {i386 ppc}
set first_arch [lindex ${my_universal_archs} 0]

set my_worksrcpaths ${worksrcpath}

variant universal {
    set my_worksrcpaths {}
    foreach arch ${my_universal_archs} {
        lappend my_worksrcpaths ${workpath}/${arch}
    }

    post-patch {
        foreach arch ${my_universal_archs} {
            if {[string equal ${arch} ${first_arch}]} {
                move ${worksrcpath} ${workpath}/${first_arch}
            } else {
                copy ${workpath}/${first_arch} ${workpath}/${arch}
            }
        }
    }
    
    configure {
        foreach arch ${my_universal_archs} {
            set my_arch_flag "-arch ${arch}"
            set my_cflags "${configure.cflags} -isysroot ${sysroot} ${my_arch_flag}"
            set my_ldflags "${configure.ldflags} ${my_arch_flag}"
            system "cd ${workpath}/${arch} && CFLAGS=\"${my_cflags}\" CXXFLAGS=\"${my_cflags}\" LDFLAGS=\"${my_ldflags}\" ${configure.cmd} ${configure.pre_args} ${configure.args}"
        }
    }
    
    build {
        foreach arch ${my_universal_archs} {
            system "cd ${workpath}/${arch} && ${build.cmd} ${build.pre_args}"
        }
    }
    
    destroot {
        system "cd ${workpath}/${first_arch} && ${destroot.cmd} ${destroot.pre_args} ${destroot.post_args}"
        foreach lib [list [file readlink ${workpath}/${first_arch}/src/.libs/libcairo.dylib] libcairo.a] {
            set output_lib ${destroot}${prefix}/lib/${lib}
            set lipo_args {}
            foreach arch ${my_universal_archs} {
                lappend lipo_args -arch ${arch} ${workpath}/${arch}/src/.libs/${lib}
            }
            lappend lipo_args -create -output ${output_lib}
            delete ${output_lib}
            system "lipo ${lipo_args}"
        }
    }
}

livecheck.check         regex
livecheck.url           ${homepage}news/
livecheck.regex         ${my_name}-(\[0-9\]+\\.\[0-9\]*\[02468\]\\.\[0-9\]+)
