# $Id$

PortSystem 1.0
PortGroup xcode 1.0

name                ogre
version             1.7.3
set branch          [join [lrange [split ${version} .] 0 1] .]
license             MIT
categories          graphics
maintainers         openmaintainer mmoll
description         Object-Oriented Graphics Rendering Engine
long_description    $description
homepage            http://www.ogre3d.org/
platforms           darwin
master_sites        sourceforge:project/${name}/${name}/${branch}

checksums           rmd160  fea467f35aaf0fd5926573de4f0348ed44191893 \
                    sha1    41acccfbbf7297c91cda78a0ce8a053e56505f04
distname            ${name}_src_v[strsed ${version} {g/\./-/}]
use_bzip2           yes

depends_build       port:cmake
depends_lib         port:libzzip port:zlib port:freeimage port:freetype \
                    port:boost
xcode.configuration Release
build.target        ALL_BUILD
destroot {
    copy ${worksrcpath}/lib/Release/Ogre.framework ${destroot}/${prefix}/Library/Frameworks/Ogre.framework
}

#
# the code below is copied from the cmake portgroup file
#
use_configure       yes
# standard place to install extra CMake modules
set cmake_share_module_dir ${prefix}/share/cmake/modules
configure.cmd       cmake
configure.pre_args  -GXcode -DCMAKE_INSTALL_PREFIX=${destroot}
configure.args      -DCMAKE_VERBOSE_MAKEFILE=ON \
                    -DCMAKE_COLOR_MAKEFILE=ON \
                    -DCMAKE_BUILD_TYPE=Release \
                    -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
                    -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib \
                    -DCMAKE_SYSTEM_PREFIX_PATH=\"${prefix}\;/usr\" \
                    -DCMAKE_MODULE_PATH=${cmake_share_module_dir} \
                    -Wno-dev
pre-configure {
    if {${os.platform} == "darwin" && (![variant_isset universal] || ![variant_exists universal])} {
        configure.args-append \
        -DCMAKE_OSX_ARCHITECTURES=\"${configure.build_arch}\"
    }
    configure.universal_args-append \
        -DCMAKE_OSX_ARCHITECTURES=\"[join ${configure.universal_archs} \;]\"
    if {${configure.sdkroot} != ""} {
        configure.args-append -DCMAKE_OSX_SYSROOT="${configure.sdkroot}"
    } else {
        configure.args-append -DCMAKE_OSX_SYSROOT=/
    }
}
configure.universal_args-delete --disable-dependency-tracking

livecheck.type      regex
livecheck.url       ${homepage}download/source
livecheck.regex     {>OGRE ([0-9.]+) Source}
