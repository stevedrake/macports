--- configure.orig	Mon Jan  6 14:21:27 2003
+++ configure	Tue Oct  5 14:36:46 2004
@@ -3849,7 +3849,7 @@
   ;;
 
 darwin* | rhapsody*)
-  lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
+  lt_cv_deplibs_check_method='pass_all'
   lt_cv_file_magic_cmd='/usr/bin/file -L'
   case "$host_os" in
   rhapsody* | darwin1.[012])
@@ -6778,7 +6778,7 @@
       #        cross-compilation, but unfortunately the echo tests do not
       #        yet detect zsh echo's removal of \ escapes.  Also zsh mangles
       #	       `"' quotes if we put them in here... so don't!
-      archive_cmds='$CC -r ${wl}-bind_at_load -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib ${lib}-master.o $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+      archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
       # We need to add '_' to the symbols in $export_symbols first
       #_LT_AC_TAGVAR(archive_expsym_cmds, )="$_LT_AC_TAGVAR(archive_cmds, )"' && strip -s $export_symbols'
       hardcode_direct=yes
@@ -9146,6 +9146,32 @@
 echo $ECHO_N "checking whether the $compiler linker ($LD) supports shared libraries... $ECHO_C" >&6
 ld_shlibs_CXX=yes
 case $host_os in
+  darwin* | rhapsody*)
+    case "$host_os" in
+      rhapsody* | darwin1.[012])
+        allow_undefined_flag_CXX='-undefined suppress'
+        ;;
+      *) # Darwin 1.3 on
+        if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+          allow_undefined_flag_CXX='-flat_namespace -undefined suppress'
+        else
+          case ${MACOSX_DEPLOYMENT_TARGET} in
+            10.[012])
+              allow_undefined_flag_CXX='-flat_namespace -undefined suppress'
+              ;;
+            10.*)
+              allow_undefined_flag_CXX='-undefined dynamic_lookup'
+              ;;
+          esac
+        fi
+        ;;
+    esac
+    archive_cmds_CXX='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+    hardcode_direct_CXX=no
+    hardcode_shlibpath_var_CXX=unsupported
+    whole_archive_flag_spec_CXX='-all_load $convenience'
+    link_all_deplibs_CXX=yes
+    ;;
   aix3*)
     # FIXME: insert proper C++ library support
     ld_shlibs_CXX=no
@@ -12809,7 +12835,7 @@
       #        cross-compilation, but unfortunately the echo tests do not
       #        yet detect zsh echo's removal of \ escapes.  Also zsh mangles
       #	       `"' quotes if we put them in here... so don't!
-      archive_cmds_F77='$CC -r ${wl}-bind_at_load -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib ${lib}-master.o $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+      archive_cmds_F77='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
       # We need to add '_' to the symbols in $export_symbols first
       #_LT_AC_TAGVAR(archive_expsym_cmds, F77)="$_LT_AC_TAGVAR(archive_cmds, F77)"' && strip -s $export_symbols'
       hardcode_direct_F77=yes
@@ -14943,7 +14969,7 @@
       #        cross-compilation, but unfortunately the echo tests do not
       #        yet detect zsh echo's removal of \ escapes.  Also zsh mangles
       #	       `"' quotes if we put them in here... so don't!
-      archive_cmds_GCJ='$CC -r ${wl}-bind_at_load -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib ${lib}-master.o $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+      archive_cmds_GCJ='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
       # We need to add '_' to the symbols in $export_symbols first
       #_LT_AC_TAGVAR(archive_expsym_cmds, GCJ)="$_LT_AC_TAGVAR(archive_cmds, GCJ)"' && strip -s $export_symbols'
       hardcode_direct_GCJ=yes
