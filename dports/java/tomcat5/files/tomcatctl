#!/bin/sh

PREFIX=
TOMCAT_USER=

WC=wc
JSVC="$PREFIX/bin/jsvc"
#JSVC_ENV=
#JSVC_DEBUG="-debug -verbose"

usage()
{
    cat <<EOT
USAGE: `basename $0` [--jpda] start|stop|restart|info
EOT
}

# Parse Parameters
USE_JPDA=false
while [[ "$1" == -* ]]; do
    case $1 in
    --jpda)
        USE_JPDA=true
        ;;
    *)
        usage
        exit 1
        ;;
    esac
    shift
done

# Parse action verb
if [ $# -lt 1 ]; then
   usage
   exit 1
fi
ACTION=$1
shift

# Calculate CATALINA_HOME
if [ -z "$CATALINA_HOME" ]; then
    # Handle symlinks
    PRG="$0"    
    while [ -L "$PRG" ]; do
        ls=`ls -ld "$PRG"`
        link=`expr "$ls" : '.*-> \(.*\)$'`
        if expr "$link" : '/.*' > /dev/null; then
            PRG="$link"
        else
            PRG="`dirname $PRG`/$link"
        fi
    done
    
    pushd "`dirname \"$PRG\"`/.." > /dev/null
    CATALINA_HOME="`pwd -P`"
    popd > /dev/null
fi

# Source the setenv.sh file to allow user to configure environment
# including JAVA_HOME
if [ -r "$CATALINA_HOME/bin/setenv.sh" ]; then
    . "$CATALINA_HOME/bin/setenv.sh"
fi

# Source the setclasspath.sh file to allow setup the CLASSPATH variable
BASEDIR="$CATALINA_HOME"
. "$CATALINA_HOME/bin/setclasspath.sh"

# Set variable default values
[ -n "$CATALINA_BASE" ]     || CATALINA_BASE="${CATALINA_HOME}"
[ -n "$CATALINA_TMPDIR" ]   || CATALINA_TMPDIR="${CATALINA_BASE}/temp"

[ -n "$TOMCAT_PIDNAME" ]    || TOMCAT_PIDNAME="tomcat5.pid"
[ -n "$TOMCAT_PIDFILE" ]    || TOMCAT_PIDFILE="${PREFIX}/var/run/${TOMCAT_PIDNAME}"
[ -n "$TOMCAT_USER" ]       || TOMCAT_USER=tomcat

[ -n "$JAVA_ENDORSED_DIRS" ]|| JAVA_ENDORSED_DIRS=${CATALINA_BASE}/common/endorsed

[ -n "$JPDA_TRANSPORT" ]    || JPDA_TRANSPORT=dt_socket
[ -n "$JPDA_ADDRESS" ]      || JPDA_ADDRESS=8000

if $USE_JPDA && [ -z "$JPDA_OPTS" ]; then
    JPDA_OPTS="-Xdebug -Xrunjdwp:transport=$JPDA_TRANSPORT,address=$JPDA_ADDRESS,server=y,suspend=n"
fi

CLASSPATH="$CLASSPATH":"$CATALINA_HOME"/bin/bootstrap.jar:"$CATALINA_HOME"/bin/commons-logging-api.jar

check()
{
    PID=
    RUNNING=
    STATUS=
    
    if [ -f "$TOMCAT_PIDFILE" ]; then
        PID=`cat $TOMCAT_PIDFILE`
        #if [ -n "$PID" ] && kill -0 $PID; then
        if [ -n "$PID" ] && ((`ps $PID | $WC -l` > 1)); then
            STATUS="running (pid $PID)"
            RUNNING=$PID
        else
            STATUS="not running (stale pid $PID?)"
            RUNNING=
        fi
    else
        STATUS="not running"
        RUNNING=
    fi
}


start()
{
    echo -n "Starting Tomcat..."
    check
    
    if [ -n "$RUNNING" ]; then
        echo "already $STATUS"
    else
        # Remove any existing pid file
        rm -f "$TOMCAT_PIDFILE"
        
        # Start Tomcat using jsvc
        $JSVC_ENV $JSVC $JSVC_DEBUG $JPDA_OPTS \
            -home "$JAVA_HOME" \
            -user "$TOMCAT_USER" \
            -classpath "${CLASSPATH}" \
            -pidfile "$TOMCAT_PIDFILE" \
            -outfile "$CATALINA_BASE/logs/catalina.out" \
            -errfile "$CATALINA_BASE/logs/catalina.err" \
            -Dcatalina.home="$CATALINA_HOME" \
            -Dcatalina.base="$CATALINA_BASE" \
            -Djava.io.tmpdir="$CATALINA_TMPDIR" \
            -Djava.endorsed.dirs="$JAVA_ENDORSED_DIRS" \
            org.apache.catalina.startup.Bootstrap "$@" start
            
        # Wait for it to really start
        for ((CNT=0; CNT < 15; ++CNT)); do
            [ -f "$TOMCAT_PIDFILE" ] && break
            echo -n "."
            sleep 1
        done
        
        # Let 'em know what happened
        check
        if [ -n "$RUNNING" ]; then
            echo " started. (pid $PID)"
        else
            echo " giving up."
        fi
    fi
}


stop()
{
    echo -n "Stopping Tomcat..."
    check
    
    if [ -z "$RUNNING" ]; then
        echo "already $STATUS"
    else
        echo -n "(pid $PID)"
        
        # Stop Tomcat
        kill $PID
        
        # Wait for it to really stop
        for ((CNT=0; CNT < 15; ++CNT)); do
            [ -f "$TOMCAT_PIDFILE" ] || break
            echo -n "."
            sleep 1
        done
        
        # Let 'em know what happened
        check
        if [ -z "$RUNNING" ]; then
            echo " stopped."
        else
            echo " giving up."
        fi
    fi
}


case $ACTION in
start)
    start
    ;;
    
stop)
    stop
    ;;
    
restart)
    stop
    start
    ;;
    
info)
    check
    
    cat <<EOT

Tomcat is $STATUS

CATALINA_HOME       $CATALINA_HOME
CATALINA_BASE       $CATALINA_BASE
CATALINA_TMPDIR     $CATALINA_TMPDIR
JAVA_HOME           $JAVA_HOME
CLASSPATH           $CLASSPATH
TOMCAT_PIDFILE      $TOMCAT_PIDFILE
JPDA_OPTS           $JPDA_OPTS
EOT
    ;;
    
*)
    usage
    ;;
esac


