Index: kdelibs-4.3.2/kdecore/kernel/kkernel_mac.cpp
===================================================================
--- kdelibs-4.3.2.orig/kdecore/kernel/kkernel_mac.cpp	2009-01-06 18:27:48.000000000 +0100
+++ kdelibs-4.3.2/kdecore/kernel/kkernel_mac.cpp	2009-10-14 14:40:01.000000000 +0200
@@ -43,10 +43,6 @@
 #include <kconfig.h>
 #include <kdebug.h>
 
-int timeout = 3000; // msec
-
-bool dbus_initialized = false;
-
 /**
   qAppFileName() is not public in qt4/mac, so we need to redo it here
 */
@@ -112,79 +108,6 @@
 	}
 }
 
-/**
- Set the D-Bus environment based on session bus socket
-*/
-
-bool mac_set_dbus_address(QString value)
-{
-	if (!value.isEmpty() && QFile::exists(value) && (QFile::permissions(value) & QFile::WriteUser)) {
-		value = "unix:path=" + value;
-		::setenv("DBUS_SESSION_BUS_ADDRESS", value.toLocal8Bit(), 1);
-		kDebug() << "set session bus address to" << value;
-		return true;
-	}
-	return false;
-}
-
-/**
- Make sure D-Bus is initialized, by any means necessary.
-*/
-
-void mac_initialize_dbus()
-{
-	if (dbus_initialized)
-		return;
-
-	QString dbusVar = qgetenv("DBUS_SESSION_BUS_ADDRESS");
-	if (!dbusVar.isEmpty()) {
-		dbus_initialized = true;
-		return;
-	}
-
-	dbusVar = QFile::decodeName(qgetenv("DBUS_LAUNCHD_SESSION_BUS_SOCKET"));
-	if (mac_set_dbus_address(dbusVar)) {
-		dbus_initialized = true;
-		return;
-	}
-
-	QString externalProc;
-	QStringList path = QFile::decodeName(qgetenv("KDEDIRS")).split(':').replaceInStrings(QRegExp("$"), "/bin");
-	path << QFile::decodeName(qgetenv("PATH")).split(':') << "/usr/local/bin";
-
-	for (int i = 0; i < path.size(); ++i) {
-		QString testLaunchctl = QString(path.at(i)).append("/launchctl");
-		if (QFile(testLaunchctl).exists()) {
-			externalProc = testLaunchctl;
-			break;
-		}
-	}
-
-	if (!externalProc.isEmpty()) {
-                QProcess qp;
-                qp.setTextModeEnabled(true);
-
-		qp.start(externalProc, QStringList() << "getenv" << "DBUS_LAUNCHD_SESSION_BUS_SOCKET");
-                if (!qp.waitForFinished(timeout)) {
-                    kDebug() << "error running" << externalProc << qp.errorString();
-                    return;
-                }
-                if (qp.exitCode() != 0) {
-                    kDebug() << externalProc << "unsuccessful:" << qp.readAllStandardError();
-                    return;
-                }
-
-                QString line = qp.readLine().trimmed(); // read the first line
-                if (mac_set_dbus_address(line))
-                    dbus_initialized = true; // hooray
-	}
-
-	if (dbus_initialized == false) {
-		kDebug() << "warning: unable to initialize D-Bus environment!";
-	}
-
-}
-
 QString mac_app_filename() {
 	static QString appFileName;
 	if (appFileName.isEmpty()) {
Index: kdelibs-4.3.2/kdecore/kernel/kkernel_mac.h
===================================================================
--- kdelibs-4.3.2.orig/kdecore/kernel/kkernel_mac.h	2009-01-01 17:28:04.000000000 +0100
+++ kdelibs-4.3.2/kdecore/kernel/kkernel_mac.h	2009-10-14 14:40:22.000000000 +0200
@@ -41,11 +41,6 @@
 KDECORE_EXPORT void mac_fork_and_reexec_self();
 
 /**
-  * Initialize D-Bus Mac-specific stuff if necessary.
-  */
-KDECORE_EXPORT void mac_initialize_dbus();
-
-/**
   * Get the application name.
   */
 KDECORE_EXPORT QString mac_app_filename();
Index: kdelibs-4.3.2/kdeui/kernel/kapplication.cpp
===================================================================
--- kdelibs-4.3.2.orig/kdeui/kernel/kapplication.cpp	2009-07-21 17:16:13.000000000 +0200
+++ kdelibs-4.3.2/kdeui/kernel/kapplication.cpp	2009-10-14 14:40:58.000000000 +0200
@@ -451,10 +451,6 @@
      ::exit(127);
   }
 
-#ifdef Q_WS_MAC
-  mac_initialize_dbus();
-#endif
-
   KApplication::KApp = q;
 
   parseCommandLine();
Index: kdelibs-4.3.2/kdeui/kernel/kuniqueapplication.cpp
===================================================================
--- kdelibs-4.3.2.orig/kdeui/kernel/kuniqueapplication.cpp	2009-07-21 17:16:13.000000000 +0200
+++ kdelibs-4.3.2/kdeui/kernel/kuniqueapplication.cpp	2009-10-14 14:41:12.000000000 +0200
@@ -141,10 +141,6 @@
         appName.prepend(s);
      }
 
-#ifdef Q_WS_MAC
-  mac_initialize_dbus();
-#endif
-
   bool forceNewProcess = Private::s_multipleInstances || flags & NonUniqueInstance;
 
   if (Private::s_nofork)
