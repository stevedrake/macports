--- src/net/socket.cpp.orig	2010-12-13 14:20:00.000000000 -0500
+++ src/net/socket.cpp	2010-12-13 14:21:38.000000000 -0500
@@ -194,9 +194,10 @@
 		}
 		// Bind this socket to IPv4 as well. This is a workaround for systems
 		// which support IPv4-mapped addresses but have them disabled by
+#if !defined(Q_OS_MACX) && !defined(Q_OS_DARWIN)
 		// default (e.g. net.ipv6.bindv6only=1 on Debian Linux).
 		setsockopt(m_fd,SOL_IPV6,IPV6_V6ONLY,&no,sizeof(no));
-
+#endif
 		net::Address addr(ip,port);
 		if (::bind(m_fd,addr.address(),addr.length()) != 0)
 		{
@@ -227,9 +228,10 @@
 		}
 		// Bind this socket to IPv4 as well. This is a workaround for systems
 		// which support IPv4-mapped addresses but have them disabled by
+#if !defined(Q_OS_MACX) && !defined(Q_OS_DARWIN)
 		// default (e.g. net.ipv6.bindv6only=1 on Debian Linux).
 		setsockopt(m_fd,SOL_IPV6,IPV6_V6ONLY,&no,sizeof(no));
-		
+#endif		
 		if (::bind(m_fd,addr.address(),addr.length()) != 0)
 		{
 			Out(SYS_CON|LOG_IMPORTANT) << QString("Cannot bind to port %1:%2 : %3").arg(addr.ipAddress().toString()).arg(addr.port()).arg(strerror(errno)) << endl;
@@ -368,9 +370,11 @@
 		}
 		else
 		{
+#if !defined(Q_OS_MACX) && !defined(Q_OS_DARWIN)
 #ifdef __GNUC__
 #warning "Find way to set IPv6 traffic class"
 #endif
+#endif
 			return true;
 		}
 		return true;
