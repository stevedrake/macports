# $Id$

PortSystem 1.0

name			apple-gcc42
version			5666.3
categories		lang
platforms		darwin
maintainers		nomaintainer
description		Apple's version of gcc 4.2
long_description	Apple's version of the GNU compiler collection, \
			version 4.2. Supports C and Objective-C.

homepage		http://opensource.apple.com/
master_sites		http://opensource.apple.com/tarballs/gcc/
distname		gcc-${version}
checksums               md5     188c7769db5c898922b0976fab148a63 \
                        sha1    292a0cfcfdc061cb083658efd9a3812a120a1f50 \
                        rmd160  a01d000f89c0e89dd0079dcd202bba7629ba78dc

post-extract { file mkdir ${workpath}/build }

set nprefix ${prefix}/lib/${name}

# try to avoid non-Apple programs at all costs (rather volatile build)
configure.dir		${workpath}/build
configure.cmd		${worksrcpath}/configure
configure.pre_args	--prefix=${nprefix}
configure.ccache	no
configure.distcc	no
# C++ support breaks the build
configure.args		--enable-languages=c,objc \
			--program-suffix=-apple-4.2
configure.cflags
configure.ldflags
configure.cppflags
configure.cc_archflags
configure.cxx_archflags
configure.objc_archflags
configure.ld_archflags
configure.env		PATH="/bin:/usr/bin:/sbin:/usr/sbin"

build.dir		${configure.dir}

destroot.dir		${build.dir}

# STAGE1_CFLAGS="-O2 -fkeep-inline-functions" : from configure.ac
# BOOT_CFLAGS="-O2 -g" : from Makefile.tpl
# -std=gnu89 : for building with compilers that default to c99 (clang)
# -D_FORTIFY_SOURCE=0 : The built compiler might not understand newer builtins
#                       exposed in libc headers for fortified string functions.
#                       Yes, we need to set both BOOT_CFLAGS and STAGE1_CFLAGS
#                       because STAGE1_CFLAGS is used with xgcc for libgcc
build.args-append BOOT_CFLAGS="-O2 -g -D_FORTIFY_SOURCE=0" STAGE1_CFLAGS="-O2 -fkeep-inline-functions -D_FORTIFY_SOURCE=0 -std=gnu89"

post-destroot {
	file delete -force \
		${destroot}${nprefix}/man ${destroot}${nprefix}/info
	system "cd ${destroot}${prefix}/bin && ln -sf ${nprefix}/bin/gcc-apple-4.2 && ln -sf ${nprefix}/bin/cpp-apple-4.2"
}

livecheck.type		regex
livecheck.url		[lindex ${master_sites} 0]
livecheck.regex		gcc-(\\d+(?:\\.\\d+)*)\\.tar
