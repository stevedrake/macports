# $Id: Portfile,v 1.34 2005/04/28 20:12:23 gwright Exp $

PortSystem 1.0
name		ghc
version		6.4
revision	1
categories	lang
maintainers	gwright@opendarwin.org
platforms	darwin
description	The Glorious Glasgow Haskell Compilation System
long_description	\
		The Glasgow Haskell Compiler is a robust,		\
		fully-featured, optimising compiler and interactive	\
		environment for Haskell 98, GHC compiles Haskell to	\
		either native code or C.  It implements numerous	\
		experimental language extensions to Haskell 98,		\
		for example: concurrency, a foreign language interface,	\
		multi-parameter type classes, scoped type variables,	\
		existential and universal quantification, unboxed	\
		types, exceptions, weak pointers, and so on.		\
		GHC comes with a generational garbage collector,	\
		and a space and time profiler. 

#
# The compiler build requires happy version 1.15.  
#
set happy_version	1.15

homepage	http://www.haskell.org/ghc/
master_sites	${homepage}/dist/${version}/:source \
	        http://www.haskell.org/happy/dist/${happy_version}:happy

use_bzip2	yes

distfiles	${name}-${version}-src.tar.bz2:source \
		happy-${happy_version}-src.tar.gz:happy

checksums	ghc-${version}-src.tar.bz2        md5 45ea4e15f135698feb88d12c5000aaf8 \
		happy-${happy_version}-src.tar.gz md5 02ceb122b904fa4a4290e6ea1072d59e

#
# After it extracting the happy parser generator, copy it into the
# main ghc tree. The configure argument --enable-src-tree-happy
# directs the ghc build to make happy from the freshly downloaded
# source before building the compiler.
#
post-extract	{
		cd ${workpath}
		system "gzip ${extract.pre_args} ${distpath}/happy-${happy_version}-src.tar.gz ${extract.post_args}"

		file copy ${workpath}/happy-${happy_version}/happy ${worksrcpath}/happy
	}

patchfiles	patch-configure.ac 

# The following is required because ghc triggers a long-standing bug
# in make 3.79 and earlier. (3.79 is standard on Panther.) The bug causes
# make to fall into an infinite loop.

depends_build	path:${prefix}/bin/gmake:gmake

# On Panther we shouldn't have to depend on dlcompat, but the
# bootstrap compiler needs it. An infelicity to be fixed.

depends_lib	lib:libreadline.5:readline		\
		path:${prefix}/lib/libdl.1:dlcompat	\
		lib:libgmp.3:gmp

platform darwin 6 {
		master_sites-append	${homepage}/dist/6.0.1/MacOSX/:bootstrap

		distfiles-append	${name}-6.0.1-darwin-bootstrap.tar.bz2:bootstrap

		checksums-append	ghc-6.0.1-darwin-bootstrap.tar.bz2 md5 280afe385405fa437ae274bfab2c3250

		extract.only		${name}-${version}-src.tar.bz2 \
					${name}-6.0.1-darwin-bootstrap.tar.bz2

		depends_lib-append	lib:libreadline.4.3:readline-4

		pre-configure	{
			cd ${worksrcpath}
			system "autoreconf"

			set cfg [open "${worksrcpath}/mk/build.mk" w]
		  	puts $cfg "#"
		  	puts $cfg "# Local configuration overrides for DarwinPorts"
		  	puts $cfg "#"
		  	puts $cfg "ReadlineIncludePath=${prefix}/include"
		  	puts $cfg "SRC_CC_OPTS += -I${prefix}/include"
		  	puts $cfg "SRC_HC_OPTS += -I${prefix}/include -L${prefix}/lib"
		  	puts $cfg "SRC_HC_OPTS += -pgmP \"gcc3 -E -traditional-cpp\""
		  	puts $cfg "EXTRA_HSC2HS_OPTS += -I${prefix}/include"
		  	puts $cfg "EXTRA_LD_OPTS += -L${prefix}/lib"
		  	close $cfg

		  	cd ${workpath}/${name}-bootstrap/bin
		  	reinplace "s|/usr/local|${workpath}/${name}-bootstrap|" ghc
		}

		configure.args-append	--with-gcc=gcc3			\
					--with-ghc='${workpath}/${name}-bootstrap/bin/ghc -pgmP \"gcc3 -E traditional-cpp\"'
	}


platform darwin 7 {
		master_sites-append	${homepage}/dist/6.2.2/MacOSX/:bootstrap

		distfiles-append	${name}-6.2.2-darwin-bootstrap-v01.tar.bz2:bootstrap

		checksums-append	ghc-6.2.2-darwin-bootstrap-v01.tar.bz2 md5 e17a51a96cfcd587dc9bc3bea57006d0

		extract.only		${name}-${version}-src.tar.bz2 \
					${name}-6.2.2-darwin-bootstrap-v01.tar.bz2

		pre-configure	{
			cd ${worksrcpath}
			system "autoreconf"

			set cfg [open "${worksrcpath}/mk/build.mk" w]
		  	puts $cfg "#"
		  	puts $cfg "# Local configuration overrides for DarwinPorts"
		  	puts $cfg "#"
		  	puts $cfg "ReadlineIncludePath=${prefix}/include"
		  	puts $cfg "SRC_CC_OPTS += -I${prefix}/include"
		  	puts $cfg "SRC_HC_OPTS += -I${prefix}/include -L/usr/lib -L${prefix}/lib"
		  	puts $cfg "EXTRA_HSC2HS_OPTS += -I${prefix}/include"
		  	puts $cfg "EXTRA_LD_OPTS += -L/usr/lib"
		  	puts $cfg "EXTRA_LD_OPTS += -L${prefix}/lib"
		  	close $cfg

		  	cd ${workpath}/${name}-bootstrap/bin
		  	reinplace "s|/opt/local|${workpath}/${name}-bootstrap|" ghc
		}

		configure.args-append --with-ghc='${workpath}/${name}-bootstrap/bin/ghc'
	}

#bugs		GHC does not support DESTDIR. Instead, we install	\
#		everything into ${destroot}/${prefix}, and then fix up	\
#		the five scripts which actually have the installation	\
#		path hard coded.
#
#		Yes, it actually depends on two different readline	\
#		libraries when built under Jaguar. The port itself	\
#		builds with readline 5.0, but the bootstrap compiler	\
#		needs readline 4.3.

configure.env	LDFLAGS="-L/usr/lib -L${prefix}/lib"	\
		CPPFLAGS="-I${prefix}/include"		\
		CFLAGS="-I${prefix}/include"

configure.args	--prefix=${destroot}/${prefix}			\
		--mandir=${destroot}/${prefix}/share/man/	\
		--enable-src-tree-happy

variant noopengl	{ configure.args-append --disable-hopengl }

build.cmd	gmake

post-destroot	{
	reinplace s|${destroot}/${prefix}|${prefix}|g ${destroot}/${prefix}/bin/ghc
	reinplace s|${destroot}/${prefix}|${prefix}|g ${destroot}/${prefix}/bin/ghci
	reinplace s|${destroot}/${prefix}|${prefix}|g ${destroot}/${prefix}/bin/ghc-pkg
	reinplace s|${destroot}/${prefix}|${prefix}|g ${destroot}/${prefix}/bin/ghcprof
	reinplace s|${destroot}/${prefix}|${prefix}|g ${destroot}/${prefix}/bin/hsc2hs

	reinplace "s|\\\$@\"\}|\\\$@\"\} -L${prefix}/lib -I${prefix}/include |" ${destroot}/${prefix}/bin/ghc

	reinplace s|${destroot}/${prefix}|${prefix}|g ${destroot}/${prefix}/lib/${name}-${version}/package.conf

	cd ${destroot}/${prefix}/lib/ghc-${version}
        system "ranlib *.a"

	file delete ${destroot}${prefix}/bin/happy
	file delete ${destroot}${prefix}/bin/happy-${happy_version}
	file delete -force ${destroot}${prefix}/lib/happy-${happy_version}
}
