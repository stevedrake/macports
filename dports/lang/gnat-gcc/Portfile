# -*- coding: utf-8; mode: tcl; tab-width: 4; truncate-lines: t; indent-tabs-mode: nil; c-basic-offset: 4 -*-
# $Id$
# vim: set fileencoding=utf-8 tabstop=8 shiftwidth=4 softtabstop=4 noexpandtab filetype=tcl :

PortSystem	1.0

name			gnat-gcc
version			4.4.0
#revision		4
platforms		darwin
categories		lang
maintainers		krischik
description		The GNU compiler collection with GNAT
long_description	The GNU compiler collection, including front ends for \
			C, C++, Ada, Objective-C, Objective-C++, Java and Fortran95.

homepage		http://gcc.gnu.org/
master_sites	ftp://ftp.funet.fi/pub/mirrors/sources.redhat.com/pub/gcc/releases/gcc-${version}/ \
		ftp://ftp.gwdg.de/pub/linux/gcc/releases/gcc-${version}/ \
		ftp://gcc.ftp.nluug.nl/mirror/languages/gcc/releases/gcc-${version}/ \
		ftp://gcc.gnu.org/pub/gcc/releases/gcc-${version}/ \
		gnu:/gcc/gcc-${version}

set dcore		gcc-core-${version}.tar.bz2
set dada		gcc-ada-${version}.tar.bz2
set dfort		gcc-fortran-${version}.tar.bz2
set dcxx		gcc-g++-${version}.tar.bz2
set djava		gcc-java-${version}.tar.bz2
set dobjc		gcc-objc-${version}.tar.bz2
distfiles		${dcore} ${dada} ${dfort} ${dcxx} ${djava} ${dobjc}

checksums		${dcore} sha1 081c5a1e49157b9c48fe97497633b6ff39032eb5 \
			${dada}  sha1 07c110a2918f20638524d8ded22581d4cb9204a8 \
			${dfort} sha1 5f9e32d9061937e7706d35d2d5458675352b1368 \
			${dcxx} sha1 063d5acca79ec00276cf6ebdba414804abf3fcb6 \
			${djava} sha1 94c2b5f541db6961c60ae30e0ac8b822fae4f3d3 \
			${dobjc} sha1 21cd70e01c211553c59123c62b4f33330ad212c4

use_bzip2		yes

# gmp and mpfr are not universal
universal_variant	no

depends_lib		port:gmp port:mpfr port:libiconv

set major		4.4

worksrcdir		build
dist_subdir		gcc43

pre-configure {
	file mkdir ${worksrcpath}
}

configure.cmd	../gcc-${version}/configure
configure.args	--enable-languages=c,c++,ada,objc,obj-c++,java,fortran \
		--libdir=${prefix}/lib/${name} \
		--includedir=${prefix}/include/${name} \
		--infodir=${prefix}/share/info \
		--mandir=${prefix}/share/man \
		--with-local-prefix=${prefix} \
		--with-system-zlib \
		--disable-nls \
		--program-suffix=-gnat-${major} \
		--with-gxx-include-dir=${prefix}/include/${name}/c++/ \
		--with-gmp=${prefix} \
		--with-mpfr=${prefix}
# do NOT use MacPorts binutils -- they do not work
configure.env-append	AR_FOR_TARGET=/usr/bin/ar \
			AS_FOR_TARGET=/usr/bin/as \
			LD_FOR_TARGET=/usr/bin/ld \
			NM_FOR_TARGET=/usr/bin/nm \
			OBJDUMP_FOR_TARGET=/usr/bin/objdump \
			RANLIB_FOR_TARGET=/usr/bin/ranlib \
			STRIP_FOR_TARGET=/usr/bin/strip
#			LIPO_FOR_TARGET=/usr/bin/lipo

use_parallel_build	yes

destroot.target install install-info-host
# install-info # errors on objc-info files

post-destroot {
	file delete -force ${destroot}${prefix}/share/man/man7 \
		${destroot}${prefix}/share/info
	# install/copy ffitarget.h only if we have it
	if {![catch {set ffitarget.h [glob ${destroot}${prefix}/lib/${name}/gcc/*/${version}/include/ffitarget.h]} result]} {
		file copy ${ffitarget.h} ${destroot}${prefix}/include/${name}/
	}
	# install select file for gcc_select
	xinstall -m 755 -d ${destroot}${prefix}/etc/select/gcc
	xinstall -m 444 ${filespath}/gnat-gcc ${destroot}${prefix}/etc/select/gcc/
}

#platform darwin 7 {
#	configure.cflags-append	-force_cpusubtype_ALL
#	confgiure.env	BOOT_CFLAGS="-g -O2 -force_cpusubtype_ALL"
#	build.args-append	XCFLAGS=-force_cpusubtype_ALL
#}

platform powerpc {
	configure.args-append --disable-multilib
}

# odcctools currently do not compile for x64 - move to variant for the time being
variant odcctools \
	description "Use the odcctools instead of the system provided ones - does not work for x64 currently!" {
	depends_lib-append	port:odcctools
	patch {
		reinplace "s|/usr/bin/libtool|${prefix}/bin/odlibtool|g" \
			${workpath}/gcc-${version}/gcc/config/darwin.h
	}
	configure.args-append	--with-as=${prefix}/bin/odas \
				--with-ld=${prefix}/bin/odld \
				--with-ar=${prefix}/bin/odar
}

#variant x86_64										\
	#description "Create an Intel 64 bit compiler." {
	#configure.args-append				\
		#--build=i386-apple-darwin9		\
		#--host=i386-apple-darwin9		\
		#--target=x86_64-apple-darwin9
		##APXSLDFLAGS='-arch x86_64'		\
		##--with-apxs=/usr/sbin/apxs
		##CFLAGS='-arch x86_64'			\
#}

#
# Ada is the only language apart from C which is self hosted - meaning: you need
# an ada compiler to compile ada. hence it is just a variant.
#
variant macada									\
    description "Uses MacAda compiler (http://www.macada.org) to bootstrap!"	{
    set bootprefix=/usr/local/ada-4.3
    configure.cc		${bootprefix}/bin/gcc
    configure.cpp		${bootprefix}/bin/cpp
    configure.cxx		${bootprefix}/bin/g++
    configure.objc		${bootprefix}/bin/gcc
    configure.env-append	PATH=${bootprefix}/bin:$env(PATH)
    configure.env-append	GNATMAKE=${bootprefix}/bin/gnatmake
    configure.env-append	GNATBIND=${bootprefix}/bin/gnatbind
}

variant gnatgpl										\
    description "Uses GNAT/GPL compiler (http://libre.adacore.com) to bootstrap!"	{
    set bootprefix=/opt/gnat-2009-x86_64-apple-darwin9.6.0-bin
    configure.cc		${bootprefix}/bin/gcc
    configure.cpp		${bootprefix}/bin/cpp
    configure.cxx		${bootprefix}/bin/g++
    configure.objc		${bootprefix}/bin/gcc
    configure.env-append	PATH=${bootprefix}/bin:$env(PATH)
    configure.env-append	GNATMAKE=${bootprefix}/bin/gnatmake
    configure.env-append	GNATBIND=${bootprefix}/bin/gnatbind
}

variant gnuada											\
    description "Uses the GnuAda (http://gnuada.sourceforge.net/) compiler to bootstrap!"	{
    set bootprefix=/opt/local
    configure.cc		${bootprefix}/bin/gcc-gnat-4.3
    configure.cpp		${bootprefix}/bin/cpp-gnat-4.3
    configure.cxx		${bootprefix}/bin/g++-gnat-4.3
    configure.objc		${bootprefix}/bin/gcc-gnat-4.3
    configure.env-append	PATH=${bootprefix}/bin:$env(PATH)
    configure.env-append	GNATMAKE=${bootprefix}/bin/gnatmake
    configure.env-append	GNATBIND=${bootprefix}/bin/gnatbind
}

variant ada											\
    description "Uses the MacPorts Ada (http://www.macports.org/) compiler to bootstrap!"	{
    configure.cc		${prefix}/bin/gcc
    configure.cpp		${prefix}/bin/cpp
    configure.cxx		${prefix}/bin/g++
    configure.objc		${prefix}/bin/gcc
    configure.env-append	PATH=${prefix}/bin:$env(PATH)
    configure.env-append	GNATMAKE=${prefix}/bin/gnatmake
    configure.env-append	GNATBIND=${prefix}/bin/gnatbind
}

pre-configure {
    if {![variant_isset macada] &&  ![variant_isset gnatgpl] &&  ![variant_isset gnuada]  &&  ![variant_isset ada]} {
	ui_msg "######################################################"
	ui_msg "#  You need to install an Ada compiler and then	     #"
	ui_msg "#  choose an appropiate variant.                     #"
	ui_msg "######################################################"
    }
}

post-configure {
    file delete								\
	${workpath}/gcc-${version}/gcc/ada/mlib-tgt-specific.adb
    file copy								\
	${workpath}/gcc-${version}/gcc/ada/mlib-tgt-specific-darwin.adb	\
	${workpath}/gcc-${version}/gcc/ada/mlib-tgt-specific.adb
}

post-activate {
    ui_msg "######################################################"
    ui_msg "#  Remember to activate the compiler with:           #"
    ui_msg "#                                                    #"
    ui_msg "#  sudo gcc_select gnat-gcc                          #"
    ui_msg "######################################################"
}


livecheck.check regex
livecheck.url	http://gcc.gnu.org/gcc-4.4/
livecheck.regex GCC (4\\.4\\.\[0-9\])
