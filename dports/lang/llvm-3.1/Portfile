# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0

set llvm_version        3.1
name                    llvm-${llvm_version}
set suffix              mp-${llvm_version}
set sub_prefix          ${prefix}/libexec/${name}
svn.revision            146326
version                 ${llvm_version}-r${svn.revision}
categories              lang
platforms               darwin
license                 NCSA
maintainers             jeremyhu openmaintainer
description             llvm is a next generation compiler infrastructure (svn trunk version)
long_description        The LLVM Core libraries provide a modern source- and \
                        target-independent optimizer, along with code \
                        generation support for many popular CPUs (as well as \
                        some less common ones!) These libraries are built \
                        around a well specified code representation known as \
                        the LLVM intermediate representation ("LLVM IR").

homepage                http://llvm.org/
master_sites            ${homepage}releases/${version}/

fetch.type              svn
svn.url                 http://llvm.org/svn/llvm-project/llvm/trunk

worksrcdir              trunk

depends_lib             port:libffi
depends_run             bin:perl:perl5

universal_variant       no

build.env-append        REQUIRE_RTTI=1
configure.cppflags
configure.ldflags
configure.pre_args-delete --prefix=${prefix}
configure.args          --enable-bindings=none --enable-libffi --enable-shared --enable-jit \
                        --enable-optimized --enable-assertions --disable-profiling \
                        --enable-debug-symbols --disable-debug-runtime \
                        --prefix=${sub_prefix}

platform darwin {
    if {${build_arch} == "i386" } {
        configure.pre_args-append --build=i686-apple-darwin${os.major}
    } else {
        configure.pre_args-append --build=${build_arch}-apple-darwin${os.major}
    }
}

platform darwin 8 {
    pre-fetch {
        ui_error "${name} requires Mac OS X 10.5 or greater."
        return -code error "incompatible Mac OS X version"
    }
}

platform darwin 8 {
    configure.args-delete   --enable-shared --enable-jit
}

variant ocaml description {Enable generation of OCaml binding} {
    depends_lib-append   port:ocaml

    configure.args-delete --enable-bindings=none
    configure.args-append --enable-bindings=ocaml

    destroot.args-append  OVERRIDE_libdir=${sub_prefix}/lib
}

post-destroot {
    file mkdir ${destroot}${prefix}/share/doc
    file rename ${destroot}${sub_prefix}/docs/llvm ${destroot}${prefix}/share/doc/${name}

    foreach man [glob ${destroot}${sub_prefix}/share/man/man1/*.1] {
	set basename [string map "${destroot}${sub_prefix}/share/man/man1/ {}" ${man}]
        file rename ${man} ${destroot}${prefix}/share/man/man1/[string map ".1 -${suffix}.1" ${basename}]
    }

    foreach bin [glob ${destroot}${sub_prefix}/bin/*] {
        ln -s [string map "${destroot}${prefix} .." ${bin}] [string map "${sub_prefix} ${prefix}" ${bin}]-${suffix}
    }

    file delete "${destroot}${prefix}/bin/llvm-config-${suffix}"
    xinstall -m 755 ${filespath}/llvm-config "${destroot}${prefix}/bin/llvm-config-${suffix}"
    reinplace "s:SUB_PREFIX:${sub_prefix}:" "${destroot}${prefix}/bin/llvm-config-${suffix}"

    foreach liba [glob ${destroot}${sub_prefix}/lib/*dylib] {
        set liba_nodr [string map "${destroot} {}" ${liba}]
        system "install_name_tool -id ${liba_nodr} ${liba}"

        foreach libb [glob ${destroot}${sub_prefix}/lib/*dylib] {
            set libb_base [string map "${destroot}${sub_prefix}/lib/ {}" ${libb}]
            set libb_nodr [string map "${destroot} {}" ${libb}]

            system "install_name_tool -change @executable_path/../lib/${libb_base} ${libb_nodr} ${liba}"
        }
    }
}
