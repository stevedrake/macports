# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0

name                    llvm-devel
conflicts               llvm
svn.revision            138208
version                 3.0-r${svn.revision}
categories              lang
platforms               darwin
license                 UIUC/NCSA
maintainers             jeremyhu openmaintainer
description             llvm is a next generation compiler infrastructure (svn trunk version)
long_description        The LLVM Core libraries provide a modern source- and \
                        target-independent optimizer, along with code \
                        generation support for many popular CPUs (as well as \
                        some less common ones!) These libraries are built \
                        around a well specified code representation known as \
                        the LLVM intermediate representation ("LLVM IR").

homepage                http://llvm.org/
master_sites            ${homepage}releases/${version}/

fetch.type              svn
svn.url                 http://llvm.org/svn/llvm-project/llvm/trunk

worksrcdir              trunk

depends_lib             port:libffi
depends_run             bin:perl:perl5

universal_variant       no

build.env-append        REQUIRE_RTTI=1
configure.cppflags
configure.ldflags
configure.args          --enable-bindings=none --enable-libffi --enable-shared --enable-jit \
                        --enable-optimized --disable-assertions --disable-profiling \
                        --disable-debug-symbols --disable-debug-runtime

platform darwin {
    if {${build_arch} == "i386" } {
        configure.pre_args-append --build=i686-apple-darwin${os.major}
    } else {
        configure.pre_args-append --build=${build_arch}-apple-darwin${os.major}
    }
}

platform darwin 8 {
    pre-fetch {
        ui_error "${name} requires Mac OS X 10.5 or greater."
        return -code error "incompatible Mac OS X version"
    }
}

variant debug {
    configure.args-delete --disable-assertions --disable-debug-symbols --enable-optimize
    configure.args-append --enable-assertions --enable-debug-symbols --disable-optimize
}

variant ocaml description {Enable generation of OCaml binding} {
    depends_lib-append   port:ocaml

    configure.args-delete --enable-bindings=none
    configure.args-append --enable-bindings=ocaml

    destroot.args-append  OVERRIDE_libdir=${prefix}/lib
}
