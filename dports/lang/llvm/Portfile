# $Id$

PortSystem 1.0

name                    llvm
version                 2.8
revision                2
categories              lang
platforms               darwin
license                 UIUC/NCSA
maintainers             erickt mfeiri
description             llvm is a next generation compiler infrastructure
long_description        The LLVM Core libraries provide a modern source- and \
                        target-independent optimizer, along with code \
                        generation support for many popular CPUs (as well as \
                        some less common ones!) These libraries are built \
                        around a well specified code representation known as \
                        the LLVM intermediate representation ("LLVM IR").

homepage                http://llvm.org/
master_sites            ${homepage}releases/${version}/
dist_subdir             ${name}/${version}_1

extract.suffix          .tgz

checksums               md5     220d361b4d17051ff4bb21c64abe05ba \
                        sha1    6d49fe039d28e8664de25491c775cb2c599e30c1 \
                        rmd160  3f5a71d07e105a7cf46eafc7a9006a927035012c

depends_lib             port:libffi
depends_run             bin:perl:perl5

universal_variant       no
build.env-append        REQUIRE_RTTI=1
patchfiles              patch-Makefile.config.in.diff \
                        patch-Makefile.ocaml.diff

configure.cppflags
configure.ldflags
configure.args          --enable-optimized --enable-shared \
                        --enable-bindings=none --enable-libffi

platform darwin {
    if {${build_arch} == "i386" } {
        configure.pre_args-append --build=i686-apple-darwin${os.major}
    } else {
        configure.pre_args-append --build=${build_arch}-apple-darwin${os.major}
    }
}

post-destroot {
    foreach x "BugpointPasses EnhancedDisassembly LLVM-${version} LLVMHello LTO profile_rt" {
        system "install_name_tool -id ${prefix}/lib/lib${x}.dylib ${destroot}${prefix}/lib/lib${x}.dylib"
    }
}

variant ocaml description {Enable generation of OCaml binding} {
    depends_lib-append   port:ocaml

    configure.args-delete --enable-bindings=none
    configure.args-append --enable-bindings=ocaml

    destroot.args-append  OVERRIDE_libdir=${prefix}/lib
}

livecheck.type  regex
livecheck.url   ${homepage}releases/
livecheck.regex {'(\d+\.\d+)'}
