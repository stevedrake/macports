# $Id: Portfile,v 1.10 2004/07/11 16:29:13 gwright Exp $

PortSystem	1.0
name		logtalk
version		2.18.0

categories	lang
maintainers	pmoura@mac.com
platforms	darwin freebsd linux
description	Logtalk - Open source object-oriented extension to Prolog

long_description	\
		Logtalk is an open source object-oriented extension to the 	\
		Prolog programming language. Integrating logic programming 	\
		with object-oriented and event-driven programming, it is 	\
		compatible with most Prolog compilers. It supports both 	\
		prototypes and classes. In addition, it supports component-	\
		based programming through category-based composition.

homepage        http://www.logtalk.org/
master_sites	${homepage}/files/

checksums	md5 5878630e5660d261caa4131770b36e23

distname	lgt2180

configure	{}

build		{}

destroot	{
	system "mkdir ${destroot}${prefix}/share/${distname}"
	cd ${destroot}${prefix}/share/${distname}

	system "cp -R ${workpath}/${worksrcdir}/* ."
	system "chmod -R go-w,a+r ."
	system "chmod a+x misc/*.sh"
	system "chmod a+x xml/*.sh"
}

post-destroot	{
	cd ${destroot}/${prefix}/share
	system "ln -sf ${distname} logtalk"

	cd ../bin
	system "ln -sf ../share/${distname}/misc/cplgtdirs.sh cplgtdirs.sh"

	if {[variant_isset gprolog]} {
		system "export LOGTALKHOME=../share/${distname}; ../share/${distname}/misc/make_gplgt.sh ${prefix}"
		ui_msg "*******************************************************"
		ui_msg "*  In order to run Logtalk using GNU-Prolog as the    *"
		ui_msg "*  back-end Prolog compiler simply call the program   *"
		ui_msg "*  gplgt from the command line.                       *"
		ui_msg "*******************************************************"
	}

	if {[variant_isset swi-prolog]} {
		system "export LOGTALKHOME=../share/${distname}; ../share/${distname}/misc/make_swilgt.sh ${prefix}"
		ui_msg "*******************************************************"
		ui_msg "*  In order to run Logtalk using SWI-Prolog as the    *"
		ui_msg "*  back-end Prolog compiler simply run the script     *"
		ui_msg "*  swilgt from the command line.                      *"
		ui_msg "*******************************************************"
	}

	if {[variant_isset yap]} {
		system "export LOGTALKHOME=../share/${distname}; ../share/${distname}/misc/make_yaplgt.sh ${prefix}"
		ui_msg "*******************************************************"
		ui_msg "*  In order to run Logtalk using YAP as the back-end  *"
		ui_msg "*  Prolog compiler simply run the script yaplgt from  *"
		ui_msg "*  the command line.                                  *"
		ui_msg "*******************************************************"
	}
}

variant	gprolog	{
	depends_lib-append bin:gplc:gprolog
}

variant	swi-prolog	{
	depends_lib-append bin:swipl:swi-prolog
}

variant	yap	{
	depends_lib-append bin:yap:yap
}
