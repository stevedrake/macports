http://code.google.com/p/pure-lang/issues/detail?id=63
--- interpreter.cc.orig	2011-11-15 13:51:56.000000000 -0600
+++ interpreter.cc	2011-11-20 16:56:56.000000000 -0600
@@ -156,14 +156,14 @@
   }
 
   source_options[HOST] = true;
-  codegen_options.insert(pair<string,bool&>("checks", checks));
-  codegen_options.insert(pair<string,bool&>("const", consts));
-  codegen_options.insert(pair<string,bool&>("fold", folding));
-  codegen_options.insert(pair<string,bool&>("tc", use_fastcc));
-  codegen_options.insert(pair<string,bool&>("warn", compat));
-  codegen_options.insert(pair<string,bool&>("warn2", compat2));
+  codegen_options.insert(pair<string,bool*>("checks", &checks));
+  codegen_options.insert(pair<string,bool*>("const", &consts));
+  codegen_options.insert(pair<string,bool*>("fold", &folding));
+  codegen_options.insert(pair<string,bool*>("tc", &use_fastcc));
+  codegen_options.insert(pair<string,bool*>("warn", &compat));
+  codegen_options.insert(pair<string,bool*>("warn2", &compat2));
 #if USE_BIGINT_PRAGMA
-  codegen_options.insert(pair<string,bool&>("bigint", bigints));
+  codegen_options.insert(pair<string,bool*>("bigint", &bigints));
 #endif
 
   nwrapped = 0; fptr = 0;
@@ -1302,8 +1302,8 @@
 
 bool interpreter::is_enabled(const string& optname)
 {
-  map<string,bool&>::iterator jt = codegen_options.find(optname);
-  if (jt != codegen_options.end()) return jt->second;
+  map<string,bool*>::iterator jt = codegen_options.find(optname);
+  if (jt != codegen_options.end()) return *jt->second;
   map<string,bool>::iterator it = source_options.find(optname);
   if (it != source_options.end()) return it->second;
   // Check the environment for a default.
@@ -1354,9 +1354,9 @@
 
 void interpreter::enable(const string& optname, bool flag)
 {
-  map<string,bool&>::iterator it = codegen_options.find(optname);
+  map<string,bool*>::iterator it = codegen_options.find(optname);
   if (it != codegen_options.end())
-    it->second = flag;
+    *it->second = flag;
   else
     source_options[optname] = flag;
 }
--- interpreter.hh.orig	2011-11-15 12:48:34.000000000 -0600
+++ interpreter.hh	2011-11-20 03:15:12.000000000 -0600
@@ -540,7 +540,7 @@
 
   // User-defined options (conditional compilation pragmas).
 private:
-  map<string,bool&> codegen_options;
+  map<string,bool*> codegen_options;
   map<string,bool> source_options;
 public:
   int source_level, skip_level;
