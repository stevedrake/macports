# $Id: Portfile,v 1.3 2006/01/24 15:55:54 gwright Exp $

PortSystem 1.0

name		slime
version		1.2.1
revision	2
categories	lang
maintainers	evenson@panix.com

description	An Emacs mode for unifying Common Lisp development

long_description	\
		SLIME extends Emacs with new support for interactive \
		programming in Common Lisp. The features are \
		centred around `slime-mode', an Emacs minor-mode \
		that complements the standard `lisp-mode'. While \
		`lisp-mode' supports editing Lisp source files, \
		`slime-mode' adds support for interacting with a \
		running Common Lisp process for compilation,\
		debugging, documentation lookup, and so on. 

homepage	http://common-lisp.net/project/slime/	
master_sites	${homepage}

checksums 	md5 f7fabc03e1ec5a4d380f0890141058d9 \
		sha1 553e10a3eb10b0d965a48d63f2fb1fdb5015073b \
		rmd160 32fe0e7f6a2df63b907711a7c0b5f7267b74defb

use_configure	no
depends_lib	port:emacs
depends_run	port:openmcl

variant devel	{ depends_lib-delete port:emacs
		  depends_lib-append port:emacs-devel
		}

post-patch	{ reinplace "s|/usr/local|${prefix}/share|g" \
			    ${worksrcpath}/doc/makefile
}

pre-build	{ global emacs_binary
		  if {[ variant_isset devel ]} {
		  	set emacs_binary [ glob ${prefix}/bin/emacs\-* ]
		  	ui_msg "emacs binary name is ${emacs_binary}"
		  } else {
			set emacs_binary	${prefix}/bin/emacs
		  }
}
			
build		{ cd ${worksrcpath}
		  upvar #0 emacs_binary emacs_bin
		  system "${emacs_bin}			\
   		  	  --batch			\
			  --directory .			\
			  --funcall batch-byte-compile	\
			  slime.el			\
			  hyperspec.el			\
			  tree-widget.el"

		  cd ${worksrcpath}/doc
		  system "make slime.info"
}

destroot	{ cd ${worksrcpath}
		  set site_lisp_dest ${destroot}${prefix}/share/emacs/site-lisp/slime
		  xinstall -m 755 -d ${site_lisp_dest}

		  foreach file [glob *.el *.elc *.lisp] {
			xinstall -m 644 ${file} ${site_lisp_dest}
		  }

		  xinstall -m 644 ${worksrcpath}/doc/slime.info ${destroot}${prefix}/share/info  
}

post-activate	{ ui_msg "To use SLIME, you need to have a Common Lisp installed with which"
		  ui_msg "you wish to interact.  At the moment, 'openmcl' works with slime."
		  ui_msg "DarwinPorts also has 'clisp' (currently broken with slime),"
		  ui_msg "'sbcl' (also currently broken with slime) and 'gcl' (broken on OS X)."
		  ui_msg ""
		  ui_msg "Then put the following in your ~/.emacs:"
		  ui_msg " (require 'slime)"
		  ui_msg " (slime-setup)"
		  ui_msg " (setq inferior-lisp-program \"openmcl\")"
		  ui_msg ""
		  ui_msg "Replace 'openmcl' with the name of the Common Lisp exectuable"
		  ui_msg "if you wish to use a different lisp."
		  ui_msg ""
		  ui_msg "Then, 'M-x slime' from Emacs should connect you to your chosen"
		  ui_msg "Lisp environment."
}

