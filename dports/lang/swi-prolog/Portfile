# $Id$

PortSystem  1.0
name		swi-prolog
version         5.6.31
epoch		20051223

categories	lang
maintainers	wielemak@science.uva.nl
platforms	darwin
description	SWI-Prolog compiler plus extra packages (stable version)

long_description	\
		ISO/Edinburgh-style Prolog compiler including modules,		\
		autoload, libraries, Garbage-collector, stack-expandor,		\
		C/C++-interface, Multiple threads, GNU-readline interface,	\
		coroutining, constraint programming, global variables,		\
		very fast compiler. Including packages clib (Unix process	\
		control, sockets, MIME), cpp (C++ interface), sgml (reading	\
		XML/SGML), sgml/RDF (reading RDF into triples), ODBC		\
		interface and XPCE (Graphics UI toolkit, integrated editor	\
		(Emacs-clone) and graphical debugger).

homepage	http://www.swi-prolog.org/
master_sites	http://gollem.science.uva.nl/cgi-bin/nph-download/SWI-Prolog/

checksums        md5     c44112d180e9a34647228c4e892a2091

depends_build	port:gawk	\
		port:junit

depends_lib		\
		lib:libreadline:readline	\
		lib:libncursesw:ncurses		\
		lib:libjpeg:jpeg		\
		lib:libmcrypt:libmcrypt		\
		lib:libX11.6:XFree86		\
		lib:libgmp:gmp

platform darwin 6 { depends_lib-append lib:libdl:dlcompat }

distname	pl-${version}

configure.env	LIBRARY_PATH=/opt/local/lib \
		CPATH=/opt/local/include \
		JUNIT=/opt/local/share/java/junit.jar

configure.args	--prefix=${prefix}		\
		--mandir=${prefix}/share/man	\
		--with-world

build.env	LIBRARY_PATH=/opt/local/lib \
            CPATH=/opt/local/include \
		JUNIT=/opt/local/share/java/junit.jar

default_variants +mt

variant st	{ configure.args-append --disable-mt}

variant mt	{ configure.args-append --enable-mt}

post-build {
	file mkdir ${workpath}/macosx
	file copy -force -- ${workpath}/pl-${version}/man/macosx/License.html ${workpath}/macosx/
	file copy -force -- ${workpath}/pl-${version}/man/macosx/macosx.html ${workpath}/macosx/
	file copy -force -- ${workpath}/pl-${version}/man/macosx/Welcome.html ${workpath}/macosx/
}

post-pkg {
	set resources ${workpath}/${name}-${version}.pkg/Contents/Resources/
	file copy -force -- ${workpath}/macosx/License.html ${resources}
	file copy -force -- ${workpath}/macosx/macosx.html ${resources}
	file copy -force -- ${workpath}/macosx/Welcome.html ${resources}
	file rename ${resources}/macosx.html ${resources}/ReadMe.html
	file delete -force -- ${resources}/Welcome.rtf
}

post-mpkg {
	set resources ${workpath}/${name}-${version}.mpkg/Contents/Resources/
	file copy -force -- ${workpath}/macosx/License.html ${resources}
	file copy -force -- ${workpath}/macosx/macosx.html ${resources}
	file copy -force -- ${workpath}/macosx/Welcome.html ${resources}
	file rename ${resources}/macosx.html ${resources}/ReadMe.html
	file delete -force -- ${resources}/Welcome.rtf
}

