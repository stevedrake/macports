# $Id$

PortSystem	1.0

name		swi-prolog
version		5.6.61
epoch		20051223

categories	lang
maintainers	wielemak@science.uva.nl pmoura@logtalk.org
platforms	darwin
description	SWI-Prolog compiler plus extra packages (stable version)

long_description	\
	ISO/Edinburgh-style Prolog compiler including modules,		\
	autoload, libraries, Garbage-collector, stack-expandor,		\
	C/C++-interface, Multiple threads, GNU-readline interface,	\
	coroutining, constraint programming, global variables,		\
	very fast compiler. Including packages clib (Unix process	\
	control, sockets, MIME), cpp (C++ interface), sgml (reading	\
	XML/SGML), sgml/RDF (reading RDF into triples), ODBC		\
	interface and XPCE (Graphics UI toolkit, integrated editor	\
	(Emacs-clone) and graphical debugger).

homepage	http://www.swi-prolog.org/
master_sites	http://gollem.science.uva.nl/cgi-bin/nph-download/SWI-Prolog/

checksums       \
        md5     720a209535366ecfdc3a3adc56eb8ba5 \
        sha1    35842a7c0277cee203fc51724b8cc011ca6a2845 \
        rmd160  4b325f7770250a2584ff84a6cfd1335392cfa843

depends_build   \
	port:gawk	\
	port:junit

depends_lib		\
	port:readline		\
	port:ncurses		\
	port:jpeg		\
	port:libmcrypt		\
	port:gmp		\
	port:zlib		\
	lib:libX11.6:XFree86

platform darwin 6 {
	depends_lib-append port:dlcompat
}

platform darwin 9 {
	depends_lib-append port:expat
}

distname	pl-${version}

configure.env	\
	LIBRARY_PATH=/usr/lib:/usr/X11R6/lib:${prefix}/lib 	\
	CPATH=/usr/include:/usr/X11R6/include:${prefix}/include	\
	JUNIT=${prefix}/share/java/junit.jar

configure.ldflags

configure.args	\
	--mandir=${prefix}/share/man	\
	--with-world

build.env	\
	LIBRARY_PATH=/usr/lib:/usr/X11R6/lib:${prefix}/lib	\
	CPATH=/usr/include:/usr/X11R6/include:${prefix}/include	\
	JUNIT=${prefix}/share/java/junit.jar

post-build {
	file mkdir ${workpath}/macosx
	file copy -force -- ${workpath}/pl-${version}/man/macosx/License.html ${workpath}/macosx/
	file copy -force -- ${workpath}/pl-${version}/man/macosx/macosx.html ${workpath}/macosx/
	file copy -force -- ${workpath}/pl-${version}/man/macosx/Welcome.html ${workpath}/macosx/
}

post-pkg {
	set resources ${workpath}/${name}-${version}.pkg/Contents/Resources/
	file copy -force -- ${workpath}/macosx/License.html ${resources}
	file copy -force -- ${workpath}/macosx/macosx.html ${resources}
	file copy -force -- ${workpath}/macosx/Welcome.html ${resources}
	file rename ${resources}/macosx.html ${resources}/ReadMe.html
	file delete -force -- ${resources}/Welcome.rtf
}

post-mpkg {
	set resources ${workpath}/${name}-${version}.mpkg/Contents/Resources/
	file copy -force -- ${workpath}/macosx/License.html ${resources}
	file copy -force -- ${workpath}/macosx/macosx.html ${resources}
	file copy -force -- ${workpath}/macosx/Welcome.html ${resources}
	file rename ${resources}/macosx.html ${resources}/ReadMe.html
	file delete -force -- ${resources}/Welcome.rtf
}

if {![variant_isset st]} {
	default_variants +mt
}

variant st conflicts mt description {Single-threaded} {
	configure.args-append --disable-mt
}

variant mt conflicts st description {Multi-threaded (default)} {
	configure.args-append --enable-mt
}

livecheck.check     regexm
livecheck.url       ${homepage}dl-stable.html
livecheck.regex     "Gzipped tar file holding the sources for version <b>(\\d+\\.\\d+\\.\\d+)"
