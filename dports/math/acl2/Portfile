# $Id: Portfile,v 1.7 2004/04/02 18:17:18 gwright Exp $

PortSystem 1.0
name		acl2
version		2.8
categories	math
maintainers	gwright@comcast.net
platforms	darwin
description	Applicative Common Lisp / A Computational Logic
long_description	\
		ACL2 (Applicative Common Lisp / A Computational		\
		Logic) is the successor to nqthm, the Boyer-Moore	\
		theorem prover.						\
									\
		ACL2 can be used to automatically or semi-automatically	\
		prove theorems and has been used extensively in real	\
		applications (e.g., proving the correctness of certain	\
		calculations in the floating point unit of the AMD K5	\
		microprocessor.						\
									\
		ACL2 is a very large, multipurpose system.		\
		You can use it as a programming language,		\
		a specification language, a modeling language,		\
		a formal mathematical logic, or a semi-automatic	\
		theorem prover. Because the meta-language is the same	\
		as the language (a subset of Common Lisp), it is very	\
		flexible.

#user_notes	Users who want to use ACL2 for serious work should	\
#		install the certify variant (sudo port install +certify), \
#		which will certify (i.e., prove all of the theorems)	\
#		in the included examples. This can take several hours.	\
#		(Just over eight and a half hours on an 800 MHz G4	\
#		TiBook.)						\
#									\
#		To exit ACL2, enter :q or at the prompt.		\
#		This will bring	up an ordinary OpenMCL prompt. Enter	\
#		(good-bye) or (ccl:quit) to exit OpenMCL.


distfiles	${name}${extract.suffix}:source		\
		workshops${extract.suffix}:extrabooks	\
		nonstd${extract.suffix}:extrabooks

homepage	http://www.cs.utexas.edu/users/moore/acl2/
master_sites	ftp://ftp.cs.utexas.edu/pub/moore/acl2/v2-8/:source \
		ftp://ftp.cs.utexas.edu/pub/moore/acl2/v2-8/acl2-sources/books/:extrabooks

checksums	acl2.tar.gz      md5 e111761f4bb2bc36549dbcb4284e61cb \
		workshops.tar.gz md5 6a150b6e9ee69735b65d7248858d7a54 \
		nonstd.tar.gz    md5 4fc4caf74c2da0877ed19e0efc53676a

depends_build	bin:openmcl:openmcl

post-extract	{ cd ${workpath}
		  file rename ${name}-sources ${name}-${version}
		  file rename workshops ${name}-${version}/books
		  file rename nonstd    ${name}-${version}/books
		}

use_configure	no

build.target	"large LISP=openmcl"

set heap_image	"saved_acl2.dppccl"

variant nonstd	{ build.target 	 "large-acl2r LISP=openmcl"
		  set heap_image "saved_acl2r.dppccl"
		}

variant certify	{ post-build	{ cd ${worksrcpath}
				  system "make certify-books"
				}
		}

variant regression	{ post-build	{ cd ${worksrcpath}
				  system "make regression"
				}
		}

destroot	{ file mkdir ${destroot}/${prefix}/share/${name}/${version}
		  cd ${workpath}/${name}-${version}
		  system "tar cf - . | ( cd ${destroot}/${prefix}/share/${name}/${version} && tar xf - )"
		}

post-destroot	{ set script [open "${destroot}${prefix}/bin/acl2" w 755]
		  puts $script "#!/bin/sh"
		  puts $script "openmcl --eval \"(acl2::acl2-default-restart)\" --image-name ${prefix}/share/${name}/${version}/${heap_image}"
		  puts $script ""
		  close $script
		  system "chmod 755 ${destroot}${prefix}/bin/acl2"
		}

