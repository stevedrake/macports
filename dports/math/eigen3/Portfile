# $Id$

PortSystem          1.0
PortGroup           cmake 1.0

name                eigen3
version             3.0-rc1
license             {{GPL-2+} {LGPL-3+}}
categories          math science
maintainers         eborisch \
                    openmaintainer
description         A C++ template library for linear algebra: vectors, matrices, and related algorithms.
long_description    ${description}
homepage            http://eigen.tuxfamily.org/
platforms           darwin

master_sites        http://bitbucket.org/eigen/eigen/get/
distname            ${version}
use_bzip2           yes

checksums           md5     7acfd7491a56bf6867873b806a33d137 \
                    sha1    b212964117c856c7b8a8118ae1f11550aa59d53c \
                    rmd160  a6617b380e8fc0f89c7209279098059d2c8a44ce

# Variants
variant llvm description { Enable llvm-g++ for 'port test' target.} requires configured {
  configure.compiler          llvm-gcc-4.2
}

variant doc description { Place local documentation into <prefix>/share/doc/eigen3/html } requires configured {
  depends_build-append port:doxygen port:texlive-latex
  build.target-append doc
}

variant configured description { Enable configure steps. (Enables 'port test' target.) } {
}

# Phase modifications
# Move source into eigen_src; configure & build (out-of-source) in ${worksrcpath}
post-extract {
  move ${workpath}/eigen-eigen-b6456624eae7 ${workpath}/eigen_src
  file mkdir ${worksrcpath}
}

# Out of source build
configure.args-append   ../eigen_src

# Install licenses and documentation (if +doc)
post-destroot {
  set docdir ${destroot}${prefix}/share/doc/${name}
  xinstall -d ${docdir}
  xinstall -m 644 -W ${workpath}/eigen_src COPYING.GPL COPYING.LGPL ${docdir}
 
  # Install documentation if requested
  if {[variant_isset doc]} {
    file copy ${worksrcpath}/doc/html ${docdir}
  }
}

# Are we doing a header-only or configured (for 'port test' or +doc) build?
if {![variant_isset configured]} {
  # We can skip everything and just copy the headers -- fast!
  # Just headers so noarch
  supported_archs     noarch
  use_configure no
  build {}
  destroot {
    set incldir ${destroot}${prefix}/include/${name}
    xinstall -d ${incldir}
    file copy ${workpath}/eigen_src/Eigen ${incldir}
    file copy ${workpath}/eigen_src/unsupported ${incldir}
  }

  # Fail with message if user tries to test
  test.run          yes
  test {
    puts "!!! TESTING IS UNSUPPORTED WITHOUT +configured VARIANT !!!"
  }
} else {
  # Enable test cases if we've actually configured
  test.run          yes
  test.target       check
  test.env-append   EIGEN_MAKE_ARGS=-j{build.jobs} \
                    EIGEN_CTEST_ARGS=-j{build.jobs}

  # Enable parallel builds
  build.env-append  EIGEN_MAKE_ARGS=-j{build.jobs}

  # Binaries don't actually get installed; just test on default architecture
  universal_variant no

  post-destroot {
  }
}

livecheck.type      regex
livecheck.url       ${homepage}index.php?title=ChangeLog
livecheck.regex     {Eigen (\d+(?:\.\d+)*)}
