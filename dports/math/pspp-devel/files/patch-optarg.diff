diff --git a/src/libpspp/argv-parser.c b/src/libpspp/argv-parser.c
index ecf1ab2..6ffcf4e 100644
--- a/src/libpspp/argv-parser.c
+++ b/src/libpspp/argv-parser.c
@@ -28,7 +28,7 @@
 struct argv_option_plus
   {
     struct argv_option base;
-    void (*cb) (int id, void *aux);
+    void (*cb) (int id, void *aux, const char *);
     void *aux;
   };
 
@@ -67,7 +67,7 @@ argv_parser_destroy (struct argv_parser *ap)
 void
 argv_parser_add_options (struct argv_parser *ap,
                          const struct argv_option *options, size_t n,
-                         void (*cb) (int id, void *aux), void *aux)
+                         void (*cb) (int id, void *aux, const char *), void *aux)
 {
   const struct argv_option *src;
   for (src = options; src < &options[n]; src++)
@@ -165,12 +165,12 @@ argv_parser_run (struct argv_parser *ap, int argc, char **argv)
       else if (c >= LONGOPT_VAL_BASE && c < LONGOPT_VAL_BASE + n_longopts)
         {
           struct argv_option_plus *aop = &ap->options[c - LONGOPT_VAL_BASE];
-          aop->cb (aop->base.id, aop->aux);
+          aop->cb (aop->base.id, aop->aux, optarg);
         }
       else if (c >= SCHAR_MIN && c <= UCHAR_MAX)
         {
           const struct argv_option_plus *aop = shortopt_ptrs[(unsigned char) c];
-          aop->cb (aop->base.id, aop->aux);
+          aop->cb (aop->base.id, aop->aux, optarg);
         }
       else
         NOT_REACHED ();
diff --git a/src/libpspp/argv-parser.h b/src/libpspp/argv-parser.h
index 6e6d83f..a9c5de0 100644
--- a/src/libpspp/argv-parser.h
+++ b/src/libpspp/argv-parser.h
@@ -53,7 +53,7 @@ void argv_parser_destroy (struct argv_parser *);
 
 void argv_parser_add_options (struct argv_parser *,
                               const struct argv_option *options, size_t n,
-                              void (*cb) (int id, void *aux), void *aux);
+                              void (*cb) (int id, void *aux, const char *), void *aux);
 bool argv_parser_run (struct argv_parser *, int argc, char **argv);
 
 #endif /* libpspp/argv-parser.h */
diff --git a/src/ui/terminal/terminal-opts.c b/src/ui/terminal/terminal-opts.c
index 775e36c..8d4468b 100644
--- a/src/ui/terminal/terminal-opts.c
+++ b/src/ui/terminal/terminal-opts.c
@@ -228,7 +228,7 @@ Non-option arguments are interpreted as syntax files to execute.\n"),
 }
 
 static void
-terminal_option_callback (int id, void *to_)
+terminal_option_callback (int id, void *to_, const char *argstr)
 {
   struct terminal_opts *to = to_;
 
@@ -239,17 +239,17 @@ terminal_option_callback (int id, void *to_)
       break;
 
     case OPT_ERROR_FILE:
-      if (!strcmp (optarg, "none") || msglog_create (optarg))
+      if (!strcmp (argstr, "none") || msglog_create (argstr))
         to->has_error_file = true;
       break;
 
     case OPT_OUTPUT:
       register_output_driver (to);
-      string_map_insert (&to->options, "output-file", optarg);
+      string_map_insert (&to->options, "output-file", argstr);
       break;
 
     case OPT_OUTPUT_OPTION:
-      parse_output_option (to, optarg);
+      parse_output_option (to, argstr);
       break;
 
     case OPT_NO_OUTPUT:
