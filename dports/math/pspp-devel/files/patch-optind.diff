diff --git a/src/libpspp/argv-parser.c b/src/libpspp/argv-parser.c
index 6ffcf4e..4a76780 100644
--- a/src/libpspp/argv-parser.c
+++ b/src/libpspp/argv-parser.c
@@ -36,14 +36,22 @@ struct argv_parser
   {
     struct argv_option_plus *options;
     size_t n_options, allocated_options;
+    int optidx;
   };
 
+int
+argv_parser_optind (const struct argv_parser *ap)
+{
+  return ap->optidx;
+}
+
 /* Creates and returns a new argv_parser that initially is not
    configured to parse any command-line options. */
 struct argv_parser *
 argv_parser_create (void)
 {
   struct argv_parser *ap = xzalloc (sizeof *ap);
+  ap->optidx = -1;
   return ap;
 }
 
@@ -176,6 +184,8 @@ argv_parser_run (struct argv_parser *ap, int argc, char **argv)
         NOT_REACHED ();
     }
 
+  ap->optidx = optind;
+
 exit:
   ds_destroy (&shortopts);
   free (longopts);
diff --git a/src/libpspp/argv-parser.h b/src/libpspp/argv-parser.h
index a9c5de0..3666c7c 100644
--- a/src/libpspp/argv-parser.h
+++ b/src/libpspp/argv-parser.h
@@ -56,4 +56,6 @@ void argv_parser_add_options (struct argv_parser *,
                               void (*cb) (int id, void *aux, const char *), void *aux);
 bool argv_parser_run (struct argv_parser *, int argc, char **argv);
 
+int argv_parser_optind (const struct argv_parser *);
+
 #endif /* libpspp/argv-parser.h */
diff --git a/src/libpspp/model-checker.c b/src/libpspp/model-checker.c
index 80198f8..fd32978 100644
--- a/src/libpspp/model-checker.c
+++ b/src/libpspp/model-checker.c
@@ -690,7 +690,7 @@ enum { N_MC_ARGV_OPTIONS = sizeof mc_argv_options / sizeof *mc_argv_options };
 /* Called by argv_parser_run to indicate that option ID has been
    parsed. */
 static void
-mc_parser_option_callback (int id, void *mc_options_)
+mc_parser_option_callback (int id, void *mc_options_, int optidx)
 {
   struct mc_options *options = mc_options_;
   switch (id)
diff --git a/src/ui/terminal/main.c b/src/ui/terminal/main.c
index 02be4f7..4c35f19 100644
--- a/src/ui/terminal/main.c
+++ b/src/ui/terminal/main.c
@@ -109,7 +109,7 @@ main (int argc, char **argv)
   source_init_register_argv_parser (parser, the_source_stream);
   if (!argv_parser_run (parser, argc, argv))
     exit (EXIT_FAILURE);
-  terminal_opts_done (terminal_opts, argc, argv);
+  terminal_opts_done (terminal_opts, argc, argv, argv_parser_optind (parser));
   argv_parser_destroy (parser);
 
   msg_ui_init (the_source_stream);
diff --git a/src/ui/terminal/terminal-opts.c b/src/ui/terminal/terminal-opts.c
index 8d4468b..237f405 100644
--- a/src/ui/terminal/terminal-opts.c
+++ b/src/ui/terminal/terminal-opts.c
@@ -312,7 +312,7 @@ add_syntax_file (struct terminal_opts *to, const char *file_name)
 }
 
 void
-terminal_opts_done (struct terminal_opts *to, int argc, char *argv[])
+terminal_opts_done (struct terminal_opts *to, int argc, char *argv[], int optidx)
 {
   if (to->process_statrc)
     {
@@ -326,11 +326,11 @@ terminal_opts_done (struct terminal_opts *to, int argc, char *argv[])
         }
     }
 
-  if (optind < argc)
+  if (optidx < argc)
     {
       int i;
 
-      for (i = optind; i < argc; i++)
+      for (i = optidx; i < argc; i++)
         add_syntax_file (to, argv[i]);
     }
   else
diff --git a/src/ui/terminal/terminal-opts.h b/src/ui/terminal/terminal-opts.h
index 1225112..c171dd0 100644
--- a/src/ui/terminal/terminal-opts.h
+++ b/src/ui/terminal/terminal-opts.h
@@ -24,6 +24,6 @@ struct terminal_opts;
 
 struct terminal_opts *terminal_opts_init (struct argv_parser *,
                                           struct source_stream *);
-void terminal_opts_done (struct terminal_opts *, int argc, char *argv[]);
+void terminal_opts_done (struct terminal_opts *, int argc, char *argv[], int optidx);
 
 #endif /* ui/terminal/terminal-opts.h */
