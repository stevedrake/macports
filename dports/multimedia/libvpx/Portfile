# -*- coding: utf-8; mode: tcl; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 4; truncate-lines: t -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0

name            libvpx
version         0.9.1
revision        1
categories      multimedia
maintainers     nomaintainer
platforms       darwin
license         BSD

description     VP8 video codec
long_description \
    VP8 is a highly efficient video compression technology.

homepage        http://webmproject.org
master_sites    googlecode:webm
use_bzip2       yes

checksums       sha1    a18acb7a1a2fd62268e63aab860b43ff04669b9e \
                rmd160  365b16848979727689da5e4416978c0a275e1af3

depends_build   port:yasm

# gcc-4.2: -E, -S, -save-temps and -M options are not allowed with multiple -arch flags
universal_variant no

# patches for: 10.6; correct "universal" arch default selection; 'sed' scripts.
patchfiles      patch-build-make-configure.sh.diff \
                patch-configure.diff

# As of 0.9.1: doesn't handle shared libraries or debug properly on darwin;
# doesn't install docs or examples correctly, so disable them.
configure.args  --enable-vp8 \
                --enable-psnr \
                --enable-postproc \
                --enable-multithread \
                --enable-runtime-cpu-detect \
                --disable-install-docs \
                --disable-debug-libs \
                --disable-examples

configure.env   LD="${configure.cc}"

# add in when docs are installed correctly
#variant docs description {Build documentation} {
#    depends_build-append port:php5 port:doxygen
#    configure.args-delete --disable-install-docs
#    configure.args-append --enable-install-docs
#}

build.target
build.args      verbose=1

# set configure parameters depending on if universal or not
if {![variant_isset universal] || ![variant_exists universal]} {
    # specify only the single target, otherwise 'configure' will try
    # for a 'universal' install.
    set tgt_isa "${build_arch}"
    if {${build_arch} == "i386"} {
        set tgt_isa "x86"
    } elseif {${build_arch} == "ppc"} {
        set tgt_isa "ppc32"
    }
    configure.args-append --target=${tgt_isa}-${os.platform}${os.major}-gcc
} else {
    # clear universal flags; configure will determine them.
    configure.universal_cppflags
    configure.universal_cflags
    configure.universal_cxxflags
    configure.universal_ldflags
    # tell configure the target; probably not necessary
    configure.args-append --target=universal-${os.platform}${os.major}-gcc
}
