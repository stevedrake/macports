Index: mp3lib/dct64_sse.c
===================================================================
--- mp3lib/dct64_sse.c	(revision 32612)
+++ mp3lib/dct64_sse.c	(revision 33714)
@@ -112,7 +112,6 @@
     }
 
     {
-        real *costab = costab_mmx + 24;
         int i;
 
         __asm__(
@@ -121,7 +120,7 @@
             "movaps    %1, %%xmm5\n\t"
             "movaps    %%xmm5, %%xmm6\n\t"
             :
-            :"m"(*costab), "m"(*nnnn)
+            :"m"(costab_mmx[24]), "m"(*nnnn)
            );
 
         for (i = 0; i < 0x20; i += 8)
@@ -281,27 +280,27 @@
 
 #else
     /*
-       To do saturation efficiently in x86 we can use fist(t)(p),
-       pf2iw, or packssdw. We use fist(p) here.
+       To do saturation efficiently in x86 we can use fist(p)s,
+       pf2iw, or packssdw. We use fist(p)s here.
     */
     __asm__(
         "flds       %0\n\t"
         "flds     (%2)\n\t"
         "fadds   4(%2)\n\t"
-        "fistp 512(%3)\n\t"
+        "fistps 512(%3)\n\t"
 
         "flds     (%2)\n\t"
         "fsubs   4(%2)\n\t"
         "fmul  %%st(1)\n\t"
-        "fistp    (%3)\n\t"
+        "fistps    (%3)\n\t"
 
         "flds   12(%2)\n\t"
         "fsubs   8(%2)\n\t"
         "fmul  %%st(1)\n\t"
-        "fist  256(%4)\n\t"
+        "fists  256(%4)\n\t"
         "fadds  12(%2)\n\t"
         "fadds   8(%2)\n\t"
-        "fistp 256(%3)\n\t"
+        "fistps 256(%3)\n\t"
 
         "flds   16(%2)\n\t"
         "fsubs  20(%2)\n\t"
@@ -310,108 +309,108 @@
         "flds   28(%2)\n\t"
         "fsubs  24(%2)\n\t"
         "fmul  %%st(2)\n\t"
-        "fist  384(%4)\n\t"
+        "fists  384(%4)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  24(%2)\n\t"
         "fadds  28(%2)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  16(%2)\n\t"
         "fadds  20(%2)\n\t"
-        "fistp 384(%3)\n\t"
+        "fistps 384(%3)\n\t"
         "fadd  %%st(2)\n\t"
-        "fistp 128(%3)\n\t"
+        "fistps 128(%3)\n\t"
         "faddp %%st(1)\n\t"
-        "fistp 128(%4)\n\t"
+        "fistps 128(%4)\n\t"
 
         "flds   32(%1)\n\t"
         "fadds  48(%1)\n\t"
-        "fistp 448(%3)\n\t"
+        "fistps 448(%3)\n\t"
 
         "flds   48(%1)\n\t"
         "fadds  40(%1)\n\t"
-        "fistp 320(%3)\n\t"
+        "fistps 320(%3)\n\t"
 
         "flds   40(%1)\n\t"
         "fadds  56(%1)\n\t"
-        "fistp 192(%3)\n\t"
+        "fistps 192(%3)\n\t"
 
         "flds   56(%1)\n\t"
         "fadds  36(%1)\n\t"
-        "fistp  64(%3)\n\t"
+        "fistps  64(%3)\n\t"
 
         "flds   36(%1)\n\t"
         "fadds  52(%1)\n\t"
-        "fistp  64(%4)\n\t"
+        "fistps  64(%4)\n\t"
 
         "flds   52(%1)\n\t"
         "fadds  44(%1)\n\t"
-        "fistp 192(%4)\n\t"
+        "fistps 192(%4)\n\t"
 
         "flds   60(%1)\n\t"
-        "fist  448(%4)\n\t"
+        "fists  448(%4)\n\t"
         "fadds  44(%1)\n\t"
-        "fistp 320(%4)\n\t"
+        "fistps 320(%4)\n\t"
 
         "flds   96(%1)\n\t"
         "fadds 112(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  64(%1)\n\t"
-        "fistp 480(%3)\n\t"
+        "fistps 480(%3)\n\t"
         "fadds  80(%1)\n\t"
-        "fistp 416(%3)\n\t"
+        "fistps 416(%3)\n\t"
 
         "flds  112(%1)\n\t"
         "fadds 104(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  80(%1)\n\t"
-        "fistp 352(%3)\n\t"
+        "fistps 352(%3)\n\t"
         "fadds  72(%1)\n\t"
-        "fistp 288(%3)\n\t"
+        "fistps 288(%3)\n\t"
 
         "flds  104(%1)\n\t"
         "fadds 120(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  72(%1)\n\t"
-        "fistp 224(%3)\n\t"
+        "fistps 224(%3)\n\t"
         "fadds  88(%1)\n\t"
-        "fistp 160(%3)\n\t"
+        "fistps 160(%3)\n\t"
 
         "flds  120(%1)\n\t"
         "fadds 100(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  88(%1)\n\t"
-        "fistp  96(%3)\n\t"
+        "fistps  96(%3)\n\t"
         "fadds  68(%1)\n\t"
-        "fistp  32(%3)\n\t"
+        "fistps  32(%3)\n\t"
 
         "flds  100(%1)\n\t"
         "fadds 116(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  68(%1)\n\t"
-        "fistp  32(%4)\n\t"
+        "fistps  32(%4)\n\t"
         "fadds  84(%1)\n\t"
-        "fistp  96(%4)\n\t"
+        "fistps  96(%4)\n\t"
 
         "flds  116(%1)\n\t"
         "fadds 108(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  84(%1)\n\t"
-        "fistp 160(%4)\n\t"
+        "fistps 160(%4)\n\t"
         "fadds  76(%1)\n\t"
-        "fistp 224(%4)\n\t"
+        "fistps 224(%4)\n\t"
 
         "flds  108(%1)\n\t"
         "fadds 124(%1)\n\t"
         "fld   %%st(0)\n\t"
         "fadds  76(%1)\n\t"
-        "fistp 288(%4)\n\t"
+        "fistps 288(%4)\n\t"
         "fadds  92(%1)\n\t"
-        "fistp 352(%4)\n\t"
+        "fistps 352(%4)\n\t"
 
         "flds  124(%1)\n\t"
-        "fist  480(%4)\n\t"
+        "fists  480(%4)\n\t"
         "fadds  92(%1)\n\t"
-        "fistp 416(%4)\n\t"
+        "fistps 416(%4)\n\t"
         ".byte 0xdf, 0xc0\n\t" // ffreep %%st(0)
         :
         :"m"(costab_mmx[30]), "r"(b1), "r"(b2), "r"(out0), "r"(out1)
