--- src/BitfieldManFactory.cc	2006-12-24 15:25:21.000000000 +0900
+++ src/BitfieldManFactory.cc	2007-02-12 21:05:55.000000000 +0900
@@ -35,6 +35,6 @@
 #include "BitfieldManFactory.h"
 #include "SimpleRandomizer.h"
 
-RandomizerHandle BitfieldManFactory::defaultRandomizer = SimpleRandomizer::getInstance();
+BitfieldManFactoryHandle BitfieldManFactory::factory = 0;
 
-BitfieldManFactory::BitfieldManFactory():randomizer(defaultRandomizer) {}
+BitfieldManFactory::BitfieldManFactory():randomizer(0) {}
--- src/BitfieldManFactory.h	2007-02-06 23:49:22.000000000 +0900
+++ src/BitfieldManFactory.h	2007-02-12 21:05:55.000000000 +0900
@@ -45,15 +45,18 @@
 
 class BitfieldManFactory {
 private:
-  static RandomizerHandle defaultRandomizer;
+  static BitfieldManFactoryHandle factory;
+
   RandomizerHandle randomizer;
 
   BitfieldManFactory();
 public:
   ~BitfieldManFactory() {}
 
-  static BitfieldManFactoryHandle getNewFactory() {
-    BitfieldManFactoryHandle factory = new BitfieldManFactory();
+  static BitfieldManFactoryHandle getFactoryInstance() {
+    if(factory.isNull()) {
+      factory = new BitfieldManFactory();
+    }
     return factory;
   }
 
@@ -64,11 +67,12 @@
   }
 
   static void setDefaultRandomizer(const RandomizerHandle& randomizer) {
-    defaultRandomizer = randomizer;
+    BitfieldManFactoryHandle factory = getFactoryInstance();
+    factory->setRandomizer(randomizer);
   }
 
   static RandomizerHandle getDefaultRandomizer() {
-    return defaultRandomizer;
+    return getFactoryInstance()->getRandomizer();
   }
 
   void setRandomizer(const RandomizerHandle& randomizer) {
--- src/DefaultPieceStorage.cc	2007-01-28 23:18:35.000000000 +0900
+++ src/DefaultPieceStorage.cc	2007-02-12 21:05:55.000000000 +0900
@@ -52,7 +52,7 @@
   option(option)
 {
   bitfieldMan =
-    BitfieldManFactory::getNewFactory()->
+    BitfieldManFactory::getFactoryInstance()->
     createBitfieldMan(btContext->getPieceLength(),
 		      btContext->getTotalLength());
   logger = LogFactory::getInstance();
--- src/Peer.cc	2006-12-24 15:25:21.000000000 +0900
+++ src/Peer.cc	2007-02-12 21:05:55.000000000 +0900
@@ -46,7 +46,7 @@
   active(false)
 {
   resetStatus();
-  this->bitfield = BitfieldManFactory::getNewFactory()->
+  this->bitfield = BitfieldManFactory::getFactoryInstance()->
     createBitfieldMan(pieceLength, totalLength);
   string idSeed = ipaddr+":"+Util::itos(port);
   id = Util::simpleMessageDigest(idSeed);
--- src/Piece.cc	2006-12-24 15:25:21.000000000 +0900
+++ src/Piece.cc	2007-02-12 21:05:55.000000000 +0900
@@ -40,7 +40,7 @@
 
 Piece::Piece(int index, int length):index(index), length(length) {
   bitfield =
-    BitfieldManFactory::getNewFactory()->createBitfieldMan(BLOCK_LENGTH, length);
+    BitfieldManFactory::getFactoryInstance()->createBitfieldMan(BLOCK_LENGTH, length);
 }
 
 Piece::Piece(const Piece& piece) {
--- src/SegmentMan.cc	2007-02-06 23:49:22.000000000 +0900
+++ src/SegmentMan.cc	2007-02-12 21:05:55.000000000 +0900
@@ -238,7 +238,7 @@
 
 void SegmentMan::initBitfield(int segmentLength, long long int totalLength) {
   delete bitfield;
-  this->bitfield = BitfieldManFactory::getNewFactory()->createBitfieldMan(segmentLength, totalLength);
+  this->bitfield = BitfieldManFactory::getFactoryInstance()->createBitfieldMan(segmentLength, totalLength);
 }
 
 Segment SegmentMan::checkoutSegment(int cuid, int index) {