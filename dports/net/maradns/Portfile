# $Id$

PortSystem 1.0

name			maradns
version			1.2.12.06

set branch		[strsed ${version} {s/\.[0-9]*\.[0-9]*$//}]

categories		net
platforms		darwin
maintainers		boeyms@macports.org openmaintainer@macports.org
description		DNS server supporting authoritative, recursive and caching DNS
long_description	MaraDNS is a fully functional DNS server supporting \
			authoritative DNS, recursive DNS, and caching DNS.

homepage		http://www.maradns.org/
master_sites		http://www.maradns.org/download/${branch}/${version} \
			sourceforge
			
checksums		md5	9219647108d283725011e37e29771b90 \
			sha1	bb94f2bcb612fe6c8f47ef6721051a57840a386e \
			rmd160	8c88fd87bff54c0121348e19a5255869622228a6

use_bzip2		yes

patchfiles		patch-configure patch-install.darwin

post-extract {
	cd ${worksrcpath}
# Delete unneeded stress-testing code (not built by default).  It may be worth
# adding this as a variant in a future revision.
	file delete -force sqa
# Delete Portuguese documentation sources (documentation not built by default;
# will need to add a section to build these docs if localisation desired)
	file delete -force doc/pt_br
# Delete unneeded English documentation sources (documentation already built)
# and support files that will otherwise be installed in the doc directories
	file delete -force doc/en/source
	file delete doc/en/man/read.manpage
	file delete doc/en/pdf/tmac.an.patch
	eval file delete [glob doc/en/*/{Makefile,*.embed,make.*}]
# Fix installation script (called by "make install") so that configuration
# files and directories are placed in destroot
	reinplace "s|\$RPM_BUILD_ROOT|${destroot}${prefix}|g" build/install.sh
# Fix hardcoding of default paths to chroot, log and zone file dirs, and
# configuration file, in source and docs. copy.devs.c is only used if maradns
# is built for Solaris, and maraconf.sh is neither installed by default nor yet
# by this Portfile, but hey.
	set marabindocpages	"duende maradns mararc zoneserver"
	set marasetupdocpages	"authoritative compile convert dangling \
		dnsmaster dnsslave dnstcp quick_start recursive update"
	set marareinplace	"s|/etc/mara|${prefix}/etc/mara|g"
	foreach docpage ${marabindocpages} {
		eval reinplace "${marareinplace}" \
		doc/en/text/man.${docpage}.txt \
		doc/en/tutorial/man.${docpage}.html
	}
	foreach docpage ${marasetupdocpages} {
		eval reinplace "${marareinplace}" \
		doc/en/text/${docpage}.txt \
		doc/en/tutorial/${docpage}.html
	}
	eval reinplace "${marareinplace}" \
		MaraDns.h \
		build/copy.devs.c \
		parse/ParseMaraRc.c \
		tools/maraconf.sh \
		doc/en/QuickStart \
		doc/en/examples/example_authoritative_mararc.txt \
		doc/en/examples/example_full_mararc \
		doc/en/examples/example_mararc \
		doc/en/examples/example_recursive_mararc.txt \
		doc/en/man/duende.8 \
		doc/en/man/maradns.8 \
		doc/en/man/zoneserver.8 \
		doc/en/man/mararc.5
}


configure.pre_args

build.target

destroot.env	PREFIX=${destroot}${prefix}
destroot.destdir

# Keep chroot directory for duende (monitors and logs maradns instances)
#
# (This places a .turd file in the logger directory, but the duende man page
# states that it requires a _blank_ logger directory to run (emphasis added).
# Testing has not revealed any interference from the .turd file so far, but
# the testing done may not have been exhaustive (I don't know enough about
# chroot jails).)
destroot.keepdirs	${destroot}${prefix}/etc/maradns/logger

post-destroot {
# Delete remaining unneeded build files; this also deletes the man page for
# the mqhash tool, which is not installed by default, but it appears to be only
# for development testing.
	file delete -force \
		${destroot}${prefix}/share/doc/maradns-${version}/Makefile \
		${destroot}${prefix}/share/doc/maradns-${version}/man
	file rename ${destroot}${prefix}/etc/mararc \
		${destroot}${prefix}/etc/example-mararc
}

startupitem.create	yes
startupitem.init	\
	"PID=${prefix}/var/run/${name}.pid\nBIN=${prefix}/sbin/maradns"
startupitem.start	"\[ -x \${BIN} \] && \${BIN} &; echo \$! > \${PID}"
startupitem.stop	"\[ -r \${PID} \] && /bin/kill \$(cat \${PID})"

post-install {
	ui_msg "***************************************************************"
	ui_msg "* To make MaraDNS functional, you will need to create"
	ui_msg "* ${prefix}/etc/mararc.  Please read the mararc man page"
	ui_msg "* for details.  Example mararc files are in"
	ui_msg "* ${prefix}/share/doc/maradns-${version}/examples ."
	ui_msg "***************************************************************"
}

platform darwin 8 {
	build.args	CC="/usr/bin/gcc-4.0 -DDARWIN"
}

variant authonly {
	configure.args-append	--authonly
	startupitem.init	\
		"PID=${prefix}/var/run/${name}.pid\nBIN=${prefix}/sbin/maradns.authonly"
}

livecheck.check regex
livecheck.url   http://www.maradns.org/download/${branch}/${version}/
livecheck.regex [suffix ${name}-(\\d+\\.\\d+\\.\\d+\\.\\d+)]
