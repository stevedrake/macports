# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0

name                    ncid
version                 0.82.1
revision                1
categories              net
maintainers             davidlaporte.org:david ryandesign
license                 GPL-2+
homepage                http://ncid.sourceforge.net/
master_sites            sourceforge
platforms               darwin
distname                ${name}-${version}-src
worksrcdir              ${name}
use_configure           no
build.target            local
build.post_args         settag="Macintosh OS X" STRIP=
destroot.target         mac-install
destroot.destdir        prefix=${destroot}${prefix}
universal_variant       no
use_parallel_build      yes

description \
    Network Caller ID system

long_description \
    NCID is Caller ID (CID) distributed over a network to a variety of \
    devices and computers. It consists of a server that obtains the \
    Caller ID information and various clients that receive the \
    information from the server and act on it in various ways. \
    The NCID package consists of a server called ncidd, a universal \
    client called ncid and a CID client called ncidsip. \
    The server obtains the Caller ID information from a modem, a CID \
    device or one or more CID clients, and then sends the information \
    to each connected client.

checksums               sha1    7c788a43c2b67625c6148fe9a52ac5e8daa53750 \
                        rmd160  a9f42e23af889e669abf70d46b6346ddbe1b0e89

depends_lib \
    port:tcl \
    port:tk

patchfiles \
    patch-Makefile.diff \
    patch-manpages.diff

post-patch {
    reinplace "s|@PREFIX@|${prefix}|g" \
        ${worksrcpath}/Makefile \
        ${worksrcpath}/man/ncid.1 \
        ${worksrcpath}/man/ncidd.8 \
        ${worksrcpath}/man/ncidmodules.1 \
        ${worksrcpath}/man/ncidrotate.1 \
        ${worksrcpath}/man/ncidsip.8 \
        ${worksrcpath}/man/ncidtools.1 \
        ${worksrcpath}/man/sip2ncid.8 \
        ${worksrcpath}/man/yac2ncid.1
}

variant universal {}
if {[variant_isset universal]} {
    set archflags ${configure.universal_cflags}
} else {
    set archflags ${configure.cc_archflags}
}

build.env               CC="${configure.cc} ${archflags}"
