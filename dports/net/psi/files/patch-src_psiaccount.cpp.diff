Index: src/psiaccount.cpp
===================================================================
--- src/psiaccount.cpp	(Revision 764)
+++ src/psiaccount.cpp	(Arbeitskopie)
@@ -3297,6 +3297,14 @@
 		}
 	}
 
+#ifdef PSI_PLUGINS
+        if (! nm.body().isEmpty()) {
+                nm.setBody(PluginManager::instance()->outgoingMessage(this, nm.to(), nm.body()));
+        }
+#endif
+
+
+
 	d->client->sendMessage(nm);
 
 	// only toggle if not an invite or body is not empty
@@ -3566,10 +3574,34 @@
 		}
 	}
 
+	
 	if(e->type() == PsiEvent::Message) {
+	
 		MessageEvent *me = (MessageEvent *)e;
-		const Message &m = me->message();
+		Message msg = me->message();
+#ifdef PSI_PLUGINS
+		UserListItem *ulItem=NULL;
+		if ( !ul.isEmpty() ) {
+			ulItem=ul.first();
+		}
+		
+		if (msg.containsHTML() && ! msg.html().text().isEmpty() ) {
+			HTMLElement htmlPart = PluginManager::instance()->incomingMessage(this,
+				msg.from(),
+				msg.html());
+			msg.setHTML(htmlPart, msg.lang());
+			msg.setBody(htmlPart.text());
+		}
+        	else if (! msg.body().isEmpty()) {
+                	msg.setBody( PluginManager::instance()->incomingMessage(this, 
+							      msg.from(),
+							      msg.body()));
+        	}
+		me->setMessage(msg);
+#endif
+		const Message &m = msg;
 
+
 		// Pass message events to chat window
 		if ((m.containsEvents() || m.chatState() != StateNone) && m.body().isEmpty()) {
 			if (option.messageEvents) {
@@ -3632,13 +3664,7 @@
 			// FIXME: handle message errors
 			//msg.text = QString(tr("<big>[Error Message]</big><br>%1").arg(plain2rich(msg.text)));
 		}
-#ifdef PSI_PLUGINS
-		UserListItem *ulItem=NULL;
-		if ( !ul.isEmpty() )
-			ulItem=ul.first();
-		PluginManager::instance()->message(this,e->from(),ulItem,((MessageEvent*)e)->message().body());
-#endif
-	}
+}
 	else if(e->type() == PsiEvent::HttpAuth) {
 		playSound(option.onevent[eSystem]);
 	}
