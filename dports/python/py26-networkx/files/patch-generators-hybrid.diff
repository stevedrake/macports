--- networkx/generators/hybrid.py.orig	2009-08-14 08:03:25.000000000 -0400
+++ networkx/generators/hybrid.py	2009-08-14 08:04:22.000000000 -0400
@@ -13,8 +13,11 @@
 _all__ = ['kl_connected_subgraph', 'is_kl_connected']
 
 import copy
-import sets
 from networkx import shortest_path
+try:
+    set
+except NameError:
+    from sets import Set as set
 
 def kl_connected_subgraph(G,k,l,low_memory=False,same_as_graph=False):
     """ Returns the maximum locally (k,l) connected subgraph of G.
@@ -38,7 +41,7 @@
             (u,v)=edge
             ### Get copy of graph needed for this search
             if low_memory:
-                verts=sets.Set([u,v])
+                verts=set([u,v])
                 for i in range(k):
                     [verts.update(G.neighbors(w)) for w in verts.copy()]
                 G2=G.subgraph(list(verts))
