# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 61984 2009-12-27 02:48:05Z ryandesign@macports.org $

PortSystem          1.0
PortGroup python26  1.0

name                py26-nio
version             1.3.0b1
platforms           darwin
maintainers         takeshi
license             PyNIO
categories          python science
description         I/O library for scientific data formats 
homepage            http://www.pyngl.ucar.edu/Nio.shtml
master_sites        http://www.pyngl.ucar.edu/Download/
distname            PyNIO-${version}
checksums           md5     c881b552cf914549f46d65a61f2d8cb0 \
                    sha1    288b70d83828e1cb99d3d7c61bd32b5c406c8b1a \
                    rmd160  b33d00041783ba259ae95f772c7fde0cf37d7303

long_description \
    PyNIO is a Python package that allows read and/or write access to \
    a variety of data formats using an interface modeled on netCDF. \
    PyNIO is composed of a C library called libnio along with a Python module \
    based on and with an interface similar to the Scientific.IO.NetCDF module \
    written by Konrad Hinsen.

fetch {
    if {![file exists ${distpath}/${distfiles}]} {
        xinstall -d ${distpath}
        ui_error "Download ${distfiles} manually and place it in ${distpath}.\n \
            See instructions on ${master_sites}"
    }
}

patch {
    reinplace "s|__init__(obj)|__init__()|" ${worksrcpath}/Nio.py
}

depends_build       port:gcc43
depends_lib-append  port:ncarg \
                    port:py26-numpy

configure.compiler  macports-gcc-4.3
build.env-append    HAS_GRIB2=1  GRIB2_PREFIX=${prefix} \
                    HAS_HDFEOS=1 HDFEOS_PREFIX=${prefix} \
                    HAS_NETCDF4=1 NETCDF4_PREFIX=${prefix} \
                    CC=${configure.cc} \
                    NCARG_ROOT=${prefix}
destroot.env        NCARG_ROOT=${prefix}

if {![variant_isset g95] && ![variant_isset universal]} {
    default_variants +gcc43
}

variant gcc43 conflicts g95 description {link to libraries build with gfortran} {
    build.env-append    F2CLIBS=gfortran \
                        F2CLIBS_PREFIX=${prefix}/lib/gcc43
}

variant g95 conflicts gcc43 description {link to libraries build with g95} {
    build.env-append    F2CLIBS=f95 \
                        F2CLIBS_PREFIX=${prefix}/lib
}

livecheck.type      regex
livecheck.url       ${master_sites}
livecheck.regex     {The current version of PyNGL and PyNIO is ([0-9]\.[0-9]\.[0-9][a-z]+[0-9]+)}
