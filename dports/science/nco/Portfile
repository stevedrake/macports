# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem                  1.0

name                        nco
version                     4.0.0
revision                    2
platforms                   darwin
maintainers                 takeshi
categories                  science
description                 The netCDF Operators
master_sites                http://${name}.sourceforge.net/src/
checksums                   md5     e849b66166b7df2ff24eccd6c8e02f9f \
                            sha1    3e51a61e93f75666d02a81702c9fa74e896435bb \
                            rmd160  de7eddf392bdb5ed82ab2f3009237064f6e00a30
homepage                    http://nco.sourceforge.net/
long_description \
    Each NCO operator (e.g., ncks) takes netCDF or HDF input file(s), \
    performs an operation (e.g., averaging, hyperslabbing, or renaming), \
    and outputs a processed netCDF file. Although most users of netCDF \
    and HDF data are involved in scientific research, these data formats, \
    and thus NCO, are generic and are equally useful in fields like finance. \
    This version is OPeNDAP/DODS enabled, so it can be given \
    URLs to read remote datasets as if they were local netCDF files.

depends_lib                 port:curl \
                            port:gettext \
                            port:libdap \
                            port:libiconv \
                            port:libxml2 \
                            port:netcdf-devel \
                            port:openssl \
                            port:udunits \
                            port:zlib \
                            port:antlr \
                            port:gsl \
                            port:hdf5-18 \
                            port:szip
depends_build               port:bison \
                            port:m4
depends_run                 port:wget

configure.env               HAVE_ANTLR=yes ANTLR_ROOT=${prefix} \
                            NETCDF4_ROOT=${prefix}/lib/netcdf-devel \
                            PATH_TO_NCGEN=${prefix}/lib/netcdf-devel/bin/ncgen
configure.cppflags          -I/usr/include/malloc
configure.args              --disable-dependency-tracking \
                            --mandir=${prefix}/share/man  \
                            --enable-udunits --disable-udunits2 \
                            --enable-dap-netcdf           \
                            --disable-dap-opendap         \
                            --enable-netcdf4

post-configure {
    foreach d {nco nco++ nco_c++} {
        reinplace "s|= -I${prefix}/include|= |" ${worksrcpath}/src/${d}/Makefile
    }
    reinplace "s|nco \${GSL_INC_ARG}|nco|" ${worksrcpath}/src/nco++/Makefile
}

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    foreach f {ANNOUNCE ChangeLog LICENSE NEWS README TODO VERSION *.txt *.pdf} {
        eval xinstall -m 644 [glob ${worksrcpath}/doc/${f}] \
            ${destroot}${prefix}/share/doc/${name}
    }
}

variant mpich2 description {enable MPI with mpich2} {
    depends_lib-append      port:mpich2
    configure.args-append   --enable-mpi
}

variant openmpi description {enable MPI with openmpi} {
    depends_lib-append      port:openmpi
    configure.args-append   --enable-mpi
}

variant udunits2 description {compile with udunits2} {
    depends_lib-delete      port:udunits
    depends_lib-append      port:udunits2
    configure.args-delete   --enable-udunits --disable-udunits2
    configure.args-append   --disable-udunits --enable-udunits2
}

#variant netcdf4 description {enable netcdf4} {
#   depends_lib-append       port:hdf5-18 \
#                            port:szip
#   configure.env-append     NETCDF4_ROOT=${prefix}
#   configure.cppflags-append    -DHAVE_NETCDF4_H
#   configure.args-delete    --disable-dap-netcdf           \
#                            --enable-dap-opendap         \
#                            --disable-netcdf4
#   configure.args-append    --enable-dap-netcdf           \
#                            --disable-dap-opendap         \
#                            --enable-netcdf4
#}

livecheck.type  regex
livecheck.url   ${homepage}
livecheck.regex  {Current NCO version is ([0-9]+\.[0-9]+\.[0-9]+)}
