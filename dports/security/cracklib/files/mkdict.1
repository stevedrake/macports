.TH MKDICT 1
.SH NAME
mkdict, packer, unpacker \- cracklib dictionary utilities
.SH SYNOPSIS
.B mkdict
.IR file ...

.B packer
.IR cracklib_dictpath

.B unpacker
.IR cracklib_dictpath
.SH DESCRIPTION
.B mkdict
takes a list of text files each containing a list of words, one per line, It
lowercases all words, removes control characters, and sorts the lists.  It
outputs the cleaned up list to standard output.  The text files may be
optionally compressed with
.BR gzip (1).

If you supply massive amounts of text to
.B mkdict
you must have enough free space available for use by the
.BR sort (1)
command.  If you do not have 20Mb free in /var/tmp (or whatever
temporary area your
.BR sort (1)
command uses), have a look at the
.B @PREFIX@/bin/mkdict
program which is a
.BR sh (1)
program.  You can usually tweak the
.BR sort (1)
command to use any large area of disk you desire, by use of the
.B \-T
option.
.B mkdict
has a hook for this.

.B packer
reads from standard input a list of sorted and cleaned words and
creates a database in the directory and prefix given by the command
line argument
.B cracklib_dictpath.
Three files are created with the suffixes of .hwm, .pwd, and .pwi.
These three files are in the format that the
.BR FascistCheck (3)
subroutine and
.B unpacker,
.BR testlib (1),
.BR testnum (1),
and
.BR teststr (1)
utilities understand.  The number of words read and written are printed on
.BR stdout (3).

.B unpacker
reads from the database in the directory and prefix given by the command
line argument
.B cracklib_dictpath
and outputs on standard output the list of words that make up the
database.

The database is in a binary format generated by the utilities
.BR mkdict (1)
and
.BR packer (1).
The database is located in the directory
.B @PREFIX@/lib/cracklib.

.SH FILES
.TP
.I @PREFIX@/lib/cracklib/pw_dict.[hwm|pwd|pwi]
cracklib dictionary database files used by utilities.
.TP
.I @PREFIX@/include/packer.h
cracklib header file defining the subroutine
.BR FascistCheck (3)
and necessary constants.
.TP
.I @PREFIX@/bin/mkdict
cracklib shell script to create initial list of words for dictionary
database.
.SH "SEE ALSO"
.BR teststr (1),
.BR cracklib (3)
.SH AUTHOR
.B CrackLib
is written by Alec Muffett <alecm@crypto.dircon.co.uk>.
