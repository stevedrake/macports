# $Id$

PortSystem 1.0

name                bash
set bash_version    4.1
set bash_patchlevel 7
version             ${bash_version}.${bash_patchlevel}
distname            ${name}-${bash_version}
categories          shells
maintainers         raimue
description         Bash (bourne-again shell) is a UNIX command interpreter
long_description    \
    Bash is an sh-compatible shell that incorporates useful     \
    features from the Korn shell (ksh) and C shell (csh). It is     \
    intended to conform to the IEEE POSIX P1003.2/ISO 9945.2 Shell  \
    and Tools standard. It offers functional improvements over sh   \
    for both programming and interactive use. In addition, most     \
    sh scripts can be run by Bash without modification.
homepage            http://www.gnu.org/software/bash/bash.html
platforms           darwin freebsd

master_sites        gnu
patch_sites         gnu:${name}/${distname}-patches
checksums           ${distname}${extract.suffix} \
                    md5     9800d8724815fd84994d9be65ab5e7b8 \
                    sha1    3bd1ec9c66f3689f6b3495bdaaf9077b2e5dc150 \
                    rmd160  554c7ecb4a63da431768caed1f958c06b8fa7207

eval {
  set low 1
  while {$low <= $bash_patchlevel} {
    set high [expr $low + 99];
    if {$high < $bash_patchlevel} {

      ###
      # disabled because there haven't been a hundred patches for bash yet
      # and there's no way to tell the format in advance

      # patchfiles-append [format "%s.%03d-%03d.gz" $bash_version $low $high]
      # incr low 100

    } else {
      patchfiles-append \
        [format "%s%s-%03d" $name [strsed ${bash_version} {g/\.//}] $low]
      incr low 1
    }
  }
}

depends_build           bin:grep:grep \
                        bin:bison:bison
depends_lib             port:gettext \
                        port:readline

configure.ldflags-append \
    "-Wl,-search_paths_first -lncurses"
configure.args          --mandir=${prefix}/share/man --with-installed-readline \
                        --infodir=${prefix}/share/info

if {[variant_isset universal]} {
    configure.args-append "CFLAGS_FOR_BUILD=\"${configure.universal_cflags}\""
}

include checksums_patch

livecheck.type          master_sites
livecheck.url           http://ftp.gnu.org/gnu/${name}/${name}-${bash_version}-patches/?C=M&O=D
livecheck.version       [format %03d ${bash_patchlevel}]
livecheck.regex         ${name}[strsed ${bash_version} {g/\.//}]-(\\d\\d\\d)
