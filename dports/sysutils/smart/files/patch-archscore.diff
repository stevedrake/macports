--- ./smart/backends/rpm/base.py.orig	2007-08-07 18:56:15.000000000 +0200
+++ ./smart/backends/rpm/base.py	2007-12-21 13:49:53.000000000 +0100
@@ -41,7 +41,10 @@ except ImportError:
         traceback.print_exc()
     raise Error, _("'rpm' python module is not available")
 
-archscore = rpm.archscore
+try:
+    archscore = rpm.archscore
+except AttributeError:
+    archscore = None
 
 __all__ = ["RPMPackage", "RPMProvides", "RPMNameProvides", "RPMPreRequires",
            "RPMRequires", "RPMUpgrades", "RPMConflicts", "RPMObsoletes",
@@ -190,7 +193,7 @@ class RPMPackage(Package):
                 otherver, otherarch = splitarch(other.version)
                 if selfver != otherver:
                     rc = vercmp(self.version, other.version)
-                if rc == 0:
+                if archscore and rc == 0:
                     rc = -cmp(archscore(selfarch), archscore(otherarch))
         return rc == -1
 
--- ./smart/backends/rpm/header.py.orig	2007-08-07 18:56:15.000000000 +0200
+++ ./smart/backends/rpm/header.py	2007-12-21 13:49:22.000000000 +0100
@@ -36,6 +36,11 @@ try:
 except ImportError:
     rpmhelper = None
 
+try:
+    archscore = rpm.archscore
+except AttributeError:
+    archscore = None
+
 CRPMTAG_FILENAME          = 1000000
 CRPMTAG_FILESIZE          = 1000001
 CRPMTAG_MD5               = 1000005
@@ -203,7 +208,7 @@ class RPMHeaderLoader(Loader):
             if h[1106]: # RPMTAG_SOURCEPACKAGE
                 continue
             arch = h[1022] # RPMTAG_ARCH
-            if rpm.archscore(arch) == 0:
+            if archscore and archscore(arch) == 0:
                 continue
 
             name = h[1000] # RPMTAG_NAME
--- ./smart/backends/rpm/metadata.py.orig	2007-08-07 18:56:15.000000000 +0200
+++ ./smart/backends/rpm/metadata.py	2007-12-21 13:49:22.000000000 +0100
@@ -36,6 +36,11 @@ import posixpath
 import locale
 import os
 
+try:
+    archscore = rpm.archscore
+except AttributeError:
+    archscore = None
+
 NS_COMMON    = "http://linux.duke.edu/metadata/common"
 NS_RPM       = "http://linux.duke.edu/metadata/rpm"
 NS_FILELISTS = "http://linux.duke.edu/metadata/filelists"
@@ -168,7 +173,7 @@ class RPMMetaDataLoader(Loader):
                         skip = None
 
                 elif tag == ARCH:
-                    if rpm.archscore(elem.text) == 0:
+                    if archscore and archscore(elem.text) == 0:
                         skip = PACKAGE
                     else:
                         arch = elem.text
--- ./smart/backends/rpm/redcarpet.py.orig	2007-08-07 18:56:15.000000000 +0200
+++ ./smart/backends/rpm/redcarpet.py	2007-12-21 13:49:22.000000000 +0100
@@ -30,6 +30,11 @@ from xml.parsers import expat
 
 BYTESPERPKG = 3000
 
+try:
+    archscore = rpm.archscore
+except AttributeError:
+    archscore = None
+
 class RPMRedCarpetPackageInfo(PackageInfo):
 
     def __init__(self, package, loader, info):
--- ./smart/backends/rpm/synthesis.py.orig	2007-08-07 18:56:15.000000000 +0200
+++ ./smart/backends/rpm/synthesis.py	2007-12-21 13:49:22.000000000 +0100
@@ -34,6 +34,10 @@ DEPENDSRE = re.compile("^([^[]*)(\[\*\])
 OPERATIONRE = re.compile("\[([<>=]*) *(.+)?\]")
 EPOCHRE = re.compile("[0-9]+:")
 
+try:
+    archscore = rpm.archscore
+except AttributeError:
+    archscore = None
 
 class URPMISynthesisPackageInfo(PackageInfo):
     def __init__(self, package, loader, info):
@@ -165,7 +169,7 @@ class URPMISynthesisLoader(Loader):
                     version, arch = version[:dot], version[dot+1:]
                 versionarch = "@".join((version, arch))
                 
-                if rpm.archscore(arch) == 0:
+                if archscore and archscore(arch) == 0:
                     continue
 
                 name = "-".join(rpmnameparts[0:-2])
--- ./smart/backends/rpm/yast2.py.orig	2007-08-07 18:56:15.000000000 +0200
+++ ./smart/backends/rpm/yast2.py	2007-12-21 13:49:22.000000000 +0100
@@ -147,6 +147,10 @@ class YaST2Loader(Loader):
         # Wrapping the text added an extra lf as the first char
         return summary, description[1:]
 
+try:
+    archscore = rpm.archscore
+except AttributeError:
+    archscore = None
 
     def parseEntry(self):
         Pkg = RPMPackage
@@ -181,7 +185,7 @@ class YaST2Loader(Loader):
                     raise Error("Error loading YaST2 channel info. Possibly " \
                                 "corrupted file.\n%s" % self._pkginfofile)
                 
-                if rpm.archscore(arch) <= 0:
+                if archscore and archscore(arch) <= 0:
                     return
                 name = nameparts[0]
                 self.curpkgname = name
