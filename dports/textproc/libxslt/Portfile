# $Id$

PortSystem      1.0

name            libxslt
version         1.1.23
categories      textproc
platforms       darwin
maintainers     nox openmaintainer
description     gnome xslt library and xsltproc

long_description \
    Libxslt is the XSLT C library developed for the Gnome project. \
    XSLT itself is a an XML language to define transformation for XML. \
    Libxslt is based on libxml2 the XML C library developed for the Gnome project. \
    It also implements most of the EXSLT set of processor-portable extensions \
    functions and some of Saxon's evaluate and expressions extensions.

homepage        http://xmlsoft.org/XSLT/
master_sites    ftp://xmlsoft.org/libxslt/ \
                ftp://fr.rpmfind.net/pub/libxml/ \
                ftp://gd.tuwien.ac.at/pub/libxml/ \
                gnome:sources/${name}/[strsed ${version} {/\.[0-9]*$//}]/

checksums       md5     0650b23650b70ad7ce2447ee16f445a3 \
                sha1    9b6bb279808893643d9116e514eafecb22eff76c \
                rmd160  fcecbaddd9b35e4d5e44670f6bd6d9d5fff327bc

depends_lib     port:libiconv \
                port:libxml2 \
                port:zlib

configure.args  --mandir=${prefix}/share/man \
                --enable-static=no \
                --with-libxml-prefix=${prefix} \
                --without-python \
                --without-crypto

use_parallel_build  yes

pre-configure {
    reinplace s|need_relink=yes|need_relink=no| ${worksrcpath}/ltmain.sh
}

post-configure {
    if {![variant_isset doc]} {
        reinplace -E "/^install-data-am:/s|install-data-local||" ${worksrcpath}/doc/Makefile
        reinplace -E "/^all:/s|web||" ${worksrcpath}/doc/Makefile
    }
}

test.run        yes
test.target     check

post-destroot {
    set docdir ${prefix}/share/doc/${name}-${version}
    if {![variant_isset doc]} {
        xinstall -d ${destroot}${docdir}
    }
    xinstall -m 0644 -W ${worksrcpath} AUTHORS COPYING ChangeLog Copyright FEATURES \
        NEWS README TODO ${destroot}${docdir}
}

variant doc description {Install extra documentation} {}

variant debug {
    configure.cflags-append -O0 -g
    configure.args-append --with-debugger
}

livecheck.check regex
livecheck.url   ${homepage}news.html
livecheck.regex {<h3>(\d+(?:\.\d+)*): .*</h3>}
