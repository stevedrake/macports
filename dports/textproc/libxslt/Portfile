# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0
PortGroup       muniversal 1.0

name            libxslt
version         1.1.25
categories      textproc
platforms       darwin
maintainers     nox openmaintainer
description     gnome xslt library and xsltproc

long_description \
    Libxslt is the XSLT C library developed for the Gnome project. \
    XSLT itself is a an XML language to define transformation for XML. \
    Libxslt is based on libxml2 the XML C library developed for the Gnome project. \
    It also implements most of the EXSLT set of processor-portable extensions \
    functions and some of Saxon's evaluate and expressions extensions.

homepage        http://xmlsoft.org/XSLT/
master_sites    ftp://xmlsoft.org/libxslt/ \
                ftp://fr.rpmfind.net/pub/libxml/ \
                ftp://gd.tuwien.ac.at/pub/libxml/
# gnome mirrors only have up to 1.1.22, ticket #17737
#                gnome:sources/${name}/[strsed ${version} {/\.[0-9]*$//}]/

checksums           md5     50c5ba1218262ac10669961b32db405a \
                    sha1    36465606a27da29b1f573712f1ae8c0d5a8770ce \
                    rmd160  7266104570d20387619a7d98c0331b5529597cc4

depends_lib     port:libiconv \
                port:libxml2 \
                port:zlib

configure.args  --mandir=${prefix}/share/man \
                --enable-static \
                --with-libxml-prefix=${prefix} \
                --without-python \
                --without-crypto

use_parallel_build  yes

pre-configure {
    reinplace s|need_relink=yes|need_relink=no| ${worksrcpath}/ltmain.sh
}

post-patch {
    if {![variant_isset doc]} {
        reinplace -E "/^install-data-am:/s|install-data-local||" ${worksrcpath}/doc/Makefile.in
        reinplace -E "/^all:/s|web||" ${worksrcpath}/doc/Makefile.in
    }
}

test.run        yes
test.target     check

pre-test {
    set path {}
    fs-traverse -depth f $worksrcpath {
        if {[file isdirectory $f] && [file tail $f] eq ".libs"} {
            lappend path $f
            continue
        }
    }
    test.env    DYLD_LIBRARY_PATH=[join $path :]
}

post-destroot {
    set docdir ${prefix}/share/doc/${name}-${version}
    if {![variant_isset doc]} {
        xinstall -d ${destroot}${docdir}
    }
    xinstall -m 0644 -W ${worksrcpath} AUTHORS COPYING ChangeLog Copyright FEATURES \
        NEWS README TODO ${destroot}${docdir}
}

variant doc description {Install extra documentation} {}

variant debug {
    configure.cflags-append -O0 -g
    configure.args-append --with-debugger
}

livecheck.type  regex
livecheck.url   ${homepage}news.html
livecheck.regex {<h3>(\d+(?:\.\d+)*): .*</h3>}
