# $Id$

PortSystem              1.0

name                    pango
version                 1.24.0
set branch              [join [lrange [split ${version} .] 0 1] .]
categories              x11
maintainers             ryandesign
homepage                http://www.pango.org/
master_sites            gnome:sources/pango/${branch}
platforms               darwin
use_bzip2               yes
use_parallel_build      yes

description \
    Framework for the layout and rendering of i18n text

long_description \
    The goal of the Pango project is to provide an \
    open-source framework for the layout and rendering \
    of internationalized text.

checksums \
    md5     d209f41079833cd2ef2c5e580ab9c5ee \
    sha1    32e99f3f1b4ca550225837bf35d581d4d92d08a9 \
    rmd160  234431b61c50ec7512873fe51ddfda23b4a395b2

depends_build \
    port:pkgconfig

depends_lib \
    path:lib/pkgconfig/glib-2.0.pc:glib2 \
    port:Xft2 \
    path:lib/pkgconfig/cairo.pc:cairo \

patchfiles \
    patch-ltmain.sh.diff

configure.ccache        no

platform macosx {}
variant quartz requires macosx description {Add Quartz graphics interface} {}

pre-extract {
    set glib_minimum_version 2.17.3
    set glib_installed_version [exec pkg-config glib-2.0 --modversion]
    if {[rpm-vercomp ${glib_installed_version} ${glib_minimum_version}] < 0} {
        return -code error "pango ${version} requires glib ${glib_minimum_version} or later but you have glib ${glib_installed_version}."
    }
    
    set cairo_minimum_version 1.7.4
    set cairo_installed_version [exec pkg-config cairo --modversion]
    if {[rpm-vercomp ${cairo_installed_version} ${cairo_minimum_version}] < 0} {
        return -code error "pango ${version} requires cairo ${cairo_minimum_version} or later but you have cairo ${cairo_installed_version}."
    }
    
    set cairo_quartz_pc ${prefix}/lib/pkgconfig/cairo-quartz.pc
    if {[variant_isset quartz]} {
        if {![file exists ${cairo_quartz_pc}]} {
            ui_msg "To install pango with the quartz variant, cairo must be installed with the quartz variant."
            return -code error "incompatible cairo installation"
        }
    } else {
        if {[file exists ${cairo_quartz_pc}]} {
            ui_msg "To install pango without the quartz variant, cairo must be installed without the quartz variant."
            return -code error "incompatible cairo installation"
        }
    }
}

configure.cppflags-append \
    -no-cpp-precomp

configure.ldflags-append \
    -no-undefined \
    -bind_at_load

configure.args \
    --enable-static

# AC_X_PATH blindly asks xmkmf where X11 is, and it always uses /usr/X11R6.
# This block helps us link correctly and setup our pc files correctly when we
# are +system_x11 and x11prefix is somewhere non-standard and should cause
# AC_X_PATH to let us setup our CPPFLAGS and LDFLAGS without interference
configure.args-append --x-include=${prefix}/include --x-lib=${prefix}/lib
if { ![file exists ${prefix}/lib/pkgconfig/x11.pc] } {
    pre-configure {
        configure.cppflags-append -I${x11prefix}/include
        configure.ldflags-append  -L${x11prefix}/lib
    }

    # And this will similarly get ports that use pkgconfig to find our pkgconfig-less libX11
    post-destroot {
        if {![file exists ${x11prefix}/lib/pkgconfig/x11.pc]} {
            foreach pc [glob ${destroot}${prefix}/lib/pkgconfig/*.pc] {
                reinplace "s:-lX11:-L${prefix}/lib -L${x11prefix}/lib -lX11:g" ${pc}
            }
        }
    }
}

variant no_x11 {
    depends_lib-delete \
        port:Xft2
    configure.args-append \
        --without-x
}

post-destroot {
    if {[variant_isset no_x11]} {
        xinstall -d ${destroot}${prefix}/etc/pango
    }
    xinstall -m 0644 ${worksrcpath}/modules/pangorc \
        ${destroot}${prefix}/etc/pango
    reinplace "s|\\.\\./modules/|${prefix}/etc/pango/|g" \
        ${destroot}${prefix}/etc/pango/pangorc
    
    system "env LANG=C DYLD_LIBRARY_PATH=${destroot}${prefix}/lib \
        ${destroot}${prefix}/bin/pango-querymodules ${destroot}${prefix}/lib/pango/1.6.0/modules/*.so \
        >${destroot}${prefix}/etc/pango/pango.modules"
    reinplace s|${destroot}||g ${destroot}${prefix}/etc/pango/pango.modules
    
    set docdir ${prefix}/share/doc/${name}-${version}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} AUTHORS ChangeLog COPYING MAINTAINERS NEWS README THANKS \
        ${destroot}${docdir}
}

test.run                yes
test.target             check

livecheck.check         regex
livecheck.url           http://ftp.gnome.org/pub/GNOME/sources/${name}/${branch}/?C=M&O=D
livecheck.regex         ${name}-(\[0-9.\]+)\\.tar
