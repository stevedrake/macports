# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# $Id:$

PortSystem          1.0

name                qt4-x11
version             4.4.0
categories	    x11
maintainers         mcalhoun
homepage            http://www.trolltech.com/
platforms           darwin
description         Qt Tool Kit
long_description    This is Qt, TrollTech's C++ toolkit for writing cross-platform GUI applications.
master_sites        ftp://ftp.trolltech.com/qt/source/ \
                    http://ftp.iasi.roedu.net/mirrors/ftp.trolltech.com/qt/source/ \
                    http://ftp.ntua.gr/pub/X11/Qt/qt/source/ \
                    http://wftp.tu-chemnitz.de/pub/Qt/qt/source/
distname            qt-x11-opensource-src-${version}
checksums           \
    md5    f13ad0aa75efad314715930e663bad55          \
    sha1   f5e5cae003e2fb18eba147686b07f03078ef185e  \
    rmd160 7006f672c4ea9985ace6c57bbb1f710a1e444c7f
depends_lib          \
    port:zlib        \
    port:libungif    \
    port:tiff        \
    port:libpng      \
    port:libmng      \
    port:jpeg        \
    port:libiconv    \
    port:glib2       \
    port:dbus        \
    port:unixODBC    \
    port:mysql5      \
    port:sqlite3     \
    port:openssl     \
    port:fontconfig  \
    port:gettext

configure.cmd       "echo yes | ./configure"
configure.env       OPENSOURCE_CXXFLAGS=-D__USE_WS_X11__

# --prefix is not recognized
configure.pre_args

# -I and -L must be set in the configure script
#    (or else a few generated Makefiles will not seem them).
configure.cppflags
configure.ldflags

configure.args                                                 \
    -v                                                         \
    -prefix          ${prefix}                                 \
    -docdir          ${prefix}/share/doc/${portname}           \
    -headerdir       ${prefix}/include/${portname}             \
    -plugindir       ${prefix}/lib/${portname}-plugins         \
    -datadir         ${prefix}/share/${portname}               \
    -translationdir  ${prefix}/share/${portname}/translations  \
    -examplesdir     ${prefix}/share/${portname}/examples      \
    -demosdir        ${prefix}/share/${portname}/demos         \
    -system-sqlite                                             \
    -I${prefix}/include                                        \
    -I${prefix}/include/mysql5/mysql                           \
    -L${prefix}/lib                                            \
    -L${prefix}/lib/mysql5/mysql                               \
    -liconv                                                    \
    -lresolv                                                   \
    -no-rpath                                                  \
    -no-nas-sound

build.target        first
use_parallel_build  yes

destroot.destdir    INSTALL_ROOT="${destroot}"

patchfiles \
    patch-qprocess_unix.cpp.diff   \
    patch-qlibrary_unix.cpp.diff   \
    patch-q3process_unix.cpp.diff

platform darwin 7 {
    depends_build-append    port:cups-headers
}

platform darwin 9 {
    # See http://trac.macports.org/wiki/LeopardProblems
    post-patch {
        set dylibFile \
            /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
        reinplace -E \
            "s|^(QMAKE_LFLAGS\[ \t\]*=\[ \t\]*)|\\1 -Wl,-dylib_file,${dylibFile}:${dylibFile}|g" \
            ${worksrcpath}/mkspecs/darwin-g++/qmake.conf
    }
}

post-configure {
    # Assures local header is included instead of one from PCRE and OpenJPEG (and perhaps others).
    reinplace "s|\$(CFLAGS) \$(INCPATH)|\$(INCPATH) \$(CFLAGS)|g" ${worksrcpath}/src/3rdparty/webkit/WebCore/Makefile
    reinplace "s|\$(CXXFLAGS) \$(INCPATH)|\$(INCPATH) \$(CXXFLAGS)|g" ${worksrcpath}/src/3rdparty/webkit/WebCore/Makefile
}

post-patch {
    reinplace "s|ARCH=macosx|ARCH=`uname -p`|g" ${worksrcpath}/configure
    reinplace "s|/usr/X11R6/include|${x11prefix}/include|g" ${worksrcpath}/mkspecs/darwin-g++/qmake.conf
    reinplace "s|/usr/X11R6/lib|${x11prefix}/lib|g" ${worksrcpath}/mkspecs/darwin-g++/qmake.conf
    reinplace \
        "s|install_name\$\${LITERAL_WHITESPACE}|install_name\$\${LITERAL_WHITESPACE}\$\$\[QT_INSTALL_LIBS\]/|g" \
        ${worksrcpath}/mkspecs/darwin-g++/qmake.conf
    reinplace "s|Q_OS_DARWIN|Q_WS_MAC|g" ${worksrcpath}/qmake/generators/mac/pbuilder_pbx.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/tools/qstring.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/global/qglobal.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/io/qfsfileengine_unix.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/global/qlibraryinfo.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/tools/qlocale.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/io/qsettings_p.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/io/qsettings.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/qmake/option.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/plugin/qlibrary.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/kernel/qcoreapplication.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/thread/qthread_unix.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/gui/dialogs/qprintdialog.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/demos/mediaplayer/mediaplayer.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/demos/qtdemo/colors.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/demos/qtdemo/menumanager.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/examples/dialogs/standarddialogs/dialog.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/examples/help/remotecontrol/remotecontrol.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/examples/help/simpletextviewer/assistant.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/examples/tools/echoplugin/echowindow/echowindow.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/examples/tools/plugandpaint/mainwindow.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/codecs/qiconvcodec.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/codecs/qiconvcodec_p.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/io/qdir.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/kernel/qcoreapplication_p.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/tools/qpoint.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/corelib/tools/qrect.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/gui/text/qfont.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/gui/text/qfontdatabase.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/gui/widgets/qdockwidget.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/plugins/accessible/widgets/simplewidgets.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/qt3support/other/q3accel.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/qt3support/other/q3polygonscanner.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/qt3support/text/q3textedit.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/sql/drivers/odbc/qsql_odbc.h
    reinplace "s|(Q_OS_MAC)|(Q_WS_MAC)|g" ${worksrcpath}/src/tools/uic/cpp/cppwriteinitialization.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/src/tools/uic/cpp/cppwriteinitialization.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/assistant/compat/lib/qassistantclient.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/assistant/lib/qhelpsearchresultwidget.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/designer/src/designer/assistantclient.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/designer/src/designer/qdesigner_actions.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/designer/src/lib/uilib/abstractformbuilder.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/linguist/linguist/trwindow.cpp
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/linguist/shared/proparserutils.h
    reinplace "s|Q_OS_MAC|Q_WS_MAC|g" ${worksrcpath}/tools/shared/findwidget/findwidget.cpp
}

post-destroot {
    foreach doc {INSTALL LICENSE.GPL2 LICENSE.GPL3 LICENSE.QPL OPENSOURCE-NOTICE.TXT README \
                     GPL_EXCEPTION_ADDENDUM.TXT GPL_EXCEPTION.TXT} {
        xinstall -c -m 644 ${worksrcpath}/$doc ${destroot}${prefix}/share/doc/${portname}
    }
}

livecheck.check     regex
livecheck.url       http://trolltech.com/developer/downloads/qt/x11
livecheck.regex     "The current version of Qt/X11 Open Source Edition is (4(?:\\.\\d+)*)"
