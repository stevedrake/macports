From 68a9ee8370e6f9b38218376ac92d5130a5b0ef1e Mon Sep 17 00:00:00 2001
From: Keith Packard <keithp@keithp.com>
Date: Fri, 7 May 2010 22:56:04 -0700
Subject: [PATCH 1/7] Clean up RandR12 bits on screen close (bug 27114)

When resetting the server, pScrn->EnterVT must be unwrapped or the
next server generation will end up wrapping the wrapper and causing an
infinite recursion on EnterVT.

Signed-off-by: Keith Packard <keithp@keithp.com>
Tested-by: Michael Stapelberg <michael+freedesktop@stapelberg.de>
---
 hw/xfree86/modes/xf86Crtc.c    |    2 ++
 hw/xfree86/modes/xf86RandR12.c |   26 +++++++++++++++++++++++++-
 hw/xfree86/modes/xf86RandR12.h |    1 +
 3 files changed, 28 insertions(+), 1 deletions(-)

diff --git xorg-server-1.8.99.901/hw/xfree86/modes/xf86Crtc.c xorg-server-1.8.99.901/hw/xfree86/modes/xf86Crtc.c
index a62a63f..7f6fad3 100644
--- xorg-server-1.8.99.901/hw/xfree86/modes/xf86Crtc.c
+++ xorg-server-1.8.99.901/hw/xfree86/modes/xf86Crtc.c
@@ -753,6 +753,8 @@ xf86CrtcCloseScreen (int index, ScreenPtr screen)
 
 	crtc->randr_crtc = NULL;
     }
+    xf86RandR12CloseScreen (screen);
+
     return screen->CloseScreen (index, screen);
 }
 
diff --git xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.c xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.c
index bb4d75e..043ceee 100644
--- xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.c
+++ xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.c
@@ -928,6 +928,24 @@ xf86RandR12Init (ScreenPtr pScreen)
 }
 
 void
+xf86RandR12CloseScreen (ScreenPtr pScreen)
+{
+    XF86RandRInfoPtr	randrp;
+
+#if XORG_VERSION_CURRENT < XORG_VERSION_NUMERIC(7,0,0,0,0)
+    if (xf86RandR12Key == NULL)
+	return;
+#endif
+
+    randrp = XF86RANDRINFO(pScreen);
+#if RANDR_12_INTERFACE
+    xf86Screens[pScreen->myNum]->EnterVT = randrp->orig_EnterVT;
+#endif
+
+    free(randrp);
+}
+
+void
 xf86RandR12SetRotations (ScreenPtr pScreen, Rotation rotations)
 {
     XF86RandRInfoPtr	randrp;
@@ -1755,10 +1773,16 @@ static Bool
 xf86RandR12EnterVT (int screen_index, int flags)
 {
     ScreenPtr        pScreen = screenInfo.screens[screen_index];
+    ScrnInfoPtr	     pScrn = xf86Screens[screen_index];
     XF86RandRInfoPtr randrp  = XF86RANDRINFO(pScreen);
+    Bool	     ret;
 
     if (randrp->orig_EnterVT) {
-	if (!randrp->orig_EnterVT (screen_index, flags))
+	pScrn->EnterVT = randrp->orig_EnterVT;
+	ret = pScrn->EnterVT (screen_index, flags);
+	randrp->orig_EnterVT = pScrn->EnterVT;
+	pScrn->EnterVT = xf86RandR12EnterVT;
+	if (!ret)
 	    return FALSE;
     }
 
diff --git xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.h xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.h
index c8d9918..0c586be 100644
--- xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.h
+++ xorg-server-1.8.99.901/hw/xfree86/modes/xf86RandR12.h
@@ -30,6 +30,7 @@
 
 extern _X_EXPORT Bool xf86RandR12CreateScreenResources (ScreenPtr pScreen);
 extern _X_EXPORT Bool xf86RandR12Init(ScreenPtr pScreen);
+extern _X_EXPORT void xf86RandR12CloseScreen(ScreenPtr pScreen);
 extern _X_EXPORT void xf86RandR12SetRotations (ScreenPtr pScreen, Rotation rotation);
 extern _X_EXPORT void xf86RandR12SetTransformSupport (ScreenPtr pScreen, Bool transforms);
 extern _X_EXPORT Bool xf86RandR12SetConfig(ScreenPtr pScreen, Rotation rotation, int rate,
-- 
1.7.1

