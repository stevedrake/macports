diff --git a/hw/xquartz/X11Application.m b/hw/xquartz/X11Application.m
index 6a0e011..e459b4c 100644
--- hw/xquartz/X11Application.m
+++ hw/xquartz/X11Application.m
@@ -1067,15 +1067,14 @@ static inline int ensure_flag(int flags, int device_independent, int device_depe
                 pDev = darwinTabletCurrent;
             }
 
+            if(!quartzServerVisible) {
+#if 0
 /* Seems this has somehow triggered 100% CPU usage while X11.app is in the
  * background on some obscure HW configurations.
  * http://xquartz.macosforge.org/trac/ticket/241
  */
-#if 0
+//#if defined(XPLUGIN_VERSION) && XPLUGIN_VERSION > 0
 /* Older libXplugin (Tiger/"Stock" Leopard) aren't thread safe, so we can't call xp_find_window from the Appkit thread */
-#ifdef XPLUGIN_VERSION
-#if XPLUGIN_VERSION > 0
-            if(!quartzServerVisible) {
                 xp_window_id wid;
 
                 /* Sigh. Need to check that we're really over one of
@@ -1088,11 +1087,9 @@ static inline int ensure_flag(int flags, int device_independent, int device_depe
                 
                 if (xp_find_window(pointer_x, pointer_y, 0, &wid) == XP_Success &&
                     wid == 0)
+#endif
                     return;        
             }
-#endif
-#endif
-#endif
             
             DarwinSendPointerEvents(pDev, ev_type, ev_button, pointer_x, pointer_y,
                                     pressure, tilt_x, tilt_y);
