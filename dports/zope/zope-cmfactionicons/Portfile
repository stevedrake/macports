# $Id: Portfile,v 1.1 2004/03/19 07:16:49 rshaw Exp $
PortSystem 1.0

name			zope-cmfactionicons
version			0.9
categories		www zope python
maintainers		rshaw@opendarwin.org
description		CMFActionIcons product for use with Zope CMF/Plone
long_description	This product is a add-on for the Zope Content \
					Management Framework (CMF).  It should be useful \
					with Plone, CPS, and other CMF-derived extensions, \
					as well.  The product provides: \
					- A new tool, 'portal_actionicons', which serves as \
					a registry mapping object actions (using category \
					and action ID) to a descriptive title, a priority, \
					and an icon ID.  The tool post-processes a set of \
					actions (i.e., those generated by the \
					'portal_actions' tool), decorating them with \
					additional information, and sorting them according \
					to priority. \
					- ZPT macros which build either horizontal or \
					vertical icon bars for a set of actions.
platforms		darwin freebsd
set prodname	CMFActionIcons
homepage		http://zope.org/Members/tseaver/${prodname}
master_sites	${homepage}/${prodname}-${version}/
dist_subdir		zope
distname		${prodname}-${version}
checksums		md5 4c33a6daefd75e5ee63a3afb693628f8

# Use Python 2.3 from DarwinPorts explicitly 
set python		${prefix}/bin/python2.3
set pythonlib	${prefix}/lib/python2.3

# Location to install Zope products and the Zope user                  
set zopehome	${prefix}/libexec/Zope
set zopeinst	${prefix}/www/Zope
set zopeprod	${zopehome}/lib/python/Products
set zopeuser	zope
set zopegroup	www

# Depends on Zope
depends_build	path:${zopehome}:zope

# Depends on these Zope products
depends_run		path:${zopeprod}/CMFCore:zope-cmf

platform freebsd {
	extract.post_args	| gtar -xf -
}
post-extract {
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
	system "find ${worksrcpath} -type d -name CVS | xargs rm -rf"
}

use_configure	no

build {
	file copy -force ${zopehome}/bin/compilezpy.py ${workpath}
	reinplace "s|^.*sys.stdout|#&|" ${workpath}/compilezpy.py
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
	system "cd ${worksrcpath} && ${python} ${workpath}/compilezpy.py"
}

destroot {
	if {$env(USER) != "root"} {
		ui_msg "------------------------------------------------------------"
		ui_msg "Note that you are not installing as root, so files installed"
		ui_msg "by this port will not end up with proper ownership and"
		ui_msg "likely not work correctly with Zope."
		ui_msg "------------------------------------------------------------"
	}

	# Install product
	xinstall -d -m 0755 ${destroot}${zopeprod}
	system "cp -R ${worksrcpath}/${prodname} ${destroot}${zopeprod}"
	if {$env(USER) == "root"} {
		system "chown -R ${zopeuser} ${destroot}${zopehome}"
		system "chgrp -R ${zopegroup} ${destroot}${zopehome}"
	}
}

variant cvs {
	version		[clock format [clock seconds] -format %Y%m%d]
	distname	${prodname}-${version}

	fetch.type	cvs
	cvs.root	:pserver:anonymous@cvs.zope.org:/cvs-repository
	cvs.module	Products/${prodname}
	cvs.args	-d ${prodname}
	cvs.dir		${worksrcpath}
	pre-fetch {
		file mkdir ${worksrcpath}
	}
}

