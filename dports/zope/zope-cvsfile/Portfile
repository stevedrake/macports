# $Id: Portfile,v 1.3 2004/03/19 07:55:52 rshaw Exp $
PortSystem 1.0

name			zope-cvsfile
version			0.9.0
categories		www zope python
maintainers		rshaw@opendarwin.org
description		This is the CVSFile Zope Product.
long_description	The CVSFile package is a Zope product.  CVSFile \
					allows one to use CVS as a version control system \
					for Zope content.  The developer creates a CVSFile, \
					pointing to a file in the developer's CVS Sandbox on \
					the Zope server.  Other Zope objects are able to \
					access the content, but it is actually stored on the \
					disk, rather than in the ZODB.  CVSFile enables the \
					user to modify the file and do simple CVS commands. \
					CVSFile inherits from ExternalFile \
					(http://www.zope.org/Members/arielpartners/ExternalFile), \
					a Zope product that behaves like a standard Zope \
					object like File, Page Template,or DTMLMethod, but \
					points to external content in the filesystem.
platforms		darwin freebsd
set prodname	CVSFile
homepage		http://zope.org/Members/arielpartners/${prodname}
master_sites	${homepage}/${version}/
dist_subdir		zope
extract.suffix	.zip
use_zip			yes
distname		${prodname}-[strsed ${version} {g/[.]/-/}]
checksums		md5 e2841081d9b038c8a1acee97ff4b0e17

# Use Python 2.3 from DarwinPorts explicitly 
set python		${prefix}/bin/python2.3
set pythonlib	${prefix}/lib/python2.3

# Location to install Zope products and the Zope user                  
set zopehome	${prefix}/libexec/Zope
set zopeinst	${prefix}/www/Zope
set zopeprod	${zopehome}/lib/python/Products
set zopeuser	zope
set zopegroup	www

# Depends on Zope
depends_build	path:${zopehome}:zope

# Depends on these Zope products and external programs
depends_run		path:${zopeprod}/ExternalFile:zope-externalfile \
				bin:cvs:cvs

platform freebsd {
	extract.post_args	| gtar -xf -
}
extract.dir		${worksrcpath}
pre-extract {
	file mkdir ${worksrcpath}
}
post-extract {
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
	system "find ${worksrcpath} -type d -name CVS | xargs rm -rf"
}

use_configure	no

build {
	file copy -force ${zopehome}/bin/compilezpy.py ${workpath}
	reinplace "s|^.*sys.stdout|#&|" ${workpath}/compilezpy.py
	reinplace "s|'tests'|& and name != 'extras'|" ${workpath}/compilezpy.py
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
	system "cd ${worksrcpath} && ${python} ${workpath}/compilezpy.py"
}

destroot {
	if {$env(USER) != "root"} {
		ui_msg "------------------------------------------------------------"
		ui_msg "Note that you are not installing as root, so files installed"
		ui_msg "by this port will not end up with proper ownership and"
		ui_msg "likely not work correctly with Zope."
		ui_msg "------------------------------------------------------------"
	}

	# Install product
	xinstall -d -m 0755 ${destroot}${zopeprod}
	system "cp -R ${worksrcpath}/${prodname} ${destroot}${zopeprod}"
	if {$env(USER) == "root"} {
		system "chown -R ${zopeuser} ${destroot}${zopehome}"
		system "chgrp -R ${zopegroup} ${destroot}${zopehome}"
	}
}

