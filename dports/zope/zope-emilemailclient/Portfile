# $Id: Portfile,v 1.4 2004/03/20 04:12:44 rshaw Exp $
PortSystem 1.0

name			zope-emilemailclient
version			0.6.1
categories		www zope python
maintainers		rshaw@opendarwin.org
description		Emil Email Client is an email client for Zope
long_description	Emil Email Client is an email client similar to \
					those from the free webmail providers.  At the \
					moment you can: \
					- read, view, reply your emails from a POP3 account \
					- addressbook \
					- nicknames \
					- send and view attachements \
					- import attachments into zope \
					- spam list to avoid receiving unwanted emails  \
					- use apop for increased security, when connecting \
					  to a mail server \
					- send SMS via email gateway to mobile phone \
					- access emails from phone via WAP \
					- notification of new email via SMS  \
					- filter incoming emails \
					- (using these filters) send emails to your own \
					  zope-methods 
platforms		darwin freebsd
set prodname	Emil_Email_Client
homepage		http://zope.org/Members/andorsch/${prodname}
master_sites	sourceforge:emil-email
dist_subdir		zope
distname		[string tolower ${prodname}]_${version}
checksums		md5 4120a426e6b865cd1543f1bb6aa418c3

# Use Python 2.3 from DarwinPorts explicitly 
set python		${prefix}/bin/python2.3
set pythonlib	${prefix}/lib/python2.3

# Location to install Zope products and the Zope user                  
set zopehome	${prefix}/libexec/Zope
set zopeinst	${prefix}/www/Zope
set zopeprod	${zopehome}/lib/python/Products
set zopeuser	zope
set zopegroup	www

# Depends on Zope
depends_build	path:${zopehome}:zope

# Depends on these Zope products
# none

platform freebsd {
	extract.post_args	| gtar -xf -
}
extract.dir		${worksrcpath}
pre-extract {
	file mkdir ${worksrcpath}
}
post-extract {
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
	system "find ${worksrcpath} -type d -name CVS | xargs rm -rf"
}

use_configure	no

build {
	file copy -force ${zopehome}/bin/compilezpy.py ${workpath}
	reinplace "s|^.*sys.stdout|#&|" ${workpath}/compilezpy.py
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
	system "cd ${worksrcpath} && ${python} ${workpath}/compilezpy.py"
}

destroot {
	if {$env(USER) != "root"} {
		ui_msg "------------------------------------------------------------"
		ui_msg "Note that you are not installing as root, so files installed"
		ui_msg "by this port will not end up with proper ownership and"
		ui_msg "likely not work correctly with Zope."
		ui_msg "------------------------------------------------------------"
	}

	# Install products
	xinstall -d -m 0755 ${destroot}${zopeprod}
	system "cp -R ${worksrcpath}/${prodname} ${destroot}${zopeprod}"
	if {$env(USER) == "root"} {
		system "chown -R ${zopeuser} ${destroot}${zopehome}"
		system "chgrp -R ${zopegroup} ${destroot}${zopehome}"
	}
} 

variant cvs {
	version		[clock format [clock seconds] -format %Y%m%d]
	distname	${prodname}-${version}

	fetch.type	cvs
	cvs.root	:pserver:anonymous@cvs.sourceforge.net:/cvsroot/emil-email
	cvs.module	${prodname}
	cvs.dir		${worksrcpath}
	pre-fetch {
		file mkdir ${worksrcpath}
	}
}

